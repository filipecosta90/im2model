!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ATTRIB_N_UNIFORM_SETTERS	vis/program.cpp	/^#define ATTRIB_N_UNIFORM_SETTERS(/;"	macro	line:94	language:C++	file:
AberrationDefinition	wavimg_prm.hpp	/^    enum AberrationDefinition {$/;"	enum	line:120	language:C++	class:WAVIMG_prm	access:public
ActionStatusType	treeitem.h	/^    enum ActionStatusType { _status_NOT_READY, _status_READY_TO_RUN, _status_RUNNING, _status_RUNNED_OK, _status_RUNNED_ERROR };$/;"	enum	line:28	language:C++	class:TreeItem	access:public
Application	im2model_gui.cpp	/^    Application(int& argc, char** argv ) : QApplication(argc, argv) {$/;"	function	line:27	language:C++	class:final	access:public
ApplicationLog	application_log.cpp	/^  ApplicationLog::ApplicationLog( boost::filesystem::path app_path ){$/;"	function	line:12	language:C++	class:ApplicationLog::ApplicationLog
ApplicationLog	application_log.cpp	/^namespace ApplicationLog{$/;"	namespace	line:3	language:C++	file:
ApplicationLog	application_log.hpp	/^  class ApplicationLog {$/;"	class	line:35	language:C++	namespace:ApplicationLog
ApplicationLog	application_log.hpp	/^namespace ApplicationLog {$/;"	namespace	line:19	language:C++
Atom	atom.cpp	/^Atom::Atom()$/;"	function	line:4	language:C++	class:Atom
Atom	atom.hpp	/^class Atom {$/;"	class	line:7	language:C++
Atom_Info	atom_info.cpp	/^Atom_Info::Atom_Info($/;"	function	line:6	language:C++	class:Atom_Info
Atom_Info	atom_info.hpp	/^class Atom_Info$/;"	class	line:9	language:C++
BaseBin	base_bin.cpp	/^BaseBin::BaseBin( boost::process::ipstream &async_io_buffer_out ) : _io_pipe_out(async_io_buffer_out) {$/;"	function	line:4	language:C++	class:BaseBin
BaseBin	base_bin.hpp	/^class BaseBin {$/;"	class	line:29	language:C++
BaseCell	base_cell.cpp	/^BaseCell::BaseCell(){$/;"	function	line:3	language:C++	class:BaseCell
BaseCell	base_cell.hpp	/^class BaseCell {$/;"	class	line:51	language:C++
BaseCrystal	base_crystal.cpp	/^BaseCrystal::BaseCrystal( ) {$/;"	function	line:3	language:C++	class:BaseCrystal
BaseCrystal	base_crystal.hpp	/^class BaseCrystal {$/;"	class	line:31	language:C++
BaseImage	base_image.cpp	/^BaseImage::BaseImage() {$/;"	function	line:3	language:C++	class:BaseImage
BaseImage	base_image.hpp	/^class BaseImage {$/;"	class	line:30	language:C++
BaseLogger	base_logger.cpp	/^BaseLogger::BaseLogger() {$/;"	function	line:3	language:C++	class:BaseLogger
BaseLogger	base_logger.hpp	/^class BaseLogger {$/;"	class	line:29	language:C++
BinaryResult_PixelSize_height	emd_wrapper.h	/^    double BinaryResult_PixelSize_height  = 0.0f;$/;"	member	line:79	language:C++	class:EMDWrapper	access:protected
BinaryResult_PixelSize_width	emd_wrapper.h	/^    double BinaryResult_PixelSize_width = 0.0f;$/;"	member	line:77	language:C++	class:EMDWrapper	access:protected
CELL_DELEGATE_HPP	cv_tdmap_cell_image_frame_delegate.h	/^#define CELL_DELEGATE_HPP$/;"	macro	line:2	language:C++
CELSLC_prm	celslc_prm.cpp	/^CELSLC_prm::CELSLC_prm( boost::process::ipstream &async_io_buffer_out ) : BaseBin ( async_io_buffer_out ) {$/;"	function	line:5	language:C++	class:CELSLC_prm
CELSLC_prm	celslc_prm.hpp	/^class CELSLC_prm : public BaseBin, public BaseCrystal, public BaseImage {$/;"	class	line:42	language:C++	inherits:BaseBin,BaseCrystal,BaseImage
CMAKE_BINARY_DIR	Makefile	/^CMAKE_BINARY_DIR = \/Users\/filipeoliveira\/Documents\/im2model$/;"	macro	line:54	language:Make
CMAKE_COMMAND	Makefile	/^CMAKE_COMMAND = \/usr\/local\/Cellar\/cmake\/3.8.2\/bin\/cmake$/;"	macro	line:42	language:Make
CMAKE_SOURCE_DIR	Makefile	/^CMAKE_SOURCE_DIR = \/Users\/filipeoliveira\/Documents\/im2model$/;"	macro	line:51	language:Make
CUSTOMTOOLBUTTON_H	custom_tool_button.h	/^#define CUSTOMTOOLBUTTON_H$/;"	macro	line:3	language:C++
CVImageWidget	cv_image_widget.cpp	/^CVImageWidget::CVImageWidget(QWidget *parent ) : QWidget(parent) , scaleFactor(1), _tmp_original(cv::Mat()), _tmp_current(cv::Mat()) {$/;"	function	line:3	language:C++	class:CVImageWidget
CVImageWidget	cv_image_widget.h	/^class CVImageWidget : public QWidget$/;"	class	line:16	language:C++	inherits:QWidget
CVTDMAPIMAGEFRAME_H	cv_tdmap_cell_image_frame.h	/^#define CVTDMAPIMAGEFRAME_H$/;"	macro	line:3	language:C++
Camera	vis/camera.cpp	/^Camera::Camera() :$/;"	function	line:12	language:C++	class:Camera
Camera	vis/camera.hpp	/^    class Camera {$/;"	class	line:17	language:C++	namespace:vis
ChemDatabase_INCLUDE_ONCE	chem_database.hpp	/^#define ChemDatabase_INCLUDE_ONCE$/;"	macro	line:33	language:C++
Chem_Database	chem_database.cpp	/^Chem_Database::Chem_Database(){$/;"	function	line:4	language:C++	class:Chem_Database
Chem_Database	chem_database.hpp	/^class Chem_Database{$/;"	class	line:45	language:C++
ColumnCount	gui_tdmap_table.h	/^    int ColumnCount = 0;$/;"	member	line:55	language:C++	class:TDMap_Table	access:private
ColumnSize	gui_tdmap_table.h	/^    int ColumnSize = 150;$/;"	member	line:56	language:C++	class:TDMap_Table	access:private
Coma	wavimg_prm.hpp	/^      ImageShift = 0, Defocus = 1, TwofoldAstigmatism = 2, Coma = 3,$/;"	enumerator	line:121	language:C++	enum:WAVIMG_prm::AberrationDefinition
Coma5thOrder	wavimg_prm.hpp	/^      FourfoldAstigmatism = 7, Coma5thOrder = 8, ThreeLobeAberration = 9,$/;"	enumerator	line:123	language:C++	enum:WAVIMG_prm::AberrationDefinition
CustomToolButton	custom_tool_button.cpp	/^CustomToolButton::CustomToolButton(QWidget *parent) :$/;"	function	line:3	language:C++	class:CustomToolButton
CustomToolButton	custom_tool_button.h	/^class CustomToolButton : public QToolButton$/;"	class	line:8	language:C++	inherits:QToolButton
CvImageCellWidget	cv_image_cell_widget.h	/^    explicit CvImageCellWidget(QWidget *parent = 0) :  QWidget(parent)$/;"	function	line:17	language:C++	class:CvImageCellWidget	access:public
CvImageCellWidget	cv_image_cell_widget.h	/^class CvImageCellWidget : public QWidget$/;"	class	line:13	language:C++	inherits:QWidget
CvImageDelegate	cv_image_delegate.cpp	/^CvImageDelegate::CvImageDelegate(QObject *parent) :$/;"	function	line:3	language:C++	class:CvImageDelegate
CvImageDelegate	cv_image_delegate.h	/^class CvImageDelegate : public QItemDelegate$/;"	class	line:12	language:C++	inherits:QItemDelegate
CvImageEdgeFrame	cv_image_edge_frame.h	/^    explicit CvImageEdgeFrame(QWidget *parent = 0) : QWidget(parent)$/;"	function	line:18	language:C++	class:CvImageEdgeFrame	access:public
CvImageEdgeFrame	cv_image_edge_frame.h	/^class CvImageEdgeFrame : public QWidget$/;"	class	line:14	language:C++	inherits:QWidget
CvImageFrameTableWidget	cv_image_table_frame.h	/^    explicit CvImageFrameTableWidget(QWidget *parent = 0) : CvImageFrameWidget(parent)$/;"	function	line:19	language:C++	class:CvImageFrameTableWidget	access:public
CvImageFrameTableWidget	cv_image_table_frame.h	/^class CvImageFrameTableWidget : public CvImageFrameWidget$/;"	class	line:15	language:C++	inherits:CvImageFrameWidget
CvImageFrameWidget	cv_image_frame.cpp	/^CvImageFrameWidget::CvImageFrameWidget(QWidget *parent ) : QWidget(parent) {$/;"	function	line:3	language:C++	class:CvImageFrameWidget
CvImageFrameWidget	cv_image_frame.h	/^class CvImageFrameWidget : public QWidget$/;"	class	line:14	language:C++	inherits:QWidget
CvTDMapImageFrame	cv_tdmap_cell_image_frame.cpp	/^CvTDMapImageFrame::CvTDMapImageFrame( ) {$/;"	function	line:3	language:C++	class:CvTDMapImageFrame
CvTDMapImageFrame	cv_tdmap_cell_image_frame.cpp	/^CvTDMapImageFrame::CvTDMapImageFrame( QWidget * parent ) {$/;"	function	line:25	language:C++	class:CvTDMapImageFrame
CvTDMapImageFrame	cv_tdmap_cell_image_frame.h	/^class CvTDMapImageFrame {$/;"	class	line:17	language:C++
CvTDMapImageFrameDelegate	cv_tdmap_cell_image_frame_delegate.h	/^    CvTDMapImageFrameDelegate(int margin, QWidget *parent = 0) : QStyledItemDelegate(parent),  m_margin(margin) {}$/;"	function	line:31	language:C++	class:CvTDMapImageFrameDelegate	access:public
CvTDMapImageFrameDelegate	cv_tdmap_cell_image_frame_delegate.h	/^class CvTDMapImageFrameDelegate : public QStyledItemDelegate$/;"	class	line:27	language:C++	inherits:QStyledItemDelegate
DAT_EXTENSION	wavimg_prm.cpp	/^static const std::string DAT_EXTENSION = ".dat";$/;"	variable	line:3	language:C++	file:
DEBUG_MODE	td_map.hpp	/^    enum ExecLogMode {FULL_LOG, DEBUG_MODE, SILENT_MODE, USER_DEFINED_LOG_MODE };$/;"	enumerator	line:103	language:C++	enum:TDMap::ExecLogMode
Defocus	wavimg_prm.hpp	/^      ImageShift = 0, Defocus = 1, TwofoldAstigmatism = 2, Coma = 3,$/;"	enumerator	line:121	language:C++	enum:WAVIMG_prm::AberrationDefinition
DelegateType	treeitem.h	/^    enum DelegateType { _delegate_ACTION_CHECK, _delegate_FILE, _delegate_DIR, _delegate_TEXT, _delegate_TEXT_ACTION, _delegate_SLIDER_INT, _delegate_TEXT_DOCUMENT, _delegate_TEXT_BROWSER, _delegate_DROP };$/;"	enum	line:27	language:C++	class:TreeItem	access:public
EMDAttribute	emd_attribute.cpp	/^EMDAttribute::EMDAttribute( hid_t id ){$/;"	function	line:6	language:C++	class:EMDAttribute
EMDAttribute	emd_attribute.h	/^class EMDAttribute : public EMDObject {$/;"	class	line:16	language:C++	inherits:EMDObject
EMDDataSet	emd_dataset.cpp	/^EMDDataSet::EMDDataSet( hid_t id ){$/;"	function	line:3	language:C++	class:EMDDataSet
EMDDataSet	emd_dataset.h	/^class EMDDataSet : public EMDObject {$/;"	class	line:37	language:C++	inherits:EMDObject
EMDGroup	emd_group.cpp	/^EMDGroup::EMDGroup( ){$/;"	function	line:3	language:C++	class:EMDGroup
EMDGroup	emd_group.h	/^class EMDGroup : public EMDObject {$/;"	class	line:65	language:C++	inherits:EMDObject
EMDObject	emd_object.h	/^class EMDObject {$/;"	class	line:29	language:C++
EMDWrapper	emd_wrapper.cpp	/^EMDWrapper::EMDWrapper(){}$/;"	function	line:3	language:C++	class:EMDWrapper
EMDWrapper	emd_wrapper.h	/^class EMDWrapper {$/;"	class	line:68	language:C++
EQUALS	Makefile	/^EQUALS = =$/;"	macro	line:48	language:Make
Edge	edge.hpp	/^struct Edge {$/;"	struct	line:20	language:C++
EightfoldAstigmatism	wavimg_prm.hpp	/^      RosetteAberration = 13, SixfoldAstigmatism = 14, EightfoldAstigmatism = 23$/;"	enumerator	line:125	language:C++	enum:WAVIMG_prm::AberrationDefinition
ExecLogMode	td_map.hpp	/^    enum ExecLogMode {FULL_LOG, DEBUG_MODE, SILENT_MODE, USER_DEFINED_LOG_MODE };$/;"	enum	line:103	language:C++	class:TDMap	access:public
FANameIcon	QtAwesome.cpp	/^struct FANameIcon {$/;"	struct	line:160	language:C++	file:
FILEPUSHBUTTON_H	qt_file_push_button.h	/^#define FILEPUSHBUTTON_H$/;"	macro	line:2	language:C++
FULL_LOG	td_map.hpp	/^    enum ExecLogMode {FULL_LOG, DEBUG_MODE, SILENT_MODE, USER_DEFINED_LOG_MODE };$/;"	enumerator	line:103	language:C++	enum:TDMap::ExecLogMode
FilePushButton	qt_file_push_button.cpp	/^FilePushButton::FilePushButton( QString text, QWidget *parent ): QPushButton( text, parent )$/;"	function	line:4	language:C++	class:FilePushButton
FilePushButton	qt_file_push_button.cpp	/^FilePushButton::FilePushButton( QWidget *parent ): QPushButton( parent )$/;"	function	line:10	language:C++	class:FilePushButton
FilePushButton	qt_file_push_button.h	/^class FilePushButton : public QPushButton{$/;"	class	line:7	language:C++	inherits:QPushButton
FiveFoldAstigmatism	wavimg_prm.hpp	/^      FiveFoldAstigmatism = 10, SphericalAberration6thOrder = 11, StarAberration6thOrder = 12,$/;"	enumerator	line:124	language:C++	enum:WAVIMG_prm::AberrationDefinition
FourfoldAstigmatism	wavimg_prm.hpp	/^      FourfoldAstigmatism = 7, Coma5thOrder = 8, ThreeLobeAberration = 9,$/;"	enumerator	line:123	language:C++	enum:WAVIMG_prm::AberrationDefinition
GLM_FORCE_RADIANS	vis/opengl.hpp	/^#define GLM_FORCE_RADIANS$/;"	macro	line:39	language:C++
GROUP_OPTIONS_H	group_options.h	/^#define GROUP_OPTIONS_H$/;"	macro	line:2	language:C++
GUI_STREAM_HPP	gui_stream.hpp	/^#define GUI_STREAM_HPP$/;"	macro	line:2	language:C++
GuiSimOutUpdater	gui_sim_updater.hpp	/^    explicit GuiSimOutUpdater(TDMap* core_tdmap ,  QObject *parent = 0 ) : QObject(parent) {$/;"	function	line:21	language:C++	class:GuiSimOutUpdater	access:public
GuiSimOutUpdater	gui_sim_updater.hpp	/^class GuiSimOutUpdater : public QObject {$/;"	class	line:17	language:C++	inherits:QObject
H5_BUILT_AS_DYNAMIC_LIB	emd_attribute.h	/^#define H5_BUILT_AS_DYNAMIC_LIB$/;"	macro	line:7	language:C++
H5_BUILT_AS_DYNAMIC_LIB	emd_dataset.h	/^#define H5_BUILT_AS_DYNAMIC_LIB$/;"	macro	line:18	language:C++
H5_BUILT_AS_DYNAMIC_LIB	emd_group.h	/^#define H5_BUILT_AS_DYNAMIC_LIB$/;"	macro	line:51	language:C++
H5_BUILT_AS_DYNAMIC_LIB	emd_object.h	/^#define H5_BUILT_AS_DYNAMIC_LIB$/;"	macro	line:17	language:C++
H5_BUILT_AS_DYNAMIC_LIB	emd_wrapper.h	/^#define H5_BUILT_AS_DYNAMIC_LIB$/;"	macro	line:52	language:C++
ImageBounds	image_bounds.cpp	/^ImageBounds::ImageBounds(){$/;"	function	line:3	language:C++	class:ImageBounds
ImageBounds	image_bounds.hpp	/^class ImageBounds : public BaseImage {$/;"	class	line:48	language:C++	inherits:BaseImage
ImageShift	wavimg_prm.hpp	/^      ImageShift = 0, Defocus = 1, TwofoldAstigmatism = 2, Coma = 3,$/;"	enumerator	line:121	language:C++	enum:WAVIMG_prm::AberrationDefinition
Image_Crystal	deprecated/image_crystal.cpp	/^Image_Crystal::Image_Crystal( boost::process::ipstream& async_io_buffer_out ) : BaseCrystal ( async_io_buffer_out ){$/;"	function	line:4	language:C++	class:Image_Crystal
Image_Crystal	deprecated/image_crystal.hpp	/^class Image_Crystal : public BaseCrystal {$/;"	class	line:30	language:C++	inherits:BaseCrystal
MAX_NAME	emd_dataset.h	/^#define MAX_NAME /;"	macro	line:32	language:C++
MAX_NAME	emd_object.h	/^#define MAX_NAME /;"	macro	line:24	language:C++
MC	mc_driver.hpp	/^namespace MC{$/;"	namespace	line:15	language:C++
MC	mc_scanner.hpp	/^namespace MC{$/;"	namespace	line:13	language:C++
MC_Driver	mc_driver.cpp	/^MC::MC_Driver::MC_Driver(){$/;"	function	line:12	language:C++	class:MC::MC_Driver
MC_Driver	mc_driver.hpp	/^  class MC_Driver{$/;"	class	line:17	language:C++	namespace:MC
MC_Scanner	mc_scanner.hpp	/^      MC_Scanner(std::istream *in) : yyFlexLexer(in)$/;"	function	line:17	language:C++	class:MC::MC_Scanner	access:public
MC_Scanner	mc_scanner.hpp	/^  class MC_Scanner : public yyFlexLexer{$/;"	class	line:15	language:C++	namespace:MC	inherits:yyFlexLexer
MICROSCOPE_CORRECTED	td_map.hpp	/^    enum RefinementPreset { NO_REFINEMENT, MICROSCOPE_CORRECTED, MICROSCOPE_NON_CORRECTED, USER_DEFINED_PRESET };$/;"	enumerator	line:102	language:C++	enum:TDMap::RefinementPreset
MICROSCOPE_NON_CORRECTED	td_map.hpp	/^    enum RefinementPreset { NO_REFINEMENT, MICROSCOPE_CORRECTED, MICROSCOPE_NON_CORRECTED, USER_DEFINED_PRESET };$/;"	enumerator	line:102	language:C++	enum:TDMap::RefinementPreset
MSA_prm	msa_prm.cpp	/^MSA_prm::MSA_prm( boost::process::ipstream &async_io_buffer_out ) : BaseBin ( async_io_buffer_out ){$/;"	function	line:5	language:C++	class:MSA_prm
MSA_prm	msa_prm.hpp	/^class MSA_prm : public BaseBin, public BaseCrystal, public BaseImage  {$/;"	class	line:26	language:C++	inherits:BaseBin,BaseCrystal,BaseImage
MagicNumber	gui_tdmap_table.h	/^    enum { MagicNumber = 0x7F51C883 };$/;"	enumerator	line:52	language:C++	enum:TDMap_Table::__anon1
MainWindow	configwin.cpp	/^MainWindow::MainWindow( ApplicationLog::ApplicationLog* logger , QWidget *parent) : QMainWindow(parent), ui(new Ui::MainWindow) {$/;"	function	line:3	language:C++	class:MainWindow
MainWindow	configwin.h	/^class MainWindow : public QMainWindow {$/;"	class	line:54	language:C++	inherits:QMainWindow
MaxVerticalAngle	vis/camera.cpp	/^static const float MaxVerticalAngle = 85.0f; \/\/must be less than 90 to avoid gimbal lock$/;"	variable	line:10	language:C++	file:
NO_REFINEMENT	td_map.hpp	/^    enum RefinementPreset { NO_REFINEMENT, MICROSCOPE_CORRECTED, MICROSCOPE_NON_CORRECTED, USER_DEFINED_PRESET };$/;"	enumerator	line:102	language:C++	enum:TDMap::RefinementPreset
Optics_AccelerationVoltage	emd_wrapper.h	/^    double Optics_AccelerationVoltage = 0.0f;$/;"	member	line:76	language:C++	class:EMDWrapper	access:protected
Program	vis/program.cpp	/^Program::Program(const std::vector<Shader>& shaders) :$/;"	function	line:8	language:C++	class:Program
Program	vis/program.hpp	/^  class Program { $/;"	class	line:12	language:C++	namespace:vis
QDoubleValidatorReporter	qdouble_validator.cpp	/^QDoubleValidatorReporter::QDoubleValidatorReporter(QObject * parent) : QDoubleValidator(parent) {$/;"	function	line:8	language:C++	class:QDoubleValidatorReporter
QDoubleValidatorReporter	qdouble_validator.h	/^class QDoubleValidatorReporter : public QDoubleValidator {$/;"	class	line:12	language:C++	inherits:QDoubleValidator
QIntValidatorReporter	qint_validator.cpp	/^QIntValidatorReporter::QIntValidatorReporter(QObject * parent) : QIntValidator(parent) {$/;"	function	line:9	language:C++	class:QIntValidatorReporter
QIntValidatorReporter	qint_validator.h	/^class QIntValidatorReporter : public QIntValidator {$/;"	class	line:12	language:C++	inherits:QIntValidator
QLineEditToolTip	qline_edit_tooltip.cpp	/^QLineEditToolTip::QLineEditToolTip(QWidget * parent) : QLineEdit(parent) {$/;"	function	line:9	language:C++	class:QLineEditToolTip
QLineEditToolTip	qline_edit_tooltip.h	/^class QLineEditToolTip : public QLineEdit {$/;"	class	line:15	language:C++	inherits:QLineEdit
QTAWESOMEANIMATION_H	QtAwesomeAnim.h	/^#define QTAWESOMEANIMATION_H$/;"	macro	line:2	language:C++
QTAWESOME_H	QtAwesome.h	/^#define QTAWESOME_H$/;"	macro	line:11	language:C++
Q_GUI_Stream	gui_stream.hpp	/^    Q_GUI_Stream( std::ostream &stream , QTextEdit* text_edit) : m_stream(stream)$/;"	function	line:14	language:C++	class:Q_GUI_Stream	access:public
Q_GUI_Stream	gui_stream.hpp	/^class Q_GUI_Stream : public std::basic_streambuf<char>$/;"	class	line:10	language:C++	inherits:std::basic_streambuf
Q_OBJECT	qdouble_validator.h	/^  Q_OBJECT;$/;"	member	line:13	language:C++	class:QDoubleValidatorReporter	access:private
Q_OBJECT	qint_validator.h	/^  Q_OBJECT;$/;"	member	line:13	language:C++	class:QIntValidatorReporter	access:private
Q_OBJECT	qline_edit_tooltip.h	/^  Q_OBJECT;$/;"	member	line:16	language:C++	class:QLineEditToolTip	access:private
QtAwesome	QtAwesome.cpp	/^QtAwesome::QtAwesome( QObject* parent )$/;"	function	line:126	language:C++	class:QtAwesome
QtAwesome	QtAwesome.h	/^class QtAwesome : public QObject$/;"	class	line:823	language:C++	inherits:QObject
QtAwesomeAnimation	QtAwesomeAnim.cpp	/^QtAwesomeAnimation::QtAwesomeAnimation(QWidget *parentWidget, int interval, int step)$/;"	function	line:10	language:C++	class:QtAwesomeAnimation
QtAwesomeAnimation	QtAwesomeAnim.h	/^class QtAwesomeAnimation : public QObject$/;"	class	line:14	language:C++	inherits:QObject
QtAwesomeCharIconPainter	QtAwesome.cpp	/^class QtAwesomeCharIconPainter: public QtAwesomeIconPainter$/;"	class	line:20	language:C++	file:	inherits:QtAwesomeIconPainter
QtAwesomeIconPainter	QtAwesome.h	/^class QtAwesomeIconPainter$/;"	class	line:867	language:C++
QtAwesomeIconPainterIconEngine	QtAwesome.cpp	/^    QtAwesomeIconPainterIconEngine( QtAwesome* awesome, QtAwesomeIconPainter* painter, const QVariantMap& options  )$/;"	function	line:83	language:C++	class:QtAwesomeIconPainterIconEngine	access:public
QtAwesomeIconPainterIconEngine	QtAwesome.cpp	/^class QtAwesomeIconPainterIconEngine : public QIconEngine$/;"	class	line:78	language:C++	file:	inherits:QIconEngine
RENDERAREA_H	renderarea.h	/^#define RENDERAREA_H$/;"	macro	line:52	language:C++
RM	Makefile	/^RM = \/usr\/local\/Cellar\/cmake\/3.8.2\/bin\/cmake -E remove -f$/;"	macro	line:45	language:Make
RefinementPreset	td_map.hpp	/^    enum RefinementPreset { NO_REFINEMENT, MICROSCOPE_CORRECTED, MICROSCOPE_NON_CORRECTED, USER_DEFINED_PRESET };$/;"	enum	line:102	language:C++	class:TDMap	access:public
RenderArea	renderarea.cpp	/^  RenderArea::RenderArea(const QPainterPath &path, QWidget *parent)$/;"	function	line:5	language:C++	class:RenderArea
RenderArea	renderarea.h	/^class RenderArea : public QWidget$/;"	class	line:57	language:C++	inherits:QWidget
RosetteAberration	wavimg_prm.hpp	/^      RosetteAberration = 13, SixfoldAstigmatism = 14, EightfoldAstigmatism = 23$/;"	enumerator	line:125	language:C++	enum:WAVIMG_prm::AberrationDefinition
RowCount	gui_tdmap_table.h	/^    int RowCount = 0;$/;"	member	line:59	language:C++	class:TDMap_Table	access:private
RowSize	gui_tdmap_table.h	/^    int RowSize = 50;$/;"	member	line:60	language:C++	class:TDMap_Table	access:private
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	macro	line:39	language:Make
SILENT_MODE	td_map.hpp	/^    enum ExecLogMode {FULL_LOG, DEBUG_MODE, SILENT_MODE, USER_DEFINED_LOG_MODE };$/;"	enumerator	line:103	language:C++	enum:TDMap::ExecLogMode
SLI_EXTENSION	celslc_prm.cpp	/^static const std::string SLI_EXTENSION = ".sli";$/;"	variable	line:3	language:C++	file:
SRC_BASEBIN_H__	base_bin.hpp	/^#define SRC_BASEBIN_H__$/;"	macro	line:2	language:C++
SRC_BASECELL_H__	base_cell.hpp	/^#define SRC_BASECELL_H__$/;"	macro	line:2	language:C++
SRC_BASECRYSTAL_H__	base_crystal.hpp	/^#define SRC_BASECRYSTAL_H__$/;"	macro	line:2	language:C++
SRC_BASEIMAGE_H__	base_image.hpp	/^#define SRC_BASEIMAGE_H__$/;"	macro	line:2	language:C++
SRC_BASELOGGER_H__	base_logger.hpp	/^#define SRC_BASELOGGER_H__$/;"	macro	line:2	language:C++
SRC_CONFIGWIN_H__	configwin.h	/^#define SRC_CONFIGWIN_H__$/;"	macro	line:2	language:C++
SRC_EDGE_H__	edge.hpp	/^#define SRC_EDGE_H__$/;"	macro	line:2	language:C++
SRC_EMDATTRIBUTE_H__	emd_attribute.h	/^#define SRC_EMDATTRIBUTE_H__$/;"	macro	line:2	language:C++
SRC_EMDDATASET_H__	emd_dataset.h	/^#define SRC_EMDDATASET_H__$/;"	macro	line:2	language:C++
SRC_EMDGROUP_H__	emd_group.h	/^#define SRC_EMDGROUP_H__$/;"	macro	line:2	language:C++
SRC_EMDOBJECT_H__	emd_object.h	/^#define SRC_EMDOBJECT_H__$/;"	macro	line:2	language:C++
SRC_EMDWRAPPER_H__	emd_wrapper.h	/^#define SRC_EMDWRAPPER_H__$/;"	macro	line:2	language:C++
SRC_FILEDELEGATE_H__	treeitem_file_delegate.hpp	/^#define SRC_FILEDELEGATE_H__$/;"	macro	line:2	language:C++
SRC_IMAGEBOUNDS_H__	image_bounds.hpp	/^#define SRC_IMAGEBOUNDS_H__$/;"	macro	line:2	language:C++
SRC_IMAGECRYSTAL_H__	deprecated/image_crystal.hpp	/^#define SRC_IMAGECRYSTAL_H__$/;"	macro	line:2	language:C++
SRC_MSAPRM_H__	msa_prm.hpp	/^#define SRC_MSAPRM_H__$/;"	macro	line:2	language:C++
SRC_QDOUBLEVALIDATOR_H__	qdouble_validator.h	/^#define SRC_QDOUBLEVALIDATOR_H__$/;"	macro	line:2	language:C++
SRC_QINTVALIDATOR_H__	qint_validator.h	/^#define SRC_QINTVALIDATOR_H__$/;"	macro	line:2	language:C++
SRC_QLINEEDITTOOLTIP_H__	qline_edit_tooltip.h	/^#define SRC_QLINEEDITTOOLTIP_H__$/;"	macro	line:2	language:C++
SRC_SETTINGS_H__	settings.h	/^#define SRC_SETTINGS_H__$/;"	macro	line:2	language:C++
SRC_SIMGRID_H__	simgrid.hpp	/^#define SRC_SIMGRID_H__$/;"	macro	line:2	language:C++
SRC_SUPERCELL_H__	super_cell.hpp	/^#define SRC_SUPERCELL_H__$/;"	macro	line:2	language:C++
SRC_TDMAP_H__	td_map.hpp	/^#define SRC_TDMAP_H__$/;"	macro	line:2	language:C++
SRC_WAVIMGPRM_H__	wavimg_prm.hpp	/^#define SRC_WAVIMGPRM_H__$/;"	macro	line:2	language:C++
SUFFIXES	Makefile	/^SUFFIXES =$/;"	macro	line:21	language:Make
Settings	settings.cpp	/^Settings::Settings(QWidget *parent) :  QDialog(parent), ui(new Ui::Settings) {$/;"	function	line:6	language:C++	class:Settings
Settings	settings.h	/^class Settings : public QDialog$/;"	class	line:42	language:C++	inherits:QDialog
Shader	vis/shader.cpp	/^Shader::Shader(const Shader& other) :$/;"	function	line:48	language:C++	class:Shader
Shader	vis/shader.cpp	/^Shader::Shader(const std::string& shaderCode, GLenum shaderType) :$/;"	function	line:11	language:C++	class:Shader
Shader	vis/shader.hpp	/^  class Shader { $/;"	class	line:11	language:C++	namespace:vis
ShowContextMenu	cv_image_widget.cpp	/^void CVImageWidget::ShowContextMenu(const QPoint &pos){$/;"	function	line:94	language:C++	class:CVImageWidget
SimGrid	simgrid.cpp	/^SimGrid::SimGrid( boost::process::ipstream& async_io_buffer_out ){$/;"	function	line:3	language:C++	class:SimGrid
SimGrid	simgrid.hpp	/^class SimGrid : public BaseCrystal {$/;"	class	line:45	language:C++	inherits:BaseCrystal
Simulation_Step	simulation_step.cpp	/^Simulation_Step::Simulation_Step( int step_id, std::string step_descriptor ){$/;"	function	line:11	language:C++	class:Simulation_Step
Simulation_Step	simulation_step.cpp	/^Simulation_Step::Simulation_Step(){$/;"	function	line:3	language:C++	class:Simulation_Step
Simulation_Step	simulation_step.hpp	/^class Simulation_Step {$/;"	class	line:16	language:C++
SixfoldAstigmatism	wavimg_prm.hpp	/^      RosetteAberration = 13, SixfoldAstigmatism = 14, EightfoldAstigmatism = 23$/;"	enumerator	line:125	language:C++	enum:WAVIMG_prm::AberrationDefinition
SphericalAberration	wavimg_prm.hpp	/^      ThreefildAstigmatism = 4, SphericalAberration = 5, StarAberration = 6,$/;"	enumerator	line:122	language:C++	enum:WAVIMG_prm::AberrationDefinition
SphericalAberration6thOrder	wavimg_prm.hpp	/^      FiveFoldAstigmatism = 10, SphericalAberration6thOrder = 11, StarAberration6thOrder = 12,$/;"	enumerator	line:124	language:C++	enum:WAVIMG_prm::AberrationDefinition
StarAberration	wavimg_prm.hpp	/^      ThreefildAstigmatism = 4, SphericalAberration = 5, StarAberration = 6,$/;"	enumerator	line:122	language:C++	enum:WAVIMG_prm::AberrationDefinition
StarAberration6thOrder	wavimg_prm.hpp	/^      FiveFoldAstigmatism = 10, SphericalAberration6thOrder = 11, StarAberration6thOrder = 12,$/;"	enumerator	line:124	language:C++	enum:WAVIMG_prm::AberrationDefinition
Structure	deprecated/structure.cpp	/^Structure::Structure(){$/;"	function	line:3	language:C++	class:Structure
Structure	deprecated/structure.hpp	/^class Structure {$/;"	class	line:6	language:C++
SuperCell	super_cell.cpp	/^SuperCell::SuperCell(){$/;"	function	line:13	language:C++	class:SuperCell
SuperCell	super_cell.hpp	/^class SuperCell : public ImageBounds , public BaseCell {$/;"	class	line:43	language:C++	inherits:ImageBounds,BaseCell
TDMap	td_map.cpp	/^TDMap::TDMap( boost::process::ipstream& ostream_celslc_buffer,$/;"	function	line:97	language:C++	class:TDMap
TDMap	td_map.cpp	/^TDMap::TDMap($/;"	function	line:4	language:C++	class:TDMap
TDMap	td_map.hpp	/^class TDMap  : public QObject {$/;"	class	line:24	language:C++	inherits:QObject
TDMap_CELL_H	gui_tdmap_cell.h	/^#define TDMap_CELL_H$/;"	macro	line:2	language:C++
TDMap_Cell	gui_tdmap_cell.cpp	/^TDMap_Cell::TDMap_Cell(){$/;"	function	line:3	language:C++	class:TDMap_Cell
TDMap_Cell	gui_tdmap_cell.h	/^class TDMap_Cell : public QTableWidgetItem$/;"	class	line:6	language:C++	inherits:QTableWidgetItem
TDMap_Table	gui_tdmap_table.cpp	/^TDMap_Table::TDMap_Table(QWidget *parent) : QTableWidget(parent) {$/;"	function	line:11	language:C++	class:TDMap_Table
TDMap_Table	gui_tdmap_table.h	/^class TDMap_Table : public QTableWidget$/;"	class	line:17	language:C++	inherits:QTableWidget
TDMap_Table_H	gui_tdmap_table.h	/^#define TDMap_Table_H$/;"	macro	line:2	language:C++
TREEITEM_H	treeitem.h	/^#define TREEITEM_H$/;"	macro	line:2	language:C++
TREEMODEL_H	treemodel.h	/^#define TREEMODEL_H$/;"	macro	line:2	language:C++
ThreeLobeAberration	wavimg_prm.hpp	/^      FourfoldAstigmatism = 7, Coma5thOrder = 8, ThreeLobeAberration = 9,$/;"	enumerator	line:123	language:C++	enum:WAVIMG_prm::AberrationDefinition
ThreefildAstigmatism	wavimg_prm.hpp	/^      ThreefildAstigmatism = 4, SphericalAberration = 5, StarAberration = 6,$/;"	enumerator	line:122	language:C++	enum:WAVIMG_prm::AberrationDefinition
TreeItem	treeitem.cpp	/^TreeItem::TreeItem( QVector<QVariant> &data, QVector<bool> editable, TreeItem *parent  ) : TreeItem( data, parent ){$/;"	function	line:91	language:C++	class:TreeItem
TreeItem	treeitem.cpp	/^TreeItem::TreeItem( QVector<QVariant> &data, TreeItem *parent) {$/;"	function	line:50	language:C++	class:TreeItem
TreeItem	treeitem.cpp	/^TreeItem::TreeItem( QVector<QVariant> &data, boost::function<bool(bool)> setter,  QVector<QVariant> &legend, QVector<bool> editable, TreeItem *parent  ) : TreeItem( data, setter, legend, parent ){$/;"	function	line:106	language:C++	class:TreeItem
TreeItem	treeitem.cpp	/^TreeItem::TreeItem( QVector<QVariant> &data, boost::function<bool(bool)> setter, QVector<QVariant> &legend, TreeItem *parent) : TreeItem( data, parent ) {$/;"	function	line:95	language:C++	class:TreeItem
TreeItem	treeitem.cpp	/^TreeItem::TreeItem( QVector<QVariant> &data, boost::function<bool(bool)> setter, boost::function<bool(void)> getter, QVector<QVariant> &legend, QVector<bool> editable, TreeItem *parent  ) : TreeItem( data, setter, getter, legend, parent ){$/;"	function	line:110	language:C++	class:TreeItem
TreeItem	treeitem.cpp	/^TreeItem::TreeItem( QVector<QVariant> &data, boost::function<bool(bool)> setter, boost::function<bool(void)> getter, QVector<QVariant> &legend, TreeItem *parent) : TreeItem( data, setter, legend, parent ) {$/;"	function	line:101	language:C++	class:TreeItem
TreeItem	treeitem.cpp	/^TreeItem::TreeItem( QVector<QVariant> &data, boost::function<bool(double)> setter, QVector<bool> editable, TreeItem *parent  ) : TreeItem( data, setter, parent ){$/;"	function	line:142	language:C++	class:TreeItem
TreeItem	treeitem.cpp	/^TreeItem::TreeItem( QVector<QVariant> &data, boost::function<bool(double)> setter, TreeItem *parent) : TreeItem( data, parent ) {$/;"	function	line:132	language:C++	class:TreeItem
TreeItem	treeitem.cpp	/^TreeItem::TreeItem( QVector<QVariant> &data, boost::function<bool(int)> setter, QVector<bool> editable, TreeItem *parent  ) : TreeItem( data, setter, parent ){$/;"	function	line:157	language:C++	class:TreeItem
TreeItem	treeitem.cpp	/^TreeItem::TreeItem( QVector<QVariant> &data, boost::function<bool(int)> setter, TreeItem *parent) : TreeItem( data, parent ) {$/;"	function	line:147	language:C++	class:TreeItem
TreeItem	treeitem.cpp	/^TreeItem::TreeItem( QVector<QVariant> &data, boost::function<bool(int)> setter, boost::function<int(void)> getter, QVector<bool> editable, TreeItem *parent  ) : TreeItem( data, setter, getter, parent ){$/;"	function	line:161	language:C++	class:TreeItem
TreeItem	treeitem.cpp	/^TreeItem::TreeItem( QVector<QVariant> &data, boost::function<bool(int)> setter, boost::function<int(void)> getter, TreeItem *parent  ) : TreeItem( data, setter, parent ){$/;"	function	line:152	language:C++	class:TreeItem
TreeItem	treeitem.cpp	/^TreeItem::TreeItem( QVector<QVariant> &data, boost::function<bool(std::string)> setter,  boost::function<double(void)> getter, QVector<bool> editable, TreeItem *parent  ) : TreeItem( data, setter, getter, parent ){$/;"	function	line:128	language:C++	class:TreeItem
TreeItem	treeitem.cpp	/^TreeItem::TreeItem( QVector<QVariant> &data, boost::function<bool(std::string)> setter, QVector<bool> editable, TreeItem *parent  ) : TreeItem( data, setter, parent ){$/;"	function	line:124	language:C++	class:TreeItem
TreeItem	treeitem.cpp	/^TreeItem::TreeItem( QVector<QVariant> &data, boost::function<bool(std::string)> setter, TreeItem *parent) : TreeItem( data, parent ) {$/;"	function	line:114	language:C++	class:TreeItem
TreeItem	treeitem.cpp	/^TreeItem::TreeItem( QVector<QVariant> &data, boost::function<bool(std::string)> setter, boost::function<double(void)> getter, TreeItem *parent) : TreeItem( data, setter, parent ) {$/;"	function	line:119	language:C++	class:TreeItem
TreeItem	treeitem.cpp	/^TreeItem::TreeItem( QVector<QVariant> &data, boost::function<double(void)> getter, TreeItem *parent) : TreeItem( data, parent ) {$/;"	function	line:137	language:C++	class:TreeItem
TreeItem	treeitem.h	/^class TreeItem : public QObject {$/;"	class	line:24	language:C++	inherits:QObject
TreeItemFileDelegate	treeitem_file_delegate.cpp	/^TreeItemFileDelegate::TreeItemFileDelegate( QObject *parent ) : QStyledItemDelegate(parent){$/;"	function	line:8	language:C++	class:TreeItemFileDelegate
TreeItemFileDelegate	treeitem_file_delegate.hpp	/^class TreeItemFileDelegate : public QStyledItemDelegate {$/;"	class	line:30	language:C++	inherits:QStyledItemDelegate
TreeModel	treemodel.cpp	/^TreeModel::TreeModel(TreeItem *root,  QObject *parent) : QAbstractItemModel(parent) {$/;"	function	line:6	language:C++	class:TreeModel
TreeModel	treemodel.h	/^class TreeModel : public QAbstractItemModel {$/;"	class	line:14	language:C++	inherits:QAbstractItemModel
TwofoldAstigmatism	wavimg_prm.hpp	/^      ImageShift = 0, Defocus = 1, TwofoldAstigmatism = 2, Coma = 3,$/;"	enumerator	line:121	language:C++	enum:WAVIMG_prm::AberrationDefinition
USER_DEFINED_LOG_MODE	td_map.hpp	/^    enum ExecLogMode {FULL_LOG, DEBUG_MODE, SILENT_MODE, USER_DEFINED_LOG_MODE };$/;"	enumerator	line:103	language:C++	enum:TDMap::ExecLogMode
USER_DEFINED_PRESET	td_map.hpp	/^    enum RefinementPreset { NO_REFINEMENT, MICROSCOPE_CORRECTED, MICROSCOPE_NON_CORRECTED, USER_DEFINED_PRESET };$/;"	enumerator	line:102	language:C++	enum:TDMap::RefinementPreset
Ui	configwin.h	/^namespace Ui {$/;"	namespace	line:50	language:C++
Ui	settings.h	/^namespace Ui {$/;"	namespace	line:38	language:C++
UnitCell	unit_cell.hpp	/^class UnitCell : public BaseCell {$/;"	class	line:8	language:C++	inherits:BaseCell
WAVIMG_prm	wavimg_prm.cpp	/^WAVIMG_prm::WAVIMG_prm( boost::process::ipstream &async_io_buffer_out ) : BaseBin ( async_io_buffer_out ) {$/;"	function	line:5	language:C++	class:WAVIMG_prm
WAVIMG_prm	wavimg_prm.hpp	/^class WAVIMG_prm : public BaseBin, public BaseCrystal, public BaseImage {$/;"	class	line:24	language:C++	inherits:BaseBin,BaseCrystal,BaseImage
WAV_EXTENSION	msa_prm.cpp	/^static const std::string WAV_EXTENSION = ".wav";$/;"	variable	line:3	language:C++	file:
_GLOBALDEFS_H_	global_def.hpp	/^#define _GLOBALDEFS_H_$/;"	macro	line:2	language:C++
_TDOGL_PROGRAM_ATTRIB_N_UNIFORM_SETTERS	vis/program.hpp	/^#define _TDOGL_PROGRAM_ATTRIB_N_UNIFORM_SETTERS(/;"	macro	line:54	language:C++
_USE_MATH_DEFINES	vis/camera.cpp	/^#define _USE_MATH_DEFINES$/;"	macro	line:1	language:C++	file:
__APP_LOG_H__	application_log.hpp	/^#define __APP_LOG_H__$/;"	macro	line:2	language:C++
__ATOM_H__	atom.hpp	/^#define __ATOM_H__$/;"	macro	line:2	language:C++
__ATOM_INFO_H__	atom_info.hpp	/^#define __ATOM_INFO_H__ /;"	macro	line:2	language:C++
__CELSLC_PRM_H__	celslc_prm.hpp	/^#define __CELSLC_PRM_H__$/;"	macro	line:2	language:C++
__CV_IMAGE_DELEGATE_H__	cv_image_delegate.h	/^#define __CV_IMAGE_DELEGATE_H__$/;"	macro	line:2	language:C++
__MCDRIVER_HPP__	mc_driver.hpp	/^#define __MCDRIVER_HPP__ /;"	macro	line:2	language:C++
__MCSCANNER_HPP__	mc_scanner.hpp	/^#define __MCSCANNER_HPP__ /;"	macro	line:2	language:C++
__OPENGL_H__	vis/opengl.hpp	/^#define __OPENGL_H__$/;"	macro	line:27	language:C++
__SIMULATION_STEP_H__	simulation_step.hpp	/^#define __SIMULATION_STEP_H__$/;"	macro	line:2	language:C++
__STRING_ADDITIONS_H__	string_additions.hpp	/^#define __STRING_ADDITIONS_H__$/;"	macro	line:2	language:C++
__STRUCTURE_H__	deprecated/structure.hpp	/^#define __STRUCTURE_H__ /;"	macro	line:2	language:C++
__SYMBCALC_H__	symbcalc.hpp	/^#define __SYMBCALC_H__$/;"	macro	line:2	language:C++
__UNIT_CELL_H__	unit_cell.hpp	/^#define __UNIT_CELL_H__$/;"	macro	line:2	language:C++
__click	qt_file_push_button.cpp	/^void FilePushButton::__click()$/;"	function	line:16	language:C++	class:FilePushButton
_a	base_cell.hpp	/^    cv::Point3d _a,_b,_c,_d,_e,_f,_g,_h;$/;"	member	line:85	language:C++	class:BaseCell	access:protected
_abort	gui_sim_updater.hpp	/^    bool _abort;$/;"	member	line:125	language:C++	class:GuiSimOutUpdater	access:private
_action_status	treeitem.h	/^    ActionStatusType _action_status = ActionStatusType::_status_NOT_READY;$/;"	member	line:241	language:C++	class:TreeItem	access:private
_action_toolBar	treeitem.h	/^    QToolBar* _action_toolBar;$/;"	member	line:231	language:C++	class:TreeItem	access:private
_atom_site_type_symbol	atom.hpp	/^    std::string _atom_site_type_symbol;$/;"	member	line:9	language:C++	class:Atom	access:private
_attributes	emd_dataset.h	/^    std::vector<EMDAttribute*> _attributes;$/;"	member	line:40	language:C++	class:EMDDataSet	access:protected
_attributes	emd_group.h	/^    std::vector<EMDAttribute*> _attributes;$/;"	member	line:77	language:C++	class:EMDGroup	access:private
_b	base_cell.hpp	/^    cv::Point3d _a,_b,_c,_d,_e,_f,_g,_h;$/;"	member	line:85	language:C++	class:BaseCell	access:protected
_best_col	cv_tdmap_cell_image_frame_delegate.h	/^    int _best_col;$/;"	member	line:42	language:C++	class:CvTDMapImageFrameDelegate	access:private
_best_defined	cv_tdmap_cell_image_frame_delegate.h	/^    bool _best_defined = false;$/;"	member	line:43	language:C++	class:CvTDMapImageFrameDelegate	access:private
_best_row	cv_tdmap_cell_image_frame_delegate.h	/^    int _best_row;$/;"	member	line:41	language:C++	class:CvTDMapImageFrameDelegate	access:private
_button_parent	qt_file_push_button.h	/^    QWidget *_button_parent;$/;"	member	line:22	language:C++	class:FilePushButton	access:private
_c	base_cell.hpp	/^    cv::Point3d _a,_b,_c,_d,_e,_f,_g,_h;$/;"	member	line:85	language:C++	class:BaseCell	access:protected
_celslc_parameters	simulation_step.hpp	/^    CELSLC_prm* _celslc_parameters;$/;"	member	line:28	language:C++	class:Simulation_Step	access:private
_center	vis/camera.hpp	/^        glm::vec3 _eye, _center, _vis_up;$/;"	member	line:21	language:C++	class:vis::Camera	access:public
_col_variables_map	group_options.h	/^    std::map<std::string,int> _col_variables_map;$/;"	member	line:23	language:C++	class:group_options	access:private
_container_window_height	cv_image_cell_widget.h	/^    int _container_window_height = 0;$/;"	member	line:85	language:C++	class:CvImageCellWidget	access:protected
_container_window_height	cv_image_widget.h	/^    int _container_window_height = 0;$/;"	member	line:70	language:C++	class:CVImageWidget	access:private
_container_window_width	cv_image_cell_widget.h	/^    int _container_window_width = 0;$/;"	member	line:84	language:C++	class:CvImageCellWidget	access:protected
_container_window_width	cv_image_widget.h	/^    int _container_window_width = 0;$/;"	member	line:69	language:C++	class:CVImageWidget	access:private
_core_td_map	configwin.h	/^    TDMap *_core_td_map;$/;"	member	line:155	language:C++	class:MainWindow	access:private
_current_variables_map	group_options.h	/^    std::map<std::string,time_t> _current_variables_map;$/;"	member	line:27	language:C++	class:group_options	access:private
_d	base_cell.hpp	/^    cv::Point3d _a,_b,_c,_d,_e,_f,_g,_h;$/;"	member	line:85	language:C++	class:BaseCell	access:protected
_datasets	emd_group.h	/^    std::vector<EMDDataSet*> _datasets;$/;"	member	line:75	language:C++	class:EMDGroup	access:private
_delegate_ACTION_CHECK	treeitem.h	/^    enum DelegateType { _delegate_ACTION_CHECK, _delegate_FILE, _delegate_DIR, _delegate_TEXT, _delegate_TEXT_ACTION, _delegate_SLIDER_INT, _delegate_TEXT_DOCUMENT, _delegate_TEXT_BROWSER, _delegate_DROP };$/;"	enumerator	line:27	language:C++	enum:TreeItem::DelegateType
_delegate_DIR	treeitem.h	/^    enum DelegateType { _delegate_ACTION_CHECK, _delegate_FILE, _delegate_DIR, _delegate_TEXT, _delegate_TEXT_ACTION, _delegate_SLIDER_INT, _delegate_TEXT_DOCUMENT, _delegate_TEXT_BROWSER, _delegate_DROP };$/;"	enumerator	line:27	language:C++	enum:TreeItem::DelegateType
_delegate_DROP	treeitem.h	/^    enum DelegateType { _delegate_ACTION_CHECK, _delegate_FILE, _delegate_DIR, _delegate_TEXT, _delegate_TEXT_ACTION, _delegate_SLIDER_INT, _delegate_TEXT_DOCUMENT, _delegate_TEXT_BROWSER, _delegate_DROP };$/;"	enumerator	line:27	language:C++	enum:TreeItem::DelegateType
_delegate_FILE	treeitem.h	/^    enum DelegateType { _delegate_ACTION_CHECK, _delegate_FILE, _delegate_DIR, _delegate_TEXT, _delegate_TEXT_ACTION, _delegate_SLIDER_INT, _delegate_TEXT_DOCUMENT, _delegate_TEXT_BROWSER, _delegate_DROP };$/;"	enumerator	line:27	language:C++	enum:TreeItem::DelegateType
_delegate_SLIDER_INT	treeitem.h	/^    enum DelegateType { _delegate_ACTION_CHECK, _delegate_FILE, _delegate_DIR, _delegate_TEXT, _delegate_TEXT_ACTION, _delegate_SLIDER_INT, _delegate_TEXT_DOCUMENT, _delegate_TEXT_BROWSER, _delegate_DROP };$/;"	enumerator	line:27	language:C++	enum:TreeItem::DelegateType
_delegate_TEXT	treeitem.h	/^    enum DelegateType { _delegate_ACTION_CHECK, _delegate_FILE, _delegate_DIR, _delegate_TEXT, _delegate_TEXT_ACTION, _delegate_SLIDER_INT, _delegate_TEXT_DOCUMENT, _delegate_TEXT_BROWSER, _delegate_DROP };$/;"	enumerator	line:27	language:C++	enum:TreeItem::DelegateType
_delegate_TEXT_ACTION	treeitem.h	/^    enum DelegateType { _delegate_ACTION_CHECK, _delegate_FILE, _delegate_DIR, _delegate_TEXT, _delegate_TEXT_ACTION, _delegate_SLIDER_INT, _delegate_TEXT_DOCUMENT, _delegate_TEXT_BROWSER, _delegate_DROP };$/;"	enumerator	line:27	language:C++	enum:TreeItem::DelegateType
_delegate_TEXT_BROWSER	treeitem.h	/^    enum DelegateType { _delegate_ACTION_CHECK, _delegate_FILE, _delegate_DIR, _delegate_TEXT, _delegate_TEXT_ACTION, _delegate_SLIDER_INT, _delegate_TEXT_DOCUMENT, _delegate_TEXT_BROWSER, _delegate_DROP };$/;"	enumerator	line:27	language:C++	enum:TreeItem::DelegateType
_delegate_TEXT_DOCUMENT	treeitem.h	/^    enum DelegateType { _delegate_ACTION_CHECK, _delegate_FILE, _delegate_DIR, _delegate_TEXT, _delegate_TEXT_ACTION, _delegate_SLIDER_INT, _delegate_TEXT_DOCUMENT, _delegate_TEXT_BROWSER, _delegate_DROP };$/;"	enumerator	line:27	language:C++	enum:TreeItem::DelegateType
_dr_probe_bin_path	configwin.h	/^    QString _dr_probe_bin_path;$/;"	member	line:185	language:C++	class:MainWindow	access:private
_dr_probe_bin_path	settings.h	/^    QString _dr_probe_bin_path;$/;"	member	line:70	language:C++	class:Settings	access:private
_dr_probe_celslc_bin	configwin.h	/^    QString _dr_probe_celslc_bin;$/;"	member	line:186	language:C++	class:MainWindow	access:private
_dr_probe_celslc_bin	settings.h	/^    QString _dr_probe_celslc_bin;$/;"	member	line:71	language:C++	class:Settings	access:private
_dr_probe_msa_bin	configwin.h	/^    QString _dr_probe_msa_bin;$/;"	member	line:187	language:C++	class:MainWindow	access:private
_dr_probe_msa_bin	settings.h	/^    QString _dr_probe_msa_bin;$/;"	member	line:72	language:C++	class:Settings	access:private
_dr_probe_wavimg_bin	configwin.h	/^    QString _dr_probe_wavimg_bin;$/;"	member	line:188	language:C++	class:MainWindow	access:private
_dr_probe_wavimg_bin	settings.h	/^    QString _dr_probe_wavimg_bin;$/;"	member	line:73	language:C++	class:Settings	access:private
_e	base_cell.hpp	/^    cv::Point3d _a,_b,_c,_d,_e,_f,_g,_h;$/;"	member	line:85	language:C++	class:BaseCell	access:protected
_editor_toolbar	treeitem_file_delegate.hpp	/^    QToolBar* _editor_toolbar;$/;"	member	line:63	language:C++	class:TreeItemFileDelegate	access:private
_electron_diffraction_patterns_output	configwin.h	/^    TreeItem* _electron_diffraction_patterns_output;$/;"	member	line:259	language:C++	class:MainWindow	access:private
_exec_log_level	td_map.hpp	/^    int _exec_log_level = ExecLogMode::FULL_LOG;$/;"	member	line:88	language:C++	class:TDMap	access:private
_eye	vis/camera.hpp	/^        glm::vec3 _eye, _center, _vis_up;$/;"	member	line:21	language:C++	class:vis::Camera	access:public
_f	base_cell.hpp	/^    cv::Point3d _a,_b,_c,_d,_e,_f,_g,_h;$/;"	member	line:85	language:C++	class:BaseCell	access:protected
_failed_initialization	configwin.h	/^    bool _failed_initialization = false;$/;"	member	line:195	language:C++	class:MainWindow	access:private
_farPlane	vis/camera.hpp	/^        float _farPlane;$/;"	member	line:150	language:C++	class:vis::Camera	access:private
_fieldOfView	vis/camera.hpp	/^        float _fieldOfView;$/;"	member	line:148	language:C++	class:vis::Camera	access:private
_flag_BinaryResult_PixelSize_height	emd_wrapper.h	/^    bool _flag_BinaryResult_PixelSize_height = false;$/;"	member	line:80	language:C++	class:EMDWrapper	access:protected
_flag_BinaryResult_PixelSize_width	emd_wrapper.h	/^    bool _flag_BinaryResult_PixelSize_width = false;$/;"	member	line:78	language:C++	class:EMDWrapper	access:protected
_flag_auto_a_size	base_image.hpp	/^    bool _flag_auto_a_size = false;$/;"	member	line:35	language:C++	class:BaseImage	access:private
_flag_auto_b_size	base_image.hpp	/^    bool _flag_auto_b_size = false;$/;"	member	line:36	language:C++	class:BaseImage	access:private
_flag_auto_n_cols	base_image.hpp	/^    bool _flag_auto_n_cols = false;$/;"	member	line:34	language:C++	class:BaseImage	access:private
_flag_auto_n_rows	base_image.hpp	/^    bool _flag_auto_n_rows = false;$/;"	member	line:33	language:C++	class:BaseImage	access:private
_flag_base_bin_output_dir_path	base_bin.hpp	/^    bool _flag_base_bin_output_dir_path = false;$/;"	member	line:52	language:C++	class:BaseBin	access:protected
_flag_base_bin_output_target_folder	base_bin.hpp	/^    bool _flag_base_bin_output_target_folder = false;$/;"	member	line:49	language:C++	class:BaseBin	access:protected
_flag_base_bin_start_dir_path	base_bin.hpp	/^    bool _flag_base_bin_start_dir_path = false;$/;"	member	line:46	language:C++	class:BaseBin	access:protected
_flag_base_dir_path	base_crystal.hpp	/^    bool _flag_base_dir_path = false;$/;"	member	line:146	language:C++	class:BaseCrystal	access:protected
_flag_best	cv_image_cell_widget.h	/^    bool _flag_best = false;$/;"	member	line:80	language:C++	class:CvImageCellWidget	access:protected
_flag_best_match_Point2i	simgrid.hpp	/^    bool _flag_best_match_Point2i = false;$/;"	member	line:84	language:C++	class:SimGrid	access:private
_flag_cel_format	base_cell.hpp	/^    bool _flag_cel_format = false;$/;"	member	line:64	language:C++	class:BaseCell	access:protected
_flag_cif_format	base_cell.hpp	/^    bool _flag_cif_format = false;$/;"	member	line:61	language:C++	class:BaseCell	access:protected
_flag_cif_path	base_cell.hpp	/^    bool _flag_cif_path = false;$/;"	member	line:60	language:C++	class:BaseCell	access:protected
_flag_core_tdmap	gui_tdmap_table.h	/^    bool _flag_core_tdmap = false;$/;"	member	line:79	language:C++	class:TDMap_Table	access:private
_flag_created_cells	gui_tdmap_table.h	/^    bool _flag_created_cells = false;$/;"	member	line:63	language:C++	class:TDMap_Table	access:private
_flag_dat_output_target_folder	base_crystal.hpp	/^    bool _flag_dat_output_target_folder = false;$/;"	member	line:102	language:C++	class:BaseCrystal	access:protected
_flag_debug_switch	base_bin.hpp	/^    bool _flag_debug_switch = false;$/;"	member	line:59	language:C++	class:BaseBin	access:protected
_flag_defocus_lower_bound	base_crystal.hpp	/^    bool _flag_defocus_lower_bound = false;$/;"	member	line:128	language:C++	class:BaseCrystal	access:protected
_flag_defocus_period	base_crystal.hpp	/^    bool _flag_defocus_period = false;$/;"	member	line:132	language:C++	class:BaseCrystal	access:protected
_flag_defocus_samples	base_crystal.hpp	/^    bool _flag_defocus_samples = false;$/;"	member	line:126	language:C++	class:BaseCrystal	access:protected
_flag_defocus_upper_bound	base_crystal.hpp	/^    bool _flag_defocus_upper_bound = false;$/;"	member	line:130	language:C++	class:BaseCrystal	access:protected
_flag_dr_probe_bin_path	configwin.h	/^    bool _flag_dr_probe_bin_path = false;$/;"	member	line:189	language:C++	class:MainWindow	access:private
_flag_dr_probe_celslc_bin	configwin.h	/^    bool _flag_dr_probe_celslc_bin = false;$/;"	member	line:190	language:C++	class:MainWindow	access:private
_flag_dr_probe_msa_bin	configwin.h	/^    bool _flag_dr_probe_msa_bin = false;$/;"	member	line:191	language:C++	class:MainWindow	access:private
_flag_dr_probe_wavimg_bin	configwin.h	/^    bool _flag_dr_probe_wavimg_bin = false;$/;"	member	line:192	language:C++	class:MainWindow	access:private
_flag_dropdown	treeitem.h	/^    bool _flag_dropdown = false;$/;"	member	line:194	language:C++	class:TreeItem	access:private
_flag_experimental_image_full	deprecated/image_crystal.hpp	/^    bool _flag_experimental_image_full = false;$/;"	member	line:37	language:C++	class:Image_Crystal	access:private
_flag_fp_data_appender_string	treeitem.h	/^    bool _flag_fp_data_appender_string = false;$/;"	member	line:210	language:C++	class:TreeItem	access:private
_flag_fp_data_getter_bool	treeitem.h	/^    bool _flag_fp_data_getter_bool = false;$/;"	member	line:214	language:C++	class:TreeItem	access:private
_flag_fp_data_getter_double	treeitem.h	/^    bool _flag_fp_data_getter_double = false;$/;"	member	line:217	language:C++	class:TreeItem	access:private
_flag_fp_data_getter_double_vec	treeitem.h	/^    QVector<bool> _flag_fp_data_getter_double_vec;$/;"	member	line:180	language:C++	class:TreeItem	access:private
_flag_fp_data_getter_int	treeitem.h	/^    bool _flag_fp_data_getter_int = false;$/;"	member	line:220	language:C++	class:TreeItem	access:private
_flag_fp_data_getter_string	treeitem.h	/^    bool _flag_fp_data_getter_string = false;$/;"	member	line:211	language:C++	class:TreeItem	access:private
_flag_fp_data_setter_bool	treeitem.h	/^    bool _flag_fp_data_setter_bool = false;$/;"	member	line:213	language:C++	class:TreeItem	access:private
_flag_fp_data_setter_double	treeitem.h	/^    bool _flag_fp_data_setter_double = false;$/;"	member	line:216	language:C++	class:TreeItem	access:private
_flag_fp_data_setter_int	treeitem.h	/^    bool _flag_fp_data_setter_int = false;$/;"	member	line:219	language:C++	class:TreeItem	access:private
_flag_fp_data_setter_string	treeitem.h	/^    bool _flag_fp_data_setter_string = false;$/;"	member	line:209	language:C++	class:TreeItem	access:private
_flag_full_bin_path_execname	base_bin.hpp	/^    bool _flag_full_bin_path_execname = false;$/;"	member	line:56	language:C++	class:BaseBin	access:protected
_flag_full_boundary_polygon	image_bounds.hpp	/^    bool _flag_full_boundary_polygon = false;$/;"	member	line:76	language:C++	class:ImageBounds	access:protected
_flag_full_boundary_polygon_w_margin	image_bounds.hpp	/^    bool _flag_full_boundary_polygon_w_margin = false;$/;"	member	line:78	language:C++	class:ImageBounds	access:protected
_flag_full_image	base_image.hpp	/^    bool _flag_full_image = false;$/;"	member	line:53	language:C++	class:BaseImage	access:protected
_flag_full_n_cols_width	base_image.hpp	/^    bool _flag_full_n_cols_width = false;$/;"	member	line:60	language:C++	class:BaseImage	access:protected
_flag_full_n_rows_height	base_image.hpp	/^    bool _flag_full_n_rows_height = false;$/;"	member	line:57	language:C++	class:BaseImage	access:protected
_flag_full_nm_size_cols_b	base_image.hpp	/^    bool _flag_full_nm_size_cols_b = false;$/;"	member	line:73	language:C++	class:BaseImage	access:protected
_flag_full_nm_size_rows_a	base_image.hpp	/^    bool _flag_full_nm_size_rows_a = false;$/;"	member	line:71	language:C++	class:BaseImage	access:protected
_flag_highlight_error	treeitem.h	/^    std::vector<bool> _flag_highlight_error;$/;"	member	line:243	language:C++	class:TreeItem	access:private
_flag_ht_accelaration_voltage	base_crystal.hpp	/^    bool _flag_ht_accelaration_voltage = false;$/;"	member	line:74	language:C++	class:BaseCrystal	access:protected
_flag_ignore_edge_pixels	base_image.hpp	/^    bool _flag_ignore_edge_pixels = false;$/;"	member	line:101	language:C++	class:BaseImage	access:protected
_flag_ignore_edge_pixels_rectangle	base_image.hpp	/^    bool _flag_ignore_edge_pixels_rectangle = false;$/;"	member	line:99	language:C++	class:BaseImage	access:protected
_flag_im2model_logger	configwin.h	/^    bool _flag_im2model_logger = false;$/;"	member	line:199	language:C++	class:MainWindow	access:private
_flag_image_correlation_matching_method	td_map.hpp	/^    bool _flag_image_correlation_matching_method = true;$/;"	member	line:29	language:C++	class:TDMap	access:private
_flag_image_setted	cv_tdmap_cell_image_frame.h	/^    bool  _flag_image_setted = false;$/;"	member	line:34	language:C++	class:CvTDMapImageFrame	access:protected
_flag_io_ap_pipe_out	base_bin.hpp	/^    bool _flag_io_ap_pipe_out = false;$/;"	member	line:42	language:C++	class:BaseBin	access:protected
_flag_is_action	treeitem.h	/^    bool _flag_is_action = false;$/;"	member	line:239	language:C++	class:TreeItem	access:private
_flag_itemToolTip	treeitem.h	/^    QVector<bool> _flag_itemToolTip;$/;"	member	line:188	language:C++	class:TreeItem	access:private
_flag_logger	base_bin.hpp	/^    bool _flag_logger = false;$/;"	member	line:36	language:C++	class:BaseBin	access:private
_flag_logger	base_crystal.hpp	/^    bool _flag_logger = false;$/;"	member	line:41	language:C++	class:BaseCrystal	access:private
_flag_logger	base_image.hpp	/^    bool _flag_logger = false;$/;"	member	line:46	language:C++	class:BaseImage	access:private
_flag_logger	base_logger.hpp	/^    bool _flag_logger = false;$/;"	member	line:36	language:C++	class:BaseLogger	access:protected
_flag_logger	celslc_prm.hpp	/^    bool _flag_logger = false;$/;"	member	line:64	language:C++	class:CELSLC_prm	access:private
_flag_logger	image_bounds.hpp	/^    bool _flag_logger = false;$/;"	member	line:55	language:C++	class:ImageBounds	access:private
_flag_logger	msa_prm.hpp	/^    bool _flag_logger = false;$/;"	member	line:50	language:C++	class:MSA_prm	access:private
_flag_logger	simgrid.hpp	/^    bool _flag_logger = false;$/;"	member	line:97	language:C++	class:SimGrid	access:private
_flag_logger	super_cell.hpp	/^    bool _flag_logger = false;$/;"	member	line:49	language:C++	class:SuperCell	access:private
_flag_logger	td_map.hpp	/^    bool _flag_logger = false;$/;"	member	line:86	language:C++	class:TDMap	access:private
_flag_logger	wavimg_prm.hpp	/^    bool _flag_logger = false;$/;"	member	line:115	language:C++	class:WAVIMG_prm	access:private
_flag_match_values_matrix	simgrid.hpp	/^    bool _flag_match_values_matrix = false;$/;"	member	line:81	language:C++	class:SimGrid	access:private
_flag_model_modified	treemodel.h	/^    bool _flag_model_modified = false;$/;"	member	line:57	language:C++	class:TreeModel	access:private
_flag_mtf_filename	wavimg_prm.hpp	/^    bool _flag_mtf_filename = false;$/;"	member	line:66	language:C++	class:WAVIMG_prm	access:private
_flag_nm_lower_bound	base_crystal.hpp	/^    bool _flag_nm_lower_bound = false;$/;"	member	line:111	language:C++	class:BaseCrystal	access:protected
_flag_nm_upper_bound	base_crystal.hpp	/^    bool _flag_nm_upper_bound = false;$/;"	member	line:113	language:C++	class:BaseCrystal	access:protected
_flag_nz_simulated_partitions	base_crystal.hpp	/^    bool _flag_nz_simulated_partitions = false;$/;"	member	line:52	language:C++	class:BaseCrystal	access:protected
_flag_parsed_cif	base_cell.hpp	/^    bool _flag_parsed_cif = false;$/;"	member	line:66	language:C++	class:BaseCell	access:protected
_flag_prm_filename	msa_prm.hpp	/^    bool _flag_prm_filename = false;$/;"	member	line:41	language:C++	class:MSA_prm	access:private
_flag_prm_filename	wavimg_prm.hpp	/^    bool _flag_prm_filename;$/;"	member	line:100	language:C++	class:WAVIMG_prm	access:private
_flag_prm_filename_path	msa_prm.hpp	/^    bool _flag_prm_filename_path = false;$/;"	member	line:44	language:C++	class:MSA_prm	access:private
_flag_prm_filename_path	wavimg_prm.hpp	/^    bool _flag_prm_filename_path = false;$/;"	member	line:103	language:C++	class:WAVIMG_prm	access:private
_flag_produced_prm	msa_prm.hpp	/^    bool _flag_produced_prm = false;$/;"	member	line:42	language:C++	class:MSA_prm	access:private
_flag_produced_prm	wavimg_prm.hpp	/^    bool _flag_produced_prm = false;$/;"	member	line:101	language:C++	class:WAVIMG_prm	access:private
_flag_project_dir_path	td_map.hpp	/^    bool _flag_project_dir_path = false;$/;"	member	line:40	language:C++	class:TDMap	access:private
_flag_project_setted	configwin.h	/^    bool _flag_project_setted = false;$/;"	member	line:153	language:C++	class:MainWindow	access:private
_flag_projected_y_axis	base_crystal.hpp	/^    bool _flag_projected_y_axis = false;$/;"	member	line:62	language:C++	class:BaseCrystal	access:protected
_flag_projected_y_axis_u	base_crystal.hpp	/^    bool _flag_projected_y_axis_u = false;$/;"	member	line:59	language:C++	class:BaseCrystal	access:protected
_flag_projected_y_axis_v	base_crystal.hpp	/^    bool _flag_projected_y_axis_v = false;$/;"	member	line:60	language:C++	class:BaseCrystal	access:protected
_flag_projected_y_axis_w	base_crystal.hpp	/^    bool _flag_projected_y_axis_w = false;$/;"	member	line:61	language:C++	class:BaseCrystal	access:protected
_flag_raw_simulated_images_grid	simgrid.hpp	/^    bool _flag_raw_simulated_images_grid = false;$/;"	member	line:70	language:C++	class:SimGrid	access:private
_flag_refinement_definition_method	td_map.hpp	/^    bool _flag_refinement_definition_method = true;$/;"	member	line:32	language:C++	class:TDMap	access:private
_flag_roi_boundary_image	image_bounds.hpp	/^    bool _flag_roi_boundary_image = false;$/;"	member	line:86	language:C++	class:ImageBounds	access:protected
_flag_roi_boundary_image_w_margin	image_bounds.hpp	/^    bool _flag_roi_boundary_image_w_margin = false;$/;"	member	line:98	language:C++	class:ImageBounds	access:protected
_flag_roi_boundary_polygon	image_bounds.hpp	/^    bool _flag_roi_boundary_polygon = false;$/;"	member	line:82	language:C++	class:ImageBounds	access:protected
_flag_roi_boundary_polygon_w_margin	image_bounds.hpp	/^    bool _flag_roi_boundary_polygon_w_margin = false;$/;"	member	line:94	language:C++	class:ImageBounds	access:protected
_flag_roi_boundary_rect	image_bounds.hpp	/^    bool _flag_roi_boundary_rect = false;$/;"	member	line:84	language:C++	class:ImageBounds	access:protected
_flag_roi_boundary_rect_w_margin	image_bounds.hpp	/^    bool _flag_roi_boundary_rect_w_margin = false;$/;"	member	line:96	language:C++	class:ImageBounds	access:protected
_flag_roi_center_x	base_image.hpp	/^    bool _flag_roi_center_x = false;$/;"	member	line:93	language:C++	class:BaseImage	access:protected
_flag_roi_center_x	deprecated/image_crystal.hpp	/^    bool _flag_roi_center_x = false;$/;"	member	line:44	language:C++	class:Image_Crystal	access:private
_flag_roi_center_y	base_image.hpp	/^    bool _flag_roi_center_y = false;$/;"	member	line:95	language:C++	class:BaseImage	access:protected
_flag_roi_center_y	deprecated/image_crystal.hpp	/^    bool _flag_roi_center_y = false;$/;"	member	line:46	language:C++	class:Image_Crystal	access:private
_flag_roi_image	base_image.hpp	/^    bool _flag_roi_image = false;$/;"	member	line:77	language:C++	class:BaseImage	access:protected
_flag_roi_n_cols_width	base_image.hpp	/^    bool _flag_roi_n_cols_width = false;$/;"	member	line:84	language:C++	class:BaseImage	access:protected
_flag_roi_n_rows_height	base_image.hpp	/^    bool _flag_roi_n_rows_height = false;$/;"	member	line:82	language:C++	class:BaseImage	access:protected
_flag_roi_nm_size_cols_b	base_image.hpp	/^    bool _flag_roi_nm_size_cols_b = false;$/;"	member	line:90	language:C++	class:BaseImage	access:protected
_flag_roi_nm_size_rows_a	base_image.hpp	/^    bool _flag_roi_nm_size_rows_a = false;$/;"	member	line:88	language:C++	class:BaseImage	access:protected
_flag_roi_rectangle	base_image.hpp	/^    bool _flag_roi_rectangle = false;$/;"	member	line:80	language:C++	class:BaseImage	access:protected
_flag_runned_bin	base_bin.hpp	/^    bool _flag_runned_bin = false;$/;"	member	line:60	language:C++	class:BaseBin	access:protected
_flag_runned_tdmap_celslc	td_map.hpp	/^    bool _flag_runned_tdmap_celslc = false;$/;"	member	line:50	language:C++	class:TDMap	access:private
_flag_runned_tdmap_msa	td_map.hpp	/^    bool _flag_runned_tdmap_msa = false;$/;"	member	line:58	language:C++	class:TDMap	access:private
_flag_runned_tdmap_simgrid_correlate	td_map.hpp	/^    bool _flag_runned_tdmap_simgrid_correlate = false;$/;"	member	line:75	language:C++	class:TDMap	access:private
_flag_runned_tdmap_simgrid_read	td_map.hpp	/^    bool _flag_runned_tdmap_simgrid_read = false;$/;"	member	line:74	language:C++	class:TDMap	access:private
_flag_runned_tdmap_wavimg	td_map.hpp	/^    bool _flag_runned_tdmap_wavimg = false;$/;"	member	line:66	language:C++	class:TDMap	access:private
_flag_runned_time	group_options.h	/^    bool _flag_runned_time = false;$/;"	member	line:32	language:C++	class:group_options	access:private
_flag_sampling_rate	base_image.hpp	/^    bool _flag_sampling_rate = false;$/;"	member	line:67	language:C++	class:BaseImage	access:protected
_flag_sampling_rate_x_nm_per_pixel	base_image.hpp	/^    bool _flag_sampling_rate_x_nm_per_pixel = false;$/;"	member	line:64	language:C++	class:BaseImage	access:protected
_flag_sampling_rate_y_nm_per_pixel	base_image.hpp	/^    bool _flag_sampling_rate_y_nm_per_pixel = false;$/;"	member	line:66	language:C++	class:BaseImage	access:protected
_flag_set_container_window_size	cv_image_cell_widget.h	/^    bool _flag_set_container_window_size = false;$/;"	member	line:82	language:C++	class:CvImageCellWidget	access:protected
_flag_simulated_image_grid	gui_tdmap_table.h	/^    bool _flag_simulated_image_grid = false;$/;"	member	line:87	language:C++	class:TDMap_Table	access:private
_flag_simulated_images_grid	simgrid.hpp	/^    bool _flag_simulated_images_grid = false;$/;"	member	line:68	language:C++	class:SimGrid	access:private
_flag_simulated_params_nm_defocus_vec	base_crystal.hpp	/^    bool _flag_simulated_params_nm_defocus_vec = false;$/;"	member	line:142	language:C++	class:BaseCrystal	access:protected
_flag_simulated_params_nm_slice_vec	base_crystal.hpp	/^    bool _flag_simulated_params_nm_slice_vec = false;$/;"	member	line:140	language:C++	class:BaseCrystal	access:protected
_flag_simulated_params_slice_vec	base_crystal.hpp	/^    bool _flag_simulated_params_slice_vec = false;$/;"	member	line:138	language:C++	class:BaseCrystal	access:protected
_flag_slc_file_name_prefix	base_crystal.hpp	/^    bool _flag_slc_file_name_prefix = false;$/;"	member	line:87	language:C++	class:BaseCrystal	access:protected
_flag_slc_output_target_folder	base_crystal.hpp	/^    bool _flag_slc_output_target_folder = false;$/;"	member	line:98	language:C++	class:BaseCrystal	access:protected
_flag_slice_params_accum_nm_slice_vec	base_crystal.hpp	/^    bool _flag_slice_params_accum_nm_slice_vec = false;$/;"	member	line:92	language:C++	class:BaseCrystal	access:protected
_flag_slice_params_nm_slice	base_crystal.hpp	/^    bool _flag_slice_params_nm_slice = false;$/;"	member	line:94	language:C++	class:BaseCrystal	access:protected
_flag_slice_params_nm_slice_vec	base_crystal.hpp	/^    bool _flag_slice_params_nm_slice_vec = false;$/;"	member	line:90	language:C++	class:BaseCrystal	access:protected
_flag_slice_period	base_crystal.hpp	/^    bool _flag_slice_period = false;$/;"	member	line:115	language:C++	class:BaseCrystal	access:protected
_flag_slice_samples	base_crystal.hpp	/^    bool _flag_slice_samples = false;$/;"	member	line:109	language:C++	class:BaseCrystal	access:protected
_flag_slices_lower_bound	base_crystal.hpp	/^    bool _flag_slices_lower_bound = false;$/;"	member	line:118	language:C++	class:BaseCrystal	access:protected
_flag_slices_upper_bound	base_crystal.hpp	/^    bool _flag_slices_upper_bound = false;$/;"	member	line:120	language:C++	class:BaseCrystal	access:protected
_flag_super_cell	base_crystal.hpp	/^    bool _flag_super_cell = false;$/;"	member	line:47	language:C++	class:BaseCrystal	access:private
_flag_super_cell_size	base_crystal.hpp	/^    bool _flag_super_cell_size = false;$/;"	member	line:83	language:C++	class:BaseCrystal	access:protected
_flag_super_cell_size_a	base_crystal.hpp	/^    bool _flag_super_cell_size_a = false;$/;"	member	line:78	language:C++	class:BaseCrystal	access:protected
_flag_super_cell_size_b	base_crystal.hpp	/^    bool _flag_super_cell_size_b = false;$/;"	member	line:80	language:C++	class:BaseCrystal	access:protected
_flag_super_cell_size_c	base_crystal.hpp	/^    bool _flag_super_cell_size_c = false;$/;"	member	line:82	language:C++	class:BaseCrystal	access:protected
_flag_temp_data	treeitem_file_delegate.hpp	/^    bool* _flag_temp_data;$/;"	member	line:64	language:C++	class:TreeItemFileDelegate	access:private
_flag_toolbar	treeitem.h	/^    bool _flag_toolbar = false;$/;"	member	line:235	language:C++	class:TreeItem	access:private
_flag_unit_cell	base_crystal.hpp	/^    bool _flag_unit_cell = false;$/;"	member	line:44	language:C++	class:BaseCrystal	access:private
_flag_wav_output_target_folder	base_crystal.hpp	/^    bool _flag_wav_output_target_folder = false;$/;"	member	line:100	language:C++	class:BaseCrystal	access:protected
_flag_zone_axis	base_crystal.hpp	/^    bool _flag_zone_axis = false;$/;"	member	line:71	language:C++	class:BaseCrystal	access:protected
_flag_zone_axis_u	base_crystal.hpp	/^    bool _flag_zone_axis_u = false;$/;"	member	line:68	language:C++	class:BaseCrystal	access:protected
_flag_zone_axis_v	base_crystal.hpp	/^    bool _flag_zone_axis_v = false;$/;"	member	line:69	language:C++	class:BaseCrystal	access:protected
_flag_zone_axis_w	base_crystal.hpp	/^    bool _flag_zone_axis_w = false;$/;"	member	line:70	language:C++	class:BaseCrystal	access:protected
_force_update_from_group_dependency	group_options.h	/^    bool _force_update_from_group_dependency;$/;"	member	line:33	language:C++	class:group_options	access:private
_fp_data_data_appender_col_pos	treeitem.h	/^    int _fp_data_data_appender_col_pos = 1;$/;"	member	line:224	language:C++	class:TreeItem	access:private
_fp_data_getter_col_pos	treeitem.h	/^    int _fp_data_getter_col_pos = 1;$/;"	member	line:223	language:C++	class:TreeItem	access:private
_fp_data_setter_col_pos	treeitem.h	/^    int _fp_data_setter_col_pos = 1;$/;"	member	line:222	language:C++	class:TreeItem	access:private
_g	base_cell.hpp	/^    cv::Point3d _a,_b,_c,_d,_e,_f,_g,_h;$/;"	member	line:85	language:C++	class:BaseCell	access:protected
_group_name	group_options.h	/^    std::string _group_name;$/;"	member	line:29	language:C++	class:group_options	access:private
_groups	emd_group.h	/^    std::vector<EMDGroup*> _groups;$/;"	member	line:73	language:C++	class:EMDGroup	access:private
_groups_to_listen	group_options.h	/^    std::vector<group_options*> _groups_to_listen;$/;"	member	line:34	language:C++	class:group_options	access:private
_h	base_cell.hpp	/^    cv::Point3d _a,_b,_c,_d,_e,_f,_g,_h;$/;"	member	line:85	language:C++	class:BaseCell	access:protected
_horizontalAngle	vis/camera.hpp	/^        float _horizontalAngle;$/;"	member	line:146	language:C++	class:vis::Camera	access:private
_image_correlation_output	configwin.h	/^    TreeItem* _image_correlation_output;$/;"	member	line:261	language:C++	class:MainWindow	access:private
_image_crystal	deprecated/structure.hpp	/^    Image_Crystal* _image_crystal;$/;"	member	line:11	language:C++	class:Structure	access:private
_image_intensity_distribuitions_output	configwin.h	/^    TreeItem* _image_intensity_distribuitions_output;$/;"	member	line:260	language:C++	class:MainWindow	access:private
_image_set	cv_image_cell_widget.h	/^    bool _image_set = false;$/;"	member	line:81	language:C++	class:CvImageCellWidget	access:protected
_image_set	cv_image_widget.h	/^    bool _image_set = false;$/;"	member	line:68	language:C++	class:CVImageWidget	access:private
_index_electron_diffraction_patterns_output	configwin.h	/^    QModelIndex* _index_electron_diffraction_patterns_output;$/;"	member	line:264	language:C++	class:MainWindow	access:private
_index_image_correlation_output	configwin.h	/^    QModelIndex* _index_image_correlation_output;$/;"	member	line:266	language:C++	class:MainWindow	access:private
_index_image_intensity_distribuitions_output	configwin.h	/^    QModelIndex* _index_image_intensity_distribuitions_output;$/;"	member	line:265	language:C++	class:MainWindow	access:private
_index_multislice_phase_granting_output	configwin.h	/^    QModelIndex* _index_multislice_phase_granting_output;$/;"	member	line:263	language:C++	class:MainWindow	access:private
_io_pipe_out	base_bin.hpp	/^    boost::process::ipstream& _io_pipe_out;$/;"	member	line:41	language:C++	class:BaseBin	access:protected
_is_best	cv_image_cell_widget.h	/^    bool _is_best(){$/;"	function	line:41	language:C++	class:CvImageCellWidget	access:public
_is_experimental_image_full_defined	deprecated/image_crystal.cpp	/^bool Image_Crystal::_is_experimental_image_full_defined(){$/;"	function	line:19	language:C++	class:Image_Crystal
_is_image_setted	cv_tdmap_cell_image_frame.cpp	/^ bool CvTDMapImageFrame::_is_image_setted(){$/;"	function	line:47	language:C++	class:CvTDMapImageFrame
_is_initialization_ok	configwin.cpp	/^bool MainWindow::_is_initialization_ok(){$/;"	function	line:251	language:C++	class:MainWindow
_is_prm_produced	msa_prm.cpp	/^bool MSA_prm::_is_prm_produced(){$/;"	function	line:266	language:C++	class:MSA_prm
_is_roi_defined	deprecated/image_crystal.cpp	/^bool Image_Crystal::_is_roi_defined(){$/;"	function	line:23	language:C++	class:Image_Crystal
_is_save_preferences	settings.cpp	/^bool Settings::_is_save_preferences(){$/;"	function	line:69	language:C++	class:Settings
_is_toolbar_defined	treeitem.cpp	/^bool TreeItem::_is_toolbar_defined(){$/;"	function	line:275	language:C++	class:TreeItem
_item_delegate_type	treeitem.h	/^    DelegateType _item_delegate_type = _delegate_TEXT;$/;"	member	line:230	language:C++	class:TreeItem	access:private
_items_model_variables_map	group_options.h	/^    std::map<std::string,TreeModel*> _items_model_variables_map;$/;"	member	line:21	language:C++	class:group_options	access:private
_items_variables_map	group_options.h	/^    std::map<std::string,TreeItem* > _items_variables_map;$/;"	member	line:20	language:C++	class:group_options	access:private
_load_file_delegate	configwin.h	/^    TreeItemFileDelegate *_load_file_delegate;$/;"	member	line:181	language:C++	class:MainWindow	access:private
_map_datasets	emd_group.h	/^    std::map<std::string,EMDDataSet*> _map_datasets;$/;"	member	line:76	language:C++	class:EMDGroup	access:private
_map_groups	emd_group.h	/^    std::map<std::string,EMDGroup*> _map_groups;$/;"	member	line:74	language:C++	class:EMDGroup	access:private
_mn_sz_hint	cv_image_cell_widget.h	/^    QSize _mn_sz_hint;$/;"	member	line:87	language:C++	class:CvImageCellWidget	access:protected
_msa_parameters	simulation_step.hpp	/^    MSA_prm* _msa_parameters;$/;"	member	line:29	language:C++	class:Simulation_Step	access:private
_multislice_phase_granting_output	configwin.h	/^    TreeItem* _multislice_phase_granting_output;$/;"	member	line:258	language:C++	class:MainWindow	access:private
_n	vis/camera.hpp	/^        glm::vec3 _u, _v, _n;$/;"	member	line:22	language:C++	class:vis::Camera	access:public
_nearPlane	vis/camera.hpp	/^        float _nearPlane;$/;"	member	line:149	language:C++	class:vis::Camera	access:private
_number_calculated_cells	gui_tdmap_table.h	/^    int _number_calculated_cells = 0;$/;"	member	line:62	language:C++	class:TDMap_Table	access:private
_number_drawed_cells	gui_tdmap_table.h	/^    int _number_drawed_cells = 0;$/;"	member	line:61	language:C++	class:TDMap_Table	access:private
_object	vis/program.hpp	/^      GLuint _object;$/;"	member	line:90	language:C++	class:vis::Program	access:private
_object	vis/shader.hpp	/^      GLuint _object;$/;"	member	line:50	language:C++	class:vis::Shader	access:private
_parameter_variation_map	configwin.h	/^  TreeItem* _parameter_variation_map = nullptr;$/;"	member	line:237	language:C++	class:MainWindow	access:private
_parameter_variation_map_defocous	configwin.h	/^  TreeItem* _parameter_variation_map_defocous = nullptr;$/;"	member	line:244	language:C++	class:MainWindow	access:private
_parameter_variation_map_defocus_estimated_nm	configwin.h	/^  TreeItem* _parameter_variation_map_defocus_estimated_nm = nullptr;$/;"	member	line:245	language:C++	class:MainWindow	access:private
_parameter_variation_map_thickness	configwin.h	/^  TreeItem* _parameter_variation_map_thickness = nullptr;$/;"	member	line:238	language:C++	class:MainWindow	access:private
_parameter_variation_map_thickness_estimated_nm	configwin.h	/^  TreeItem* _parameter_variation_map_thickness_estimated_nm = nullptr;$/;"	member	line:239	language:C++	class:MainWindow	access:private
_position	vis/camera.hpp	/^        glm::vec3 _position;$/;"	member	line:145	language:C++	class:vis::Camera	access:private
_preferences_dr_probe_celslc	settings.h	/^    TreeItem* _preferences_dr_probe_celslc;$/;"	member	line:78	language:C++	class:Settings	access:private
_preferences_dr_probe_msa	settings.h	/^    TreeItem* _preferences_dr_probe_msa;$/;"	member	line:79	language:C++	class:Settings	access:private
_preferences_dr_probe_path	settings.h	/^    TreeItem* _preferences_dr_probe_path;$/;"	member	line:81	language:C++	class:Settings	access:private
_preferences_dr_probe_wavimg	settings.h	/^    TreeItem* _preferences_dr_probe_wavimg;$/;"	member	line:80	language:C++	class:Settings	access:private
_q_settings_fileName	configwin.h	/^    QString _q_settings_fileName;$/;"	member	line:184	language:C++	class:MainWindow	access:private
_q_settings_fileName	settings.h	/^    QString _q_settings_fileName;$/;"	member	line:74	language:C++	class:Settings	access:private
_qimage	cv_image_widget.h	/^    QImage _qimage;$/;"	member	line:64	language:C++	class:CVImageWidget	access:private
_refCount	vis/shader.hpp	/^      unsigned* _refCount;$/;"	member	line:51	language:C++	class:vis::Shader	access:private
_refinement_definition_method	td_map.hpp	/^    int _refinement_definition_method = RefinementPreset::NO_REFINEMENT ;$/;"	member	line:31	language:C++	class:TDMap	access:private
_release	vis/shader.cpp	/^void Shader::_release() {$/;"	function	line:94	language:C++	class:Shader
_required_variables_map	group_options.h	/^    std::map<std::string,bool> _required_variables_map;$/;"	member	line:25	language:C++	class:group_options	access:private
_reset_document_modified_flags	configwin.cpp	/^bool MainWindow::_reset_document_modified_flags(){$/;"	function	line:454	language:C++	class:MainWindow
_reset_model_modified	treemodel.cpp	/^bool TreeModel::_reset_model_modified(){$/;"	function	line:211	language:C++	class:TreeModel
_retain	vis/shader.cpp	/^void Shader::_retain() {$/;"	function	line:89	language:C++	class:Shader
_roi_defined	deprecated/image_crystal.hpp	/^    bool _roi_defined = false;$/;"	member	line:42	language:C++	class:Image_Crystal	access:private
_run_celslc_exec_log_level	td_map.hpp	/^    int _run_celslc_exec_log_level = ExecLogMode::FULL_LOG;$/;"	member	line:52	language:C++	class:TDMap	access:private
_run_celslc_switch	td_map.hpp	/^    bool _run_celslc_switch = true;$/;"	member	line:51	language:C++	class:TDMap	access:private
_run_msa_exec_log_level	td_map.hpp	/^    int _run_msa_exec_log_level = ExecLogMode::FULL_LOG;$/;"	member	line:60	language:C++	class:TDMap	access:private
_run_msa_switch	td_map.hpp	/^    bool _run_msa_switch = true;$/;"	member	line:59	language:C++	class:TDMap	access:private
_run_simgrid_switch	td_map.hpp	/^    bool _run_simgrid_switch = true;$/;"	member	line:76	language:C++	class:TDMap	access:private
_run_wavimg_exec_log_level	td_map.hpp	/^    int _run_wavimg_exec_log_level = ExecLogMode::FULL_LOG;$/;"	member	line:68	language:C++	class:TDMap	access:private
_run_wavimg_switch	td_map.hpp	/^    bool _run_wavimg_switch = true;$/;"	member	line:67	language:C++	class:TDMap	access:private
_runned_time	group_options.h	/^    time_t _runned_time;$/;"	member	line:31	language:C++	class:group_options	access:private
_save_preferences	settings.h	/^    bool _save_preferences = false;$/;"	member	line:82	language:C++	class:Settings	access:private
_settings_ok	configwin.h	/^    bool _settings_ok = false;$/;"	member	line:194	language:C++	class:MainWindow	access:private
_sim_a	base_cell.hpp	/^    cv::Point3d _sim_a,_sim_b,_sim_c,_sim_d,_sim_e,_sim_f,_sim_g,_sim_h;$/;"	member	line:86	language:C++	class:BaseCell	access:protected
_sim_b	base_cell.hpp	/^    cv::Point3d _sim_a,_sim_b,_sim_c,_sim_d,_sim_e,_sim_f,_sim_g,_sim_h;$/;"	member	line:86	language:C++	class:BaseCell	access:protected
_sim_c	base_cell.hpp	/^    cv::Point3d _sim_a,_sim_b,_sim_c,_sim_d,_sim_e,_sim_f,_sim_g,_sim_h;$/;"	member	line:86	language:C++	class:BaseCell	access:protected
_sim_correlation_method	simgrid.hpp	/^    int _sim_correlation_method = CV_TM_CCOEFF_NORMED;$/;"	member	line:78	language:C++	class:SimGrid	access:private
_sim_d	base_cell.hpp	/^    cv::Point3d _sim_a,_sim_b,_sim_c,_sim_d,_sim_e,_sim_f,_sim_g,_sim_h;$/;"	member	line:86	language:C++	class:BaseCell	access:protected
_sim_e	base_cell.hpp	/^    cv::Point3d _sim_a,_sim_b,_sim_c,_sim_d,_sim_e,_sim_f,_sim_g,_sim_h;$/;"	member	line:86	language:C++	class:BaseCell	access:protected
_sim_f	base_cell.hpp	/^    cv::Point3d _sim_a,_sim_b,_sim_c,_sim_d,_sim_e,_sim_f,_sim_g,_sim_h;$/;"	member	line:86	language:C++	class:BaseCell	access:protected
_sim_g	base_cell.hpp	/^    cv::Point3d _sim_a,_sim_b,_sim_c,_sim_d,_sim_e,_sim_f,_sim_g,_sim_h;$/;"	member	line:86	language:C++	class:BaseCell	access:protected
_sim_h	base_cell.hpp	/^    cv::Point3d _sim_a,_sim_b,_sim_c,_sim_d,_sim_e,_sim_f,_sim_g,_sim_h;$/;"	member	line:86	language:C++	class:BaseCell	access:protected
_sim_super_cell_thread	configwin.h	/^    QThread *_sim_super_cell_thread;$/;"	member	line:175	language:C++	class:MainWindow	access:private
_sim_tdmap_celslc_ostream_buffer	configwin.h	/^    boost::process::ipstream _sim_tdmap_celslc_ostream_buffer;$/;"	member	line:68	language:C++	class:MainWindow	access:public
_sim_tdmap_msa_ostream_buffer	configwin.h	/^    boost::process::ipstream _sim_tdmap_msa_ostream_buffer;$/;"	member	line:69	language:C++	class:MainWindow	access:public
_sim_tdmap_output_thread	configwin.h	/^    QThread *_sim_tdmap_output_thread;$/;"	member	line:178	language:C++	class:MainWindow	access:private
_sim_tdmap_simgrid_ostream_buffer	configwin.h	/^    boost::process::ipstream _sim_tdmap_simgrid_ostream_buffer;$/;"	member	line:71	language:C++	class:MainWindow	access:public
_sim_tdmap_thread	configwin.h	/^    QThread *_sim_tdmap_thread;$/;"	member	line:172	language:C++	class:MainWindow	access:private
_sim_tdmap_wavimg_ostream_buffer	configwin.h	/^    boost::process::ipstream _sim_tdmap_wavimg_ostream_buffer;$/;"	member	line:70	language:C++	class:MainWindow	access:public
_simulation_refinement	configwin.h	/^  TreeItem* _simulation_refinement = nullptr;$/;"	member	line:255	language:C++	class:MainWindow	access:private
_slider_int_range_max	treeitem.h	/^    int _slider_int_range_max;$/;"	member	line:228	language:C++	class:TreeItem	access:private
_slider_int_range_min	treeitem.h	/^    int _slider_int_range_min;$/;"	member	line:227	language:C++	class:TreeItem	access:private
_status_NOT_READY	treeitem.h	/^    enum ActionStatusType { _status_NOT_READY, _status_READY_TO_RUN, _status_RUNNING, _status_RUNNED_OK, _status_RUNNED_ERROR };$/;"	enumerator	line:28	language:C++	enum:TreeItem::ActionStatusType
_status_READY_TO_RUN	treeitem.h	/^    enum ActionStatusType { _status_NOT_READY, _status_READY_TO_RUN, _status_RUNNING, _status_RUNNED_OK, _status_RUNNED_ERROR };$/;"	enumerator	line:28	language:C++	enum:TreeItem::ActionStatusType
_status_RUNNED_ERROR	treeitem.h	/^    enum ActionStatusType { _status_NOT_READY, _status_READY_TO_RUN, _status_RUNNING, _status_RUNNED_OK, _status_RUNNED_ERROR };$/;"	enumerator	line:28	language:C++	enum:TreeItem::ActionStatusType
_status_RUNNED_OK	treeitem.h	/^    enum ActionStatusType { _status_NOT_READY, _status_READY_TO_RUN, _status_RUNNING, _status_RUNNED_OK, _status_RUNNED_ERROR };$/;"	enumerator	line:28	language:C++	enum:TreeItem::ActionStatusType
_status_RUNNING	treeitem.h	/^    enum ActionStatusType { _status_NOT_READY, _status_READY_TO_RUN, _status_RUNNING, _status_RUNNED_OK, _status_RUNNED_ERROR };$/;"	enumerator	line:28	language:C++	enum:TreeItem::ActionStatusType
_status_column	treeitem.h	/^    int _status_column = 0;$/;"	member	line:240	language:C++	class:TreeItem	access:private
_step_descriptor	simulation_step.hpp	/^    std::string _step_descriptor;$/;"	member	line:19	language:C++	class:Simulation_Step	access:private
_step_id	simulation_step.hpp	/^    int _step_id;$/;"	member	line:18	language:C++	class:Simulation_Step	access:private
_structure_name	deprecated/structure.hpp	/^    std::string _structure_name;$/;"	member	line:8	language:C++	class:Structure	access:private
_super_cell	simulation_step.hpp	/^    Super_Cell* _super_cell;$/;"	member	line:25	language:C++	class:Simulation_Step	access:private
_super_cell	td_map.hpp	/^    SuperCell* _super_cell;$/;"	member	line:81	language:C++	class:TDMap	access:private
_symmetry_space_group_name_H_M	base_cell.hpp	/^    std::string _symmetry_space_group_name_H_M;$/;"	member	line:159	language:C++	class:BaseCell	access:protected
_sz_hint	cv_image_cell_widget.h	/^    QSize _sz_hint;$/;"	member	line:86	language:C++	class:CvImageCellWidget	access:protected
_td_map_simgrid	td_map.hpp	/^    SimGrid* _td_map_simgrid;$/;"	member	line:73	language:C++	class:TDMap	access:private
_tdmap_celslc_parameters	td_map.hpp	/^    CELSLC_prm* _tdmap_celslc_parameters;$/;"	member	line:49	language:C++	class:TDMap	access:private
_tdmap_msa_parameters	td_map.hpp	/^    MSA_prm* _tdmap_msa_parameters;$/;"	member	line:57	language:C++	class:TDMap	access:private
_tdmap_wavimg_parameters	td_map.hpp	/^    WAVIMG_prm* _tdmap_wavimg_parameters;$/;"	member	line:65	language:C++	class:TDMap	access:private
_tmp_current	cv_image_widget.h	/^    cv::Mat _tmp_original, _tmp_current;$/;"	member	line:65	language:C++	class:CVImageWidget	access:private
_tmp_original	cv_image_widget.h	/^    cv::Mat _tmp_original, _tmp_current;$/;"	member	line:65	language:C++	class:CVImageWidget	access:private
_toolbar_actions	treeitem.h	/^    std::vector<boost::function<bool()>> _toolbar_actions;$/;"	member	line:234	language:C++	class:TreeItem	access:private
_toolbar_actions_description	treeitem.h	/^    QVector<QVariant> _toolbar_actions_description;$/;"	member	line:233	language:C++	class:TreeItem	access:private
_tree_delegate	settings.h	/^    TreeItemFileDelegate *_tree_delegate;$/;"	member	line:85	language:C++	class:Settings	access:private
_treeitem_changes_to_invalidate_grid_watch_col	gui_tdmap_table.h	/^    int _treeitem_changes_to_invalidate_grid_watch_col;$/;"	member	line:85	language:C++	class:TDMap_Table	access:private
_treeitem_defocus_range_number_samples_watch_col	gui_tdmap_table.h	/^    int _treeitem_defocus_range_number_samples_watch_col;$/;"	member	line:84	language:C++	class:TDMap_Table	access:private
_treeitem_thickness_range_number_samples_watch_col	gui_tdmap_table.h	/^    int _treeitem_thickness_range_number_samples_watch_col;$/;"	member	line:83	language:C++	class:TDMap_Table	access:private
_u	vis/camera.hpp	/^        glm::vec3 _u, _v, _n;$/;"	member	line:22	language:C++	class:vis::Camera	access:public
_unit_cell	simulation_step.hpp	/^    UnitCell* _unit_cell;$/;"	member	line:22	language:C++	class:Simulation_Step	access:private
_v	vis/camera.hpp	/^        glm::vec3 _u, _v, _n;$/;"	member	line:22	language:C++	class:vis::Camera	access:public
_variable_description	treeitem.h	/^    std::string _variable_description;$/;"	member	line:238	language:C++	class:TreeItem	access:private
_variable_name	treeitem.h	/^    std::string _variable_name;$/;"	member	line:237	language:C++	class:TreeItem	access:private
_verticalAngle	vis/camera.hpp	/^        float _verticalAngle;$/;"	member	line:147	language:C++	class:vis::Camera	access:private
_viewportAspectRatio	vis/camera.hpp	/^        float _viewportAspectRatio;$/;"	member	line:151	language:C++	class:vis::Camera	access:private
_vis_up	vis/camera.hpp	/^        glm::vec3 _eye, _center, _vis_up;$/;"	member	line:21	language:C++	class:vis::Camera	access:public
_was_document_modified	configwin.cpp	/^bool MainWindow::_was_document_modified(){$/;"	function	line:442	language:C++	class:MainWindow
_was_model_modified	treemodel.cpp	/^bool TreeModel::_was_model_modified(){$/;"	function	line:207	language:C++	class:TreeModel
_wavimg_parameters	simulation_step.hpp	/^    WAVIMG_prm* _wavimg_parameters;$/;"	member	line:30	language:C++	class:Simulation_Step	access:private
_window_height	vis/camera.hpp	/^        int  _window_width, _window_height; $/;"	member	line:23	language:C++	class:vis::Camera	access:public
_window_width	vis/camera.hpp	/^        int  _window_width, _window_height; $/;"	member	line:23	language:C++	class:vis::Camera	access:public
_working	gui_sim_updater.hpp	/^    bool _working;$/;"	member	line:129	language:C++	class:GuiSimOutUpdater	access:private
_x_min_size_nm	base_cell.hpp	/^    double _x_min_size_nm;$/;"	member	line:81	language:C++	class:BaseCell	access:protected
_y_min_size_nm	base_cell.hpp	/^    double _y_min_size_nm;$/;"	member	line:82	language:C++	class:BaseCell	access:protected
_z_min_size_nm	base_cell.hpp	/^    double _z_min_size_nm;$/;"	member	line:83	language:C++	class:BaseCell	access:protected
a	edge.hpp	/^  const cv::Point2d a, b;$/;"	member	line:21	language:C++	struct:Edge	access:public
ab_margin	base_cell.hpp	/^    double ab_margin = 0.0f;$/;"	member	line:110	language:C++	class:BaseCell	access:protected
aberration_definition_1st_coefficient_value_nm	wavimg_prm.hpp	/^    std::map<int,double>  aberration_definition_1st_coefficient_value_nm;$/;"	member	line:76	language:C++	class:WAVIMG_prm	access:private
aberration_definition_2nd_coefficient_value_nm	wavimg_prm.hpp	/^    std::map<int,double>  aberration_definition_2nd_coefficient_value_nm;$/;"	member	line:77	language:C++	class:WAVIMG_prm	access:private
aberration_definition_switch	wavimg_prm.hpp	/^    std::map<int,bool>  aberration_definition_switch;$/;"	member	line:75	language:C++	class:WAVIMG_prm	access:private
abort	gui_sim_updater.hpp	/^    void abort()$/;"	function	line:98	language:C++	class:GuiSimOutUpdater	access:public
about	configwin.cpp	/^void MainWindow::about(){$/;"	function	line:696	language:C++	class:MainWindow
abs_switch	celslc_prm.hpp	/^    bool abs_switch = false;$/;"	member	line:52	language:C++	class:CELSLC_prm	access:private
accelaration_voltage_kv	configwin.h	/^  TreeItem* accelaration_voltage_kv = nullptr;$/;"	member	line:251	language:C++	class:MainWindow	access:private
addNamedCodepoint	QtAwesome.cpp	/^void QtAwesome::addNamedCodepoint( const QString& name, int codePoint)$/;"	function	line:1004	language:C++	class:QtAwesome
addRect	cv_image_widget.cpp	/^void CVImageWidget::addRect( cv::Rect _area_rect, int penWidth, QString description ){$/;"	function	line:123	language:C++	class:CVImageWidget
addRect	cv_image_widget.cpp	/^void CVImageWidget::addRect( cv::Rect _area_rect, int penWidth, cv::Vec3b penColor, QString description ){$/;"	function	line:127	language:C++	class:CVImageWidget
addShapePolygon	cv_image_frame.cpp	/^void CvImageFrameWidget::addShapePolygon( std::vector<cv::Point2i> polygon , cv::Point2i top_left,  int pen_width, QString shape_description ){$/;"	function	line:55	language:C++	class:CvImageFrameWidget
addShapePolygon	cv_image_frame.cpp	/^void CvImageFrameWidget::addShapePolygon( std::vector<cv::Point2i> polygon , cv::Point2i top_left,  int pen_width, cv::Vec3b pen_color, QString shape_description ){$/;"	function	line:60	language:C++	class:CvImageFrameWidget
addShapePolygon	cv_image_widget.cpp	/^void CVImageWidget::addShapePolygon( std::vector<cv::Point2i> polygon , cv::Point2i top_left,  int penWidth , QString description ){$/;"	function	line:138	language:C++	class:CVImageWidget
addShapePolygon	cv_image_widget.cpp	/^void CVImageWidget::addShapePolygon( std::vector<cv::Point2i> polygon , cv::Point2i top_left,  int penWidth, cv::Vec3b penColor , QString description ){$/;"	function	line:142	language:C++	class:CVImageWidget
addShapeRect	cv_image_frame.cpp	/^void CvImageFrameWidget::addShapeRect( cv::Rect _rectangle, int pen_width, QString shape_description ){$/;"	function	line:45	language:C++	class:CvImageFrameWidget
addShapeRect	cv_image_frame.cpp	/^void CvImageFrameWidget::addShapeRect( cv::Rect _rectangle, int pen_width, cv::Vec3b pen_color, QString shape_description ){$/;"	function	line:50	language:C++	class:CvImageFrameWidget
add_atom_site_fract_x	base_cell.cpp	/^void BaseCell::add_atom_site_fract_x( double fract_x ){$/;"	function	line:278	language:C++	class:BaseCell
add_atom_site_fract_y	base_cell.cpp	/^void BaseCell::add_atom_site_fract_y( double fract_y ){$/;"	function	line:282	language:C++	class:BaseCell
add_atom_site_fract_z	base_cell.cpp	/^void BaseCell::add_atom_site_fract_z( double fract_z ){$/;"	function	line:286	language:C++	class:BaseCell
add_atom_site_occupancy	base_cell.cpp	/^void BaseCell::add_atom_site_occupancy( double occupancy ){$/;"	function	line:290	language:C++	class:BaseCell
add_atom_site_type_symbol	base_cell.cpp	/^void BaseCell::add_atom_site_type_symbol( std::string type_symbol ){$/;"	function	line:274	language:C++	class:BaseCell
add_loop	mc_driver.cpp	/^void MC::MC_Driver::add_loop( const int loop_number){$/;"	function	line:82	language:C++	class:MC::MC_Driver
add_looped_ItemName	mc_driver.cpp	/^void MC::MC_Driver::add_looped_ItemName( const int loop_number, const int loop_col_number, const std::string &ItemName){$/;"	function	line:87	language:C++	class:MC::MC_Driver
add_looped_ItemValue	mc_driver.cpp	/^void MC::MC_Driver::add_looped_ItemValue(const int loop_number, const int loop_col_number,  const std::string &ItemValue){$/;"	function	line:97	language:C++	class:MC::MC_Driver
add_non_looped_item	mc_driver.cpp	/^void MC::MC_Driver::add_non_looped_item( const std::string &ItemName, const std::string &ItemValue){$/;"	function	line:77	language:C++	class:MC::MC_Driver
add_option	group_options.cpp	/^bool group_options::add_option( std::string varname, std::string description, bool required ){$/;"	function	line:19	language:C++	class:group_options
add_option	group_options.cpp	/^bool group_options::add_option(TreeModel* model, TreeItem* item , int column, bool required ){$/;"	function	line:29	language:C++	class:group_options
add_parameter_loop	wavimg_prm.cpp	/^void WAVIMG_prm::add_parameter_loop ( int parameter_class , int parameter_index, int variation_form, double range_0, double range_1, double range_n, std::string string_identifier ){$/;"	function	line:610	language:C++	class:WAVIMG_prm
add_symmetry_equiv_pos_as_x	base_cell.cpp	/^void BaseCell::add_symmetry_equiv_pos_as_x(std::string x){$/;"	function	line:262	language:C++	class:BaseCell
add_symmetry_equiv_pos_as_xyz	base_cell.cpp	/^void BaseCell::add_symmetry_equiv_pos_as_xyz(std::string xyz){$/;"	function	line:258	language:C++	class:BaseCell
add_symmetry_equiv_pos_as_y	base_cell.cpp	/^void BaseCell::add_symmetry_equiv_pos_as_y(std::string y){$/;"	function	line:266	language:C++	class:BaseCell
add_symmetry_equiv_pos_as_z	base_cell.cpp	/^void BaseCell::add_symmetry_equiv_pos_as_z(std::string z){$/;"	function	line:270	language:C++	class:BaseCell
add_toolbar	treeitem.cpp	/^void TreeItem::add_toolbar ( QVector<QVariant> actions_description , std::vector<boost::function<bool()>> actions ){$/;"	function	line:234	language:C++	class:TreeItem
addressbook	QtAwesome.h	/^      addressbook                      = 0xf2b9,$/;"	enumerator	line:27	language:C++	enum:fa::icon
addressbooko	QtAwesome.h	/^      addressbooko                     = 0xf2ba,$/;"	enumerator	line:28	language:C++	enum:fa::icon
addresscard	QtAwesome.h	/^      addresscard                      = 0xf2bb,$/;"	enumerator	line:29	language:C++	enum:fa::icon
addresscardo	QtAwesome.h	/^      addresscardo                     = 0xf2bc,$/;"	enumerator	line:30	language:C++	enum:fa::icon
adjust	QtAwesome.h	/^      adjust                           = 0xf042,$/;"	enumerator	line:31	language:C++	enum:fa::icon
adn	QtAwesome.h	/^      adn                              = 0xf170,$/;"	enumerator	line:32	language:C++	enum:fa::icon
aid	emd_attribute.h	/^    hid_t aid;$/;"	member	line:19	language:C++	class:EMDAttribute	access:protected
alignMenu	configwin.h	/^    QMenu* alignMenu;$/;"	member	line:201	language:C++	class:MainWindow	access:private
alignRect	treeitem_file_delegate.cpp	/^QRect TreeItemFileDelegate::alignRect( QRect object,  QRect frame, int position,   Qt::AlignmentFlag alignment ) const {$/;"	function	line:519	language:C++	class:TreeItemFileDelegate
alignToolButton	configwin.h	/^    CustomToolButton* alignToolButton;$/;"	member	line:204	language:C++	class:MainWindow	access:private
alignToolButton	treeitem.h	/^    CustomToolButton* alignToolButton;$/;"	member	line:232	language:C++	class:TreeItem	access:private
aligncenter	QtAwesome.h	/^      aligncenter                      = 0xf037,$/;"	enumerator	line:33	language:C++	enum:fa::icon
alignjustify	QtAwesome.h	/^      alignjustify                     = 0xf039,$/;"	enumerator	line:34	language:C++	enum:fa::icon
alignleft	QtAwesome.h	/^      alignleft                        = 0xf036,$/;"	enumerator	line:35	language:C++	enum:fa::icon
alignright	QtAwesome.h	/^      alignright                       = 0xf038,$/;"	enumerator	line:36	language:C++	enum:fa::icon
amazon	QtAwesome.h	/^      amazon                           = 0xf270,$/;"	enumerator	line:37	language:C++	enum:fa::icon
ambulance	QtAwesome.h	/^      ambulance                        = 0xf0f9,$/;"	enumerator	line:38	language:C++	enum:fa::icon
americansignlanguageinterpreting	QtAwesome.h	/^      americansignlanguageinterpreting = 0xf2a3,$/;"	enumerator	line:39	language:C++	enum:fa::icon
anchor	QtAwesome.h	/^      anchor                           = 0xf13d,$/;"	enumerator	line:40	language:C++	enum:fa::icon
android	QtAwesome.h	/^      android                          = 0xf17b,$/;"	enumerator	line:41	language:C++	enum:fa::icon
angellist	QtAwesome.h	/^      angellist                        = 0xf209,$/;"	enumerator	line:42	language:C++	enum:fa::icon
angle_	QtAwesomeAnim.h	/^    float angle_;$/;"	member	line:31	language:C++	class:QtAwesomeAnimation	access:private
angle_alpha	base_cell.hpp	/^    double angle_alpha;$/;"	member	line:76	language:C++	class:BaseCell	access:protected
angle_beta	base_cell.hpp	/^    double angle_beta;$/;"	member	line:77	language:C++	class:BaseCell	access:protected
angle_gamma	base_cell.hpp	/^    double angle_gamma;$/;"	member	line:78	language:C++	class:BaseCell	access:protected
angledoubledown	QtAwesome.h	/^      angledoubledown                  = 0xf103,$/;"	enumerator	line:43	language:C++	enum:fa::icon
angledoubleleft	QtAwesome.h	/^      angledoubleleft                  = 0xf100,$/;"	enumerator	line:44	language:C++	enum:fa::icon
angledoubleright	QtAwesome.h	/^      angledoubleright                 = 0xf101,$/;"	enumerator	line:45	language:C++	enum:fa::icon
angledoubleup	QtAwesome.h	/^      angledoubleup                    = 0xf102,$/;"	enumerator	line:46	language:C++	enum:fa::icon
angledown	QtAwesome.h	/^      angledown                        = 0xf107,$/;"	enumerator	line:47	language:C++	enum:fa::icon
angleleft	QtAwesome.h	/^      angleleft                        = 0xf104,$/;"	enumerator	line:48	language:C++	enum:fa::icon
angleright	QtAwesome.h	/^      angleright                       = 0xf105,$/;"	enumerator	line:49	language:C++	enum:fa::icon
angleup	QtAwesome.h	/^      angleup                          = 0xf106,$/;"	enumerator	line:50	language:C++	enum:fa::icon
anisotropic_second_rms_amplitude	wavimg_prm.hpp	/^    double anisotropic_second_rms_amplitude = 0.0f;$/;"	member	line:70	language:C++	class:WAVIMG_prm	access:private
appendData	treeitem.cpp	/^bool TreeItem::appendData( int column, const QVariant &value){$/;"	function	line:537	language:C++	class:TreeItem
appendData	treemodel.cpp	/^bool TreeModel::appendData(const QModelIndex &index, const QVariant &value){$/;"	function	line:160	language:C++	class:TreeModel
apple	QtAwesome.h	/^      apple                            = 0xf179,$/;"	enumerator	line:51	language:C++	enum:fa::icon
apply_margin_to_grid	simgrid.cpp	/^bool SimGrid::apply_margin_to_grid(){$/;"	function	line:431	language:C++	class:SimGrid
archive	QtAwesome.h	/^      archive                          = 0xf187,$/;"	enumerator	line:52	language:C++	enum:fa::icon
are_group_vars_setted_up	group_options.cpp	/^bool group_options::are_group_vars_setted_up( ){$/;"	function	line:89	language:C++	class:group_options
areachart	QtAwesome.h	/^      areachart                        = 0xf1fe,$/;"	enumerator	line:53	language:C++	enum:fa::icon
arrowcircledown	QtAwesome.h	/^      arrowcircledown                  = 0xf0ab,$/;"	enumerator	line:54	language:C++	enum:fa::icon
arrowcircleleft	QtAwesome.h	/^      arrowcircleleft                  = 0xf0a8,$/;"	enumerator	line:55	language:C++	enum:fa::icon
arrowcircleodown	QtAwesome.h	/^      arrowcircleodown                 = 0xf01a,$/;"	enumerator	line:56	language:C++	enum:fa::icon
arrowcircleoleft	QtAwesome.h	/^      arrowcircleoleft                 = 0xf190,$/;"	enumerator	line:57	language:C++	enum:fa::icon
arrowcircleoright	QtAwesome.h	/^      arrowcircleoright                = 0xf18e,$/;"	enumerator	line:58	language:C++	enum:fa::icon
arrowcircleoup	QtAwesome.h	/^      arrowcircleoup                   = 0xf01b,$/;"	enumerator	line:59	language:C++	enum:fa::icon
arrowcircleright	QtAwesome.h	/^      arrowcircleright                 = 0xf0a9,$/;"	enumerator	line:60	language:C++	enum:fa::icon
arrowcircleup	QtAwesome.h	/^      arrowcircleup                    = 0xf0aa,$/;"	enumerator	line:61	language:C++	enum:fa::icon
arrowdown	QtAwesome.h	/^      arrowdown                        = 0xf063,$/;"	enumerator	line:62	language:C++	enum:fa::icon
arrowleft	QtAwesome.h	/^      arrowleft                        = 0xf060,$/;"	enumerator	line:63	language:C++	enum:fa::icon
arrowright	QtAwesome.h	/^      arrowright                       = 0xf061,$/;"	enumerator	line:64	language:C++	enum:fa::icon
arrows	QtAwesome.h	/^      arrows                           = 0xf047,$/;"	enumerator	line:66	language:C++	enum:fa::icon
arrowsalt	QtAwesome.h	/^      arrowsalt                        = 0xf0b2,$/;"	enumerator	line:67	language:C++	enum:fa::icon
arrowsh	QtAwesome.h	/^      arrowsh                          = 0xf07e,$/;"	enumerator	line:68	language:C++	enum:fa::icon
arrowsv	QtAwesome.h	/^      arrowsv                          = 0xf07d,$/;"	enumerator	line:69	language:C++	enum:fa::icon
arrowup	QtAwesome.h	/^      arrowup                          = 0xf062,$/;"	enumerator	line:65	language:C++	enum:fa::icon
aslinterpreting	QtAwesome.h	/^      aslinterpreting                  = 0xf2a3,$/;"	enumerator	line:70	language:C++	enum:fa::icon
aspace	emd_attribute.h	/^hid_t aspace;$/;"	member	line:22	language:C++	class:EMDAttribute	access:protected
assistivelisteningsystems	QtAwesome.h	/^      assistivelisteningsystems        = 0xf2a2,$/;"	enumerator	line:71	language:C++	enum:fa::icon
asterisk	QtAwesome.h	/^      asterisk                         = 0xf069,$/;"	enumerator	line:72	language:C++	enum:fa::icon
at	QtAwesome.h	/^      at                               = 0xf1fa,$/;"	enumerator	line:73	language:C++	enum:fa::icon
atom_cpk_rgba_colors	base_cell.hpp	/^    std::vector<cv::Vec4d> atom_cpk_rgba_colors;$/;"	member	line:97	language:C++	class:BaseCell	access:protected
atom_debye_waller_factor	base_cell.hpp	/^    std::vector<double> atom_debye_waller_factor;$/;"	member	line:96	language:C++	class:BaseCell	access:protected
atom_empirical_radii	base_cell.hpp	/^    std::vector<double> atom_empirical_radii;$/;"	member	line:98	language:C++	class:BaseCell	access:protected
atom_fractional_cell_coordinates	base_cell.hpp	/^    std::vector<cv::Point3d> atom_fractional_cell_coordinates;$/;"	member	line:101	language:C++	class:BaseCell	access:protected
atom_occupancies	base_cell.hpp	/^    std::vector<double> atom_occupancies;$/;"	member	line:181	language:C++	class:BaseCell	access:protected
atom_positions	base_cell.hpp	/^    std::vector<cv::Point3d> atom_positions;$/;"	member	line:92	language:C++	class:BaseCell	access:protected
atom_radii	base_cell.hpp	/^    std::vector<double> atom_radii;$/;"	member	line:182	language:C++	class:BaseCell	access:protected
atom_rgba_colors	base_cell.hpp	/^    std::vector<cv::Vec4d> atom_rgba_colors;$/;"	member	line:185	language:C++	class:BaseCell	access:protected
atom_site_occupancy	base_cell.hpp	/^    std::vector<double> atom_site_occupancy;$/;"	member	line:95	language:C++	class:BaseCell	access:protected
atom_symbol_string	base_cell.hpp	/^    std::vector<std::string> atom_symbol_string;$/;"	member	line:94	language:C++	class:BaseCell	access:protected
atom_type_name	atom_info.hpp	/^    std::string atom_type_name;$/;"	member	line:87	language:C++	class:Atom_Info	access:private
atom_type_symbol	atom_info.hpp	/^    std::string atom_type_symbol;$/;"	member	line:86	language:C++	class:Atom_Info	access:private
atom_type_symbols	base_cell.hpp	/^    std::vector<std::string> atom_type_symbols;$/;"	member	line:180	language:C++	class:BaseCell	access:protected
atomicMass	atom_info.cpp	/^double Atom_Info::atomicMass()  {$/;"	function	line:56	language:C++	class:Atom_Info
atomicNumber	atom_info.cpp	/^int Atom_Info::atomicNumber()  {$/;"	function	line:51	language:C++	class:Atom_Info
atoms	base_cell.hpp	/^    std::vector<Atom> atoms;$/;"	member	line:178	language:C++	class:BaseCell	access:protected
atoms_site_Wyckoff_symbols	base_cell.hpp	/^    std::vector<std::string> atoms_site_Wyckoff_symbols;$/;"	member	line:170	language:C++	class:BaseCell	access:protected
atoms_site_fract_x	base_cell.hpp	/^    std::vector<double> atoms_site_fract_x;$/;"	member	line:171	language:C++	class:BaseCell	access:protected
atoms_site_fract_y	base_cell.hpp	/^    std::vector<double> atoms_site_fract_y;$/;"	member	line:172	language:C++	class:BaseCell	access:protected
atoms_site_fract_z	base_cell.hpp	/^    std::vector<double> atoms_site_fract_z;$/;"	member	line:173	language:C++	class:BaseCell	access:protected
atoms_site_labels	base_cell.hpp	/^    std::vector<std::string> atoms_site_labels;$/;"	member	line:167	language:C++	class:BaseCell	access:protected
atoms_site_occupancy	base_cell.hpp	/^    std::vector<double> atoms_site_occupancy;$/;"	member	line:174	language:C++	class:BaseCell	access:protected
atoms_site_symetry_multiplicities	base_cell.hpp	/^    std::vector<std::string> atoms_site_symetry_multiplicities;$/;"	member	line:169	language:C++	class:BaseCell	access:protected
atoms_site_type_symbols	base_cell.hpp	/^    std::vector<std::string> atoms_site_type_symbols;$/;"	member	line:168	language:C++	class:BaseCell	access:protected
attrib	vis/program.cpp	/^GLint Program::attrib(const GLchar* attribName) const {$/;"	function	line:72	language:C++	class:Program
atype	emd_attribute.h	/^hid_t atype;$/;"	member	line:21	language:C++	class:EMDAttribute	access:protected
audiodescription	QtAwesome.h	/^      audiodescription                 = 0xf29e,$/;"	enumerator	line:74	language:C++	enum:fa::icon
auto_calculate_dimensions	base_image.cpp	/^bool BaseImage::auto_calculate_dimensions(){$/;"	function	line:8	language:C++	class:BaseImage
auto_calculate_thickness_lower_upper_nm	td_map.cpp	/^bool TDMap::auto_calculate_thickness_lower_upper_nm(  ){$/;"	function	line:1169	language:C++	class:TDMap
auto_calculate_thickness_range_lower_upper_nm	td_map.cpp	/^bool TDMap::auto_calculate_thickness_range_lower_upper_nm(  ){$/;"	function	line:1153	language:C++	class:TDMap
auto_equidistant_slices_switch	celslc_prm.hpp	/^    bool auto_equidistant_slices_switch = false;$/;"	member	line:55	language:C++	class:CELSLC_prm	access:private
auto_lower_upper	configwin.h	/^    QAction*  auto_lower_upper;$/;"	member	line:203	language:C++	class:MainWindow	access:private
auto_non_equidistant_slices_switch	celslc_prm.hpp	/^    bool auto_non_equidistant_slices_switch = false;$/;"	member	line:56	language:C++	class:CELSLC_prm	access:private
auto_range_lower_upper	configwin.h	/^    QAction*  auto_range_lower_upper;$/;"	member	line:202	language:C++	class:MainWindow	access:private
automobile	QtAwesome.h	/^      automobile                       = 0xf1b9,$/;"	enumerator	line:75	language:C++	enum:fa::icon
awesomeRef_	QtAwesome.cpp	/^    QtAwesome* awesomeRef_;                  \/\/\/< a reference to the QtAwesome instance$/;"	member	line:117	language:C++	class:QtAwesomeIconPainterIconEngine	file:	access:private
azimuth_orientation_angle	wavimg_prm.hpp	/^    double azimuth_orientation_angle = 0.0f;$/;"	member	line:71	language:C++	class:WAVIMG_prm	access:private
b	edge.hpp	/^  const cv::Point2d a, b;$/;"	member	line:21	language:C++	struct:Edge	access:public
backward	QtAwesome.h	/^      backward                         = 0xf04a,$/;"	enumerator	line:76	language:C++	enum:fa::icon
balancescale	QtAwesome.h	/^      balancescale                     = 0xf24e,$/;"	enumerator	line:77	language:C++	enum:fa::icon
ban	QtAwesome.h	/^      ban                              = 0xf05e,$/;"	enumerator	line:78	language:C++	enum:fa::icon
bandcamp	QtAwesome.h	/^      bandcamp                         = 0xf2d5,$/;"	enumerator	line:79	language:C++	enum:fa::icon
bank	QtAwesome.h	/^      bank                             = 0xf19c,$/;"	enumerator	line:80	language:C++	enum:fa::icon
barchart	QtAwesome.h	/^      barchart                         = 0xf080,$/;"	enumerator	line:81	language:C++	enum:fa::icon
barcharto	QtAwesome.h	/^      barcharto                        = 0xf080,$/;"	enumerator	line:82	language:C++	enum:fa::icon
barcode	QtAwesome.h	/^      barcode                          = 0xf02a,$/;"	enumerator	line:83	language:C++	enum:fa::icon
bars	QtAwesome.h	/^      bars                             = 0xf0c9,$/;"	enumerator	line:84	language:C++	enum:fa::icon
base_bin_output_dir_path	base_bin.hpp	/^    boost::filesystem::path base_bin_output_dir_path;$/;"	member	line:51	language:C++	class:BaseBin	access:protected
base_bin_output_target_folder	base_bin.hpp	/^    boost::filesystem::path base_bin_output_target_folder;$/;"	member	line:48	language:C++	class:BaseBin	access:protected
base_bin_start_dir_path	base_bin.hpp	/^    boost::filesystem::path base_bin_start_dir_path;$/;"	member	line:45	language:C++	class:BaseBin	access:protected
base_cystal_clean_for_re_run	msa_prm.cpp	/^bool MSA_prm::base_cystal_clean_for_re_run(){$/;"	function	line:246	language:C++	class:MSA_prm
base_cystal_clean_for_re_run	simgrid.cpp	/^bool SimGrid::base_cystal_clean_for_re_run(){$/;"	function	line:271	language:C++	class:SimGrid
base_cystal_clean_for_re_run	wavimg_prm.cpp	/^bool WAVIMG_prm::base_cystal_clean_for_re_run(){$/;"	function	line:385	language:C++	class:WAVIMG_prm
base_dir_path	base_crystal.hpp	/^    boost::filesystem::path base_dir_path;$/;"	member	line:145	language:C++	class:BaseCrystal	access:protected
bath	QtAwesome.h	/^      bath                             = 0xf2cd,$/;"	enumerator	line:85	language:C++	enum:fa::icon
bathtub	QtAwesome.h	/^      bathtub                          = 0xf2cd,$/;"	enumerator	line:86	language:C++	enum:fa::icon
battery	QtAwesome.h	/^      battery                          = 0xf240,$/;"	enumerator	line:87	language:C++	enum:fa::icon
battery0	QtAwesome.h	/^      battery0                         = 0xf244,$/;"	enumerator	line:88	language:C++	enum:fa::icon
battery1	QtAwesome.h	/^      battery1                         = 0xf243,$/;"	enumerator	line:89	language:C++	enum:fa::icon
battery2	QtAwesome.h	/^      battery2                         = 0xf242,$/;"	enumerator	line:90	language:C++	enum:fa::icon
battery3	QtAwesome.h	/^      battery3                         = 0xf241,$/;"	enumerator	line:91	language:C++	enum:fa::icon
battery4	QtAwesome.h	/^      battery4                         = 0xf240,$/;"	enumerator	line:92	language:C++	enum:fa::icon
batteryempty	QtAwesome.h	/^      batteryempty                     = 0xf244,$/;"	enumerator	line:93	language:C++	enum:fa::icon
batteryfull	QtAwesome.h	/^      batteryfull                      = 0xf240,$/;"	enumerator	line:94	language:C++	enum:fa::icon
batteryhalf	QtAwesome.h	/^      batteryhalf                      = 0xf242,$/;"	enumerator	line:95	language:C++	enum:fa::icon
batteryquarter	QtAwesome.h	/^      batteryquarter                   = 0xf243,$/;"	enumerator	line:96	language:C++	enum:fa::icon
batterythreequarters	QtAwesome.h	/^      batterythreequarters             = 0xf241,$/;"	enumerator	line:97	language:C++	enum:fa::icon
bed	QtAwesome.h	/^      bed                              = 0xf236,$/;"	enumerator	line:98	language:C++	enum:fa::icon
beer	QtAwesome.h	/^      beer                             = 0xf0fc,$/;"	enumerator	line:99	language:C++	enum:fa::icon
behance	QtAwesome.h	/^      behance                          = 0xf1b4,$/;"	enumerator	line:100	language:C++	enum:fa::icon
behancesquare	QtAwesome.h	/^      behancesquare                    = 0xf1b5,$/;"	enumerator	line:101	language:C++	enum:fa::icon
bell	QtAwesome.h	/^      bell                             = 0xf0f3,$/;"	enumerator	line:102	language:C++	enum:fa::icon
bello	QtAwesome.h	/^      bello                            = 0xf0a2,$/;"	enumerator	line:103	language:C++	enum:fa::icon
bellslash	QtAwesome.h	/^      bellslash                        = 0xf1f6,$/;"	enumerator	line:104	language:C++	enum:fa::icon
bellslasho	QtAwesome.h	/^      bellslasho                       = 0xf1f7,$/;"	enumerator	line:105	language:C++	enum:fa::icon
best_match_Point2i	simgrid.hpp	/^    cv::Point2i best_match_Point2i;$/;"	member	line:83	language:C++	class:SimGrid	access:private
bicycle	QtAwesome.h	/^      bicycle                          = 0xf206,$/;"	enumerator	line:106	language:C++	enum:fa::icon
binoculars	QtAwesome.h	/^      binoculars                       = 0xf1e5,$/;"	enumerator	line:107	language:C++	enum:fa::icon
birthdaycake	QtAwesome.h	/^      birthdaycake                     = 0xf1fd,$/;"	enumerator	line:108	language:C++	enum:fa::icon
bitbucket	QtAwesome.h	/^      bitbucket                        = 0xf171,$/;"	enumerator	line:109	language:C++	enum:fa::icon
bitbucketsquare	QtAwesome.h	/^      bitbucketsquare                  = 0xf172,$/;"	enumerator	line:110	language:C++	enum:fa::icon
bitcoin	QtAwesome.h	/^      bitcoin                          = 0xf15a,$/;"	enumerator	line:111	language:C++	enum:fa::icon
blacktie	QtAwesome.h	/^      blacktie                         = 0xf27e,$/;"	enumerator	line:112	language:C++	enum:fa::icon
blind	QtAwesome.h	/^      blind                            = 0xf29d,$/;"	enumerator	line:113	language:C++	enum:fa::icon
blue	mc_driver.hpp	/^      const std::string blue  = "\\033[1;36m";$/;"	member	line:55	language:C++	class:MC::MC_Driver	access:private
bluetooth	QtAwesome.h	/^      bluetooth                        = 0xf293,$/;"	enumerator	line:114	language:C++	enum:fa::icon
bluetoothb	QtAwesome.h	/^      bluetoothb                       = 0xf294,$/;"	enumerator	line:115	language:C++	enum:fa::icon
boilingPoint	atom_info.cpp	/^double Atom_Info::boilingPoint()  {$/;"	function	line:66	language:C++	class:Atom_Info
bold	QtAwesome.h	/^      bold                             = 0xf032,$/;"	enumerator	line:116	language:C++	enum:fa::icon
bolt	QtAwesome.h	/^      bolt                             = 0xf0e7,$/;"	enumerator	line:117	language:C++	enum:fa::icon
bomb	QtAwesome.h	/^      bomb                             = 0xf1e2,$/;"	enumerator	line:118	language:C++	enum:fa::icon
book	QtAwesome.h	/^      book                             = 0xf02d,$/;"	enumerator	line:119	language:C++	enum:fa::icon
bookmark	QtAwesome.h	/^      bookmark                         = 0xf02e,$/;"	enumerator	line:120	language:C++	enum:fa::icon
bookmarko	QtAwesome.h	/^      bookmarko                        = 0xf097,$/;"	enumerator	line:121	language:C++	enum:fa::icon
braille	QtAwesome.h	/^      braille                          = 0xf2a1,$/;"	enumerator	line:122	language:C++	enum:fa::icon
briefcase	QtAwesome.h	/^      briefcase                        = 0xf0b1,$/;"	enumerator	line:123	language:C++	enum:fa::icon
btc	QtAwesome.h	/^      btc                              = 0xf15a,$/;"	enumerator	line:124	language:C++	enum:fa::icon
bug	QtAwesome.h	/^      bug                              = 0xf188,$/;"	enumerator	line:125	language:C++	enum:fa::icon
building	QtAwesome.h	/^      building                         = 0xf1ad,$/;"	enumerator	line:126	language:C++	enum:fa::icon
buildingo	QtAwesome.h	/^      buildingo                        = 0xf0f7,$/;"	enumerator	line:127	language:C++	enum:fa::icon
bullhorn	QtAwesome.h	/^      bullhorn                         = 0xf0a1,$/;"	enumerator	line:128	language:C++	enum:fa::icon
bullseye	QtAwesome.h	/^      bullseye                         = 0xf140,$/;"	enumerator	line:129	language:C++	enum:fa::icon
bus	QtAwesome.h	/^      bus                              = 0xf207,$/;"	enumerator	line:130	language:C++	enum:fa::icon
buysellads	QtAwesome.h	/^      buysellads                       = 0xf20d,$/;"	enumerator	line:131	language:C++	enum:fa::icon
cab	QtAwesome.h	/^      cab                              = 0xf1ba,$/;"	enumerator	line:132	language:C++	enum:fa::icon
calculate_a_size_from_n_rows_and_sampling_rate	base_image.cpp	/^bool BaseImage::calculate_a_size_from_n_rows_and_sampling_rate(){$/;"	function	line:46	language:C++	class:BaseImage
calculate_b_size_from_n_cols_and_sampling_rate	base_image.cpp	/^bool BaseImage::calculate_b_size_from_n_cols_and_sampling_rate(){$/;"	function	line:82	language:C++	class:BaseImage
calculate_boundaries_from_full_image	image_bounds.cpp	/^bool ImageBounds::calculate_boundaries_from_full_image(){$/;"	function	line:7	language:C++	class:ImageBounds
calculate_defocus_period	base_crystal.cpp	/^bool BaseCrystal::calculate_defocus_period(){$/;"	function	line:6	language:C++	class:BaseCrystal
calculate_exp_image_boundaries_from_full_image	td_map.cpp	/^bool TDMap::calculate_exp_image_boundaries_from_full_image(){$/;"	function	line:1654	language:C++	class:TDMap
calculate_n_cols_from_b_size_and_sampling_rate	base_image.cpp	/^bool BaseImage::calculate_n_cols_from_b_size_and_sampling_rate(){$/;"	function	line:63	language:C++	class:BaseImage
calculate_n_rows_from_a_size_and_sampling_rate	base_image.cpp	/^bool BaseImage::calculate_n_rows_from_a_size_and_sampling_rate(){$/;"	function	line:28	language:C++	class:BaseImage
calculate_thickness_slice_period	base_crystal.cpp	/^bool BaseCrystal::calculate_thickness_slice_period(){$/;"	function	line:31	language:C++	class:BaseCrystal
calculatedRadius	atom_info.cpp	/^double Atom_Info::calculatedRadius()  {$/;"	function	line:86	language:C++	class:Atom_Info
calculator	QtAwesome.h	/^      calculator                       = 0xf1ec,$/;"	enumerator	line:133	language:C++	enum:fa::icon
calendar	QtAwesome.h	/^      calendar                         = 0xf073,$/;"	enumerator	line:134	language:C++	enum:fa::icon
calendarchecko	QtAwesome.h	/^      calendarchecko                   = 0xf274,$/;"	enumerator	line:135	language:C++	enum:fa::icon
calendarminuso	QtAwesome.h	/^      calendarminuso                   = 0xf272,$/;"	enumerator	line:136	language:C++	enum:fa::icon
calendaro	QtAwesome.h	/^      calendaro                        = 0xf133,$/;"	enumerator	line:137	language:C++	enum:fa::icon
calendarpluso	QtAwesome.h	/^      calendarpluso                    = 0xf271,$/;"	enumerator	line:138	language:C++	enum:fa::icon
calendartimeso	QtAwesome.h	/^      calendartimeso                   = 0xf273,$/;"	enumerator	line:139	language:C++	enum:fa::icon
call_bin	msa_prm.cpp	/^bool MSA_prm::call_bin(){$/;"	function	line:85	language:C++	class:MSA_prm
call_bin	wavimg_prm.cpp	/^bool WAVIMG_prm::call_bin(){$/;"	function	line:236	language:C++	class:WAVIMG_prm
call_bin_ssc	celslc_prm.cpp	/^bool CELSLC_prm::call_bin_ssc(){$/;"	function	line:352	language:C++	class:CELSLC_prm
call_boost_bin	celslc_prm.cpp	/^bool CELSLC_prm::call_boost_bin( ){$/;"	function	line:188	language:C++	class:CELSLC_prm
call_fp_data_getter_bool	treeitem.cpp	/^bool TreeItem::call_fp_data_getter_bool( ){$/;"	function	line:220	language:C++	class:TreeItem
call_fp_data_setter_bool	treeitem.cpp	/^bool TreeItem::call_fp_data_setter_bool( bool value ){$/;"	function	line:229	language:C++	class:TreeItem
camera	QtAwesome.h	/^      camera                           = 0xf030,$/;"	enumerator	line:140	language:C++	enum:fa::icon
cameraretro	QtAwesome.h	/^      cameraretro                      = 0xf083,$/;"	enumerator	line:141	language:C++	enum:fa::icon
car	QtAwesome.h	/^      car                              = 0xf1b9,$/;"	enumerator	line:142	language:C++	enum:fa::icon
caretdown	QtAwesome.h	/^      caretdown                        = 0xf0d7,$/;"	enumerator	line:143	language:C++	enum:fa::icon
caretleft	QtAwesome.h	/^      caretleft                        = 0xf0d9,$/;"	enumerator	line:144	language:C++	enum:fa::icon
caretright	QtAwesome.h	/^      caretright                       = 0xf0da,$/;"	enumerator	line:145	language:C++	enum:fa::icon
caretsquareodown	QtAwesome.h	/^      caretsquareodown                 = 0xf150,$/;"	enumerator	line:146	language:C++	enum:fa::icon
caretsquareoleft	QtAwesome.h	/^      caretsquareoleft                 = 0xf191,$/;"	enumerator	line:147	language:C++	enum:fa::icon
caretsquareoright	QtAwesome.h	/^      caretsquareoright                = 0xf152,$/;"	enumerator	line:148	language:C++	enum:fa::icon
caretsquareoup	QtAwesome.h	/^      caretsquareoup                   = 0xf151,$/;"	enumerator	line:149	language:C++	enum:fa::icon
caretup	QtAwesome.h	/^      caretup                          = 0xf0d8,$/;"	enumerator	line:150	language:C++	enum:fa::icon
cartarrowdown	QtAwesome.h	/^      cartarrowdown                    = 0xf218,$/;"	enumerator	line:151	language:C++	enum:fa::icon
cartplus	QtAwesome.h	/^      cartplus                         = 0xf217,$/;"	enumerator	line:152	language:C++	enum:fa::icon
cc	QtAwesome.h	/^      cc                               = 0xf20a,$/;"	enumerator	line:153	language:C++	enum:fa::icon
ccamex	QtAwesome.h	/^      ccamex                           = 0xf1f3,$/;"	enumerator	line:154	language:C++	enum:fa::icon
ccdinersclub	QtAwesome.h	/^      ccdinersclub                     = 0xf24c,$/;"	enumerator	line:155	language:C++	enum:fa::icon
ccdiscover	QtAwesome.h	/^      ccdiscover                       = 0xf1f2,$/;"	enumerator	line:156	language:C++	enum:fa::icon
ccjcb	QtAwesome.h	/^      ccjcb                            = 0xf24b,$/;"	enumerator	line:157	language:C++	enum:fa::icon
ccmastercard	QtAwesome.h	/^      ccmastercard                     = 0xf1f1,$/;"	enumerator	line:158	language:C++	enum:fa::icon
ccpaypal	QtAwesome.h	/^      ccpaypal                         = 0xf1f4,$/;"	enumerator	line:159	language:C++	enum:fa::icon
ccstripe	QtAwesome.h	/^      ccstripe                         = 0xf1f5,$/;"	enumerator	line:160	language:C++	enum:fa::icon
ccvisa	QtAwesome.h	/^      ccvisa                           = 0xf1f0,$/;"	enumerator	line:161	language:C++	enum:fa::icon
cel_format_switch	celslc_prm.hpp	/^    bool cel_format_switch = false;$/;"	member	line:54	language:C++	class:CELSLC_prm	access:private
cel_margin_a_px	base_cell.hpp	/^    int cel_margin_a_px = 0.0f;$/;"	member	line:111	language:C++	class:BaseCell	access:protected
cel_margin_b_px	base_cell.hpp	/^    int cel_margin_b_px = 0.0f;$/;"	member	line:112	language:C++	class:BaseCell	access:protected
cel_margin_nm	base_cell.hpp	/^    double cel_margin_nm = 0.0f;$/;"	member	line:109	language:C++	class:BaseCell	access:protected
cel_nx_px	base_cell.hpp	/^    int cel_nx_px;$/;"	member	line:114	language:C++	class:BaseCell	access:protected
cel_ny_px	base_cell.hpp	/^    int cel_ny_px;$/;"	member	line:115	language:C++	class:BaseCell	access:protected
cel_path	base_cell.hpp	/^    std::string cel_path;$/;"	member	line:63	language:C++	class:BaseCell	access:protected
cel_wout_margin_nx_px	base_cell.hpp	/^    int cel_wout_margin_nx_px;$/;"	member	line:118	language:C++	class:BaseCell	access:protected
cel_wout_margin_ny_px	base_cell.hpp	/^    int cel_wout_margin_ny_px;$/;"	member	line:119	language:C++	class:BaseCell	access:protected
cell	gui_tdmap_table.cpp	/^TDMap_Cell* TDMap_Table::cell(int row, int column) const$/;"	function	line:239	language:C++	class:TDMap_Table
cell_volume	base_cell.hpp	/^    double cell_volume;$/;"	member	line:74	language:C++	class:BaseCell	access:protected
celslc_step_group_options	configwin.h	/^    group_options* celslc_step_group_options;$/;"	member	line:268	language:C++	class:MainWindow	access:private
celslc_step_group_options	td_map.hpp	/^    group_options* celslc_step_group_options;$/;"	member	line:91	language:C++	class:TDMap	access:private
center_x_of_objective_aperture	wavimg_prm.hpp	/^    double center_x_of_objective_aperture = 0.0f;$/;"	member	line:82	language:C++	class:WAVIMG_prm	access:private
center_y_of_objective_aperture	wavimg_prm.hpp	/^    double center_y_of_objective_aperture = 0.0f;$/;"	member	line:83	language:C++	class:WAVIMG_prm	access:private
certificate	QtAwesome.h	/^      certificate                      = 0xf0a3,$/;"	enumerator	line:162	language:C++	enum:fa::icon
chain	QtAwesome.h	/^      chain                            = 0xf0c1,$/;"	enumerator	line:163	language:C++	enum:fa::icon
chainbroken	QtAwesome.h	/^      chainbroken                      = 0xf127,$/;"	enumerator	line:164	language:C++	enum:fa::icon
check	QtAwesome.h	/^      check                            = 0xf00c,$/;"	enumerator	line:165	language:C++	enum:fa::icon
checkSettings	configwin.cpp	/^bool MainWindow::checkSettings(){$/;"	function	line:782	language:C++	class:MainWindow
check_clean_run_env	wavimg_prm.cpp	/^bool WAVIMG_prm::check_clean_run_env(){$/;"	function	line:135	language:C++	class:WAVIMG_prm
check_produced_dat	simgrid.cpp	/^bool SimGrid::check_produced_dat(){$/;"	function	line:276	language:C++	class:SimGrid
check_produced_dat	wavimg_prm.cpp	/^bool WAVIMG_prm::check_produced_dat(){$/;"	function	line:341	language:C++	class:WAVIMG_prm
check_produced_slices	celslc_prm.cpp	/^bool CELSLC_prm::check_produced_slices(){$/;"	function	line:64	language:C++	class:CELSLC_prm
check_produced_waves	msa_prm.cpp	/^bool MSA_prm::check_produced_waves(){$/;"	function	line:200	language:C++	class:MSA_prm
checkboxOption	treeitem_file_delegate.cpp	/^QStyleOptionButton TreeItemFileDelegate::checkboxOption( const QStyleOptionViewItem& option,  const QModelIndex& index, int position, Qt::AlignmentFlag alignment ) const {$/;"	function	line:538	language:C++	class:TreeItemFileDelegate
checkcircle	QtAwesome.h	/^      checkcircle                      = 0xf058,$/;"	enumerator	line:166	language:C++	enum:fa::icon
checkcircleo	QtAwesome.h	/^      checkcircleo                     = 0xf05d,$/;"	enumerator	line:167	language:C++	enum:fa::icon
checksquare	QtAwesome.h	/^      checksquare                      = 0xf14a,$/;"	enumerator	line:168	language:C++	enum:fa::icon
checksquareo	QtAwesome.h	/^      checksquareo                     = 0xf046,$/;"	enumerator	line:169	language:C++	enum:fa::icon
chem_database	base_cell.hpp	/^    Chem_Database chem_database;$/;"	member	line:188	language:C++	class:BaseCell	access:protected
chevroncircledown	QtAwesome.h	/^      chevroncircledown                = 0xf13a,$/;"	enumerator	line:170	language:C++	enum:fa::icon
chevroncircleleft	QtAwesome.h	/^      chevroncircleleft                = 0xf137,$/;"	enumerator	line:171	language:C++	enum:fa::icon
chevroncircleright	QtAwesome.h	/^      chevroncircleright               = 0xf138,$/;"	enumerator	line:172	language:C++	enum:fa::icon
chevroncircleup	QtAwesome.h	/^      chevroncircleup                  = 0xf139,$/;"	enumerator	line:173	language:C++	enum:fa::icon
chevrondown	QtAwesome.h	/^      chevrondown                      = 0xf078,$/;"	enumerator	line:174	language:C++	enum:fa::icon
chevronleft	QtAwesome.h	/^      chevronleft                      = 0xf053,$/;"	enumerator	line:175	language:C++	enum:fa::icon
chevronright	QtAwesome.h	/^      chevronright                     = 0xf054,$/;"	enumerator	line:176	language:C++	enum:fa::icon
chevronup	QtAwesome.h	/^      chevronup                        = 0xf077,$/;"	enumerator	line:177	language:C++	enum:fa::icon
child	QtAwesome.h	/^      child                            = 0xf1ae,$/;"	enumerator	line:178	language:C++	enum:fa::icon
child	treeitem.cpp	/^TreeItem *TreeItem::child(int number) {$/;"	function	line:360	language:C++	class:TreeItem
childCount	treeitem.cpp	/^int TreeItem::childCount() const$/;"	function	line:364	language:C++	class:TreeItem
childItems	treeitem.h	/^    QList<TreeItem*> childItems;$/;"	member	line:151	language:C++	class:TreeItem	access:private
childNumber	treeitem.cpp	/^int TreeItem::childNumber() const {$/;"	function	line:369	language:C++	class:TreeItem
chrome	QtAwesome.h	/^      chrome                           = 0xf268,$/;"	enumerator	line:179	language:C++	enum:fa::icon
chunk_dims_out	emd_dataset.h	/^    hsize_t chunk_dims_out[3];$/;"	member	line:43	language:C++	class:EMDDataSet	access:protected
cif_driver	base_cell.hpp	/^    MC::MC_Driver cif_driver;$/;"	member	line:65	language:C++	class:BaseCell	access:protected
cif_path	base_cell.hpp	/^    std::string cif_path;$/;"	member	line:59	language:C++	class:BaseCell	access:protected
circle	QtAwesome.h	/^      circle                           = 0xf111,$/;"	enumerator	line:180	language:C++	enum:fa::icon
circleo	QtAwesome.h	/^      circleo                          = 0xf10c,$/;"	enumerator	line:181	language:C++	enum:fa::icon
circleonotch	QtAwesome.h	/^      circleonotch                     = 0xf1ce,$/;"	enumerator	line:182	language:C++	enum:fa::icon
circlethin	QtAwesome.h	/^      circlethin                       = 0xf1db,$/;"	enumerator	line:183	language:C++	enum:fa::icon
cleanRenderAreas	cv_image_frame.cpp	/^void CvImageFrameWidget::cleanRenderAreas(){$/;"	function	line:26	language:C++	class:CvImageFrameWidget
cleanRenderAreas	cv_image_widget.cpp	/^void CVImageWidget::cleanRenderAreas(){$/;"	function	line:159	language:C++	class:CVImageWidget
clean_best	cv_tdmap_cell_image_frame_delegate.cpp	/^void CvTDMapImageFrameDelegate::clean_best( ){$/;"	function	line:41	language:C++	class:CvTDMapImageFrameDelegate
clean_for_re_run	base_crystal.cpp	/^bool BaseCrystal::clean_for_re_run(){$/;"	function	line:69	language:C++	class:BaseCrystal
clean_for_re_run	celslc_prm.cpp	/^bool CELSLC_prm::clean_for_re_run(){$/;"	function	line:114	language:C++	class:CELSLC_prm
clean_for_re_run	msa_prm.cpp	/^bool MSA_prm::clean_for_re_run(){$/;"	function	line:242	language:C++	class:MSA_prm
clean_for_re_run	simgrid.cpp	/^bool SimGrid::clean_for_re_run(){$/;"	function	line:573	language:C++	class:SimGrid
clean_for_re_run	wavimg_prm.cpp	/^bool WAVIMG_prm::clean_for_re_run(){$/;"	function	line:371	language:C++	class:WAVIMG_prm
clean_highlight_status	treeitem.cpp	/^void TreeItem::clean_highlight_status( int column ){$/;"	function	line:85	language:C++	class:TreeItem
cleanup_bin	celslc_prm.cpp	/^bool CELSLC_prm::cleanup_bin( ){$/;"	function	line:108	language:C++	class:CELSLC_prm
cleanup_bin	msa_prm.cpp	/^bool MSA_prm::cleanup_bin(){$/;"	function	line:77	language:C++	class:MSA_prm
cleanup_dat	wavimg_prm.cpp	/^bool WAVIMG_prm::cleanup_dat(){$/;"	function	line:189	language:C++	class:WAVIMG_prm
cleanup_prm	wavimg_prm.cpp	/^bool WAVIMG_prm::cleanup_prm(){$/;"	function	line:171	language:C++	class:WAVIMG_prm
cleanup_thread	celslc_prm.cpp	/^void CELSLC_prm::cleanup_thread(){$/;"	function	line:18	language:C++	class:CELSLC_prm
cleanup_thread	msa_prm.cpp	/^void MSA_prm::cleanup_thread(){$/;"	function	line:36	language:C++	class:MSA_prm
clear	gui_tdmap_table.cpp	/^void TDMap_Table::clear(){$/;"	function	line:157	language:C++	class:TDMap_Table
clearData	treeitem.cpp	/^bool TreeItem::clearData( int column ){$/;"	function	line:556	language:C++	class:TreeItem
clearData	treemodel.cpp	/^bool TreeModel::clearData(const QModelIndex &index){$/;"	function	line:185	language:C++	class:TreeModel
clear_tdmap_sim_ostream_containers	configwin.cpp	/^void MainWindow::clear_tdmap_sim_ostream_containers(){$/;"	function	line:496	language:C++	class:MainWindow
clipboard	QtAwesome.h	/^      clipboard                        = 0xf0ea,$/;"	enumerator	line:184	language:C++	enum:fa::icon
clocko	QtAwesome.h	/^      clocko                           = 0xf017,$/;"	enumerator	line:185	language:C++	enum:fa::icon
clone	QtAwesome.cpp	/^    QtAwesomeIconPainterIconEngine* clone() const$/;"	function	line:92	language:C++	class:QtAwesomeIconPainterIconEngine	access:public
clone	QtAwesome.h	/^      clone                            = 0xf24d,$/;"	enumerator	line:186	language:C++	enum:fa::icon
clone	gui_tdmap_cell.cpp	/^QTableWidgetItem *TDMap_Cell::clone() const {$/;"	function	line:6	language:C++	class:TDMap_Cell
close	QtAwesome.h	/^      close                            = 0xf00d,$/;"	enumerator	line:187	language:C++	enum:fa::icon
closeEvent	configwin.cpp	/^void MainWindow::closeEvent(QCloseEvent *event){$/;"	function	line:591	language:C++	class:MainWindow
cloud	QtAwesome.h	/^      cloud                            = 0xf0c2,$/;"	enumerator	line:188	language:C++	enum:fa::icon
clouddownload	QtAwesome.h	/^      clouddownload                    = 0xf0ed,$/;"	enumerator	line:189	language:C++	enum:fa::icon
cloudupload	QtAwesome.h	/^      cloudupload                      = 0xf0ee,$/;"	enumerator	line:190	language:C++	enum:fa::icon
cny	QtAwesome.h	/^      cny                              = 0xf157,$/;"	enumerator	line:191	language:C++	enum:fa::icon
code	QtAwesome.h	/^      code                             = 0xf121,$/;"	enumerator	line:192	language:C++	enum:fa::icon
codefork	QtAwesome.h	/^      codefork                         = 0xf126,$/;"	enumerator	line:193	language:C++	enum:fa::icon
codepen	QtAwesome.h	/^      codepen                          = 0xf1cb,$/;"	enumerator	line:194	language:C++	enum:fa::icon
codiepie	QtAwesome.h	/^      codiepie                         = 0xf284,$/;"	enumerator	line:195	language:C++	enum:fa::icon
coffee	QtAwesome.h	/^      coffee                           = 0xf0f4,$/;"	enumerator	line:196	language:C++	enum:fa::icon
cog	QtAwesome.h	/^      cog                              = 0xf013,$/;"	enumerator	line:197	language:C++	enum:fa::icon
cogs	QtAwesome.h	/^      cogs                             = 0xf085,$/;"	enumerator	line:198	language:C++	enum:fa::icon
columnCount	treeitem.cpp	/^int TreeItem::columnCount() const$/;"	function	line:377	language:C++	class:TreeItem
columnCount	treemodel.cpp	/^int TreeModel::columnCount(const QModelIndex & \/* parent *\/) const{$/;"	function	line:37	language:C++	class:TreeModel
columns	QtAwesome.h	/^      columns                          = 0xf0db,$/;"	enumerator	line:199	language:C++	enum:fa::icon
comment	QtAwesome.h	/^      comment                          = 0xf075,$/;"	enumerator	line:200	language:C++	enum:fa::icon
commenting	QtAwesome.h	/^      commenting                       = 0xf27a,$/;"	enumerator	line:202	language:C++	enum:fa::icon
commentingo	QtAwesome.h	/^      commentingo                      = 0xf27b,$/;"	enumerator	line:203	language:C++	enum:fa::icon
commento	QtAwesome.h	/^      commento                         = 0xf0e5,$/;"	enumerator	line:201	language:C++	enum:fa::icon
comments	QtAwesome.h	/^      comments                         = 0xf086,$/;"	enumerator	line:204	language:C++	enum:fa::icon
commentso	QtAwesome.h	/^      commentso                        = 0xf0e6,$/;"	enumerator	line:205	language:C++	enum:fa::icon
commit_and_call	treeitem_file_delegate.cpp	/^void TreeItemFileDelegate::commit_and_call( QWidget * editor, boost::function<bool()> _action  ) {$/;"	function	line:514	language:C++	class:TreeItemFileDelegate
compass	QtAwesome.h	/^      compass                          = 0xf14e,$/;"	enumerator	line:206	language:C++	enum:fa::icon
compress	QtAwesome.h	/^      compress                         = 0xf066,$/;"	enumerator	line:207	language:C++	enum:fa::icon
connect_defocus_range_number_samples_changes	gui_tdmap_table.cpp	/^void TDMap_Table::connect_defocus_range_number_samples_changes( const TreeItem* item, int item_changes_column ){$/;"	function	line:67	language:C++	class:TDMap_Table
connect_item_changes_to_invalidate_grid	gui_tdmap_table.cpp	/^void TDMap_Table::connect_item_changes_to_invalidate_grid( const TreeItem* item, int item_changes_column ){$/;"	function	line:42	language:C++	class:TDMap_Table
connect_thickness_range_number_samples_changes	gui_tdmap_table.cpp	/^void TDMap_Table::connect_thickness_range_number_samples_changes( const TreeItem* item, int item_changes_column ){$/;"	function	line:62	language:C++	class:TDMap_Table
connectdevelop	QtAwesome.h	/^      connectdevelop                   = 0xf20e,$/;"	enumerator	line:208	language:C++	enum:fa::icon
contao	QtAwesome.h	/^      contao                           = 0xf26d,$/;"	enumerator	line:209	language:C++	enum:fa::icon
contentsLayout	cv_image_cell_widget.h	/^    QHBoxLayout *contentsLayout;$/;"	member	line:77	language:C++	class:CvImageCellWidget	access:protected
contentsLayout	cv_image_edge_frame.h	/^    QVBoxLayout *contentsLayout;$/;"	member	line:75	language:C++	class:CvImageEdgeFrame	access:protected
contentsLayout	cv_image_frame.h	/^    QVBoxLayout *contentsLayout;$/;"	member	line:37	language:C++	class:CvImageFrameWidget	access:protected
contentsLayout	cv_tdmap_cell_image_frame.h	/^    QHBoxLayout *contentsLayout;$/;"	member	line:31	language:C++	class:CvTDMapImageFrame	access:protected
conversion_rate	wavimg_prm.hpp	/^    double conversion_rate = 0.0f;$/;"	member	line:38	language:C++	class:WAVIMG_prm	access:private
convert_to_double	string_additions.cpp	/^double convert_to_double(string const& str){$/;"	function	line:59	language:C++
convert_to_int	string_additions.cpp	/^int convert_to_int(string const& str){$/;"	function	line:70	language:C++
copy	QtAwesome.h	/^      copy                             = 0xf0c5,$/;"	enumerator	line:210	language:C++	enum:fa::icon
copyright	QtAwesome.h	/^      copyright                        = 0xf1f9,$/;"	enumerator	line:211	language:C++	enum:fa::icon
core_tdmap	gui_tdmap_table.h	/^    TDMap* core_tdmap = nullptr;$/;"	member	line:78	language:C++	class:TDMap_Table	access:private
covalentRadius	atom_info.cpp	/^double Atom_Info::covalentRadius()  {$/;"	function	line:101	language:C++	class:Atom_Info
cpkColor	atom_info.cpp	/^cv::Vec4d Atom_Info::cpkColor() {$/;"	function	line:111	language:C++	class:Atom_Info
createActions	configwin.cpp	/^void MainWindow::createActions(){$/;"	function	line:707	language:C++	class:MainWindow
createEditor	cv_image_delegate.cpp	/^QWidget* CvImageDelegate::createEditor(QWidget *parent,$/;"	function	line:11	language:C++	class:CvImageDelegate
createEditor	treeitem_file_delegate.cpp	/^QWidget *TreeItemFileDelegate::createEditor( QWidget *parent, const QStyleOptionViewItem &option, const QModelIndex &index ) const {$/;"	function	line:92	language:C++	class:TreeItemFileDelegate
createProgressBar	configwin.cpp	/^void MainWindow::createProgressBar(){$/;"	function	line:761	language:C++	class:MainWindow
create_atoms_from_site_and_symetry	base_cell.cpp	/^bool BaseCell::create_atoms_from_site_and_symetry(){$/;"	function	line:294	language:C++	class:BaseCell
create_bin_args	celslc_prm.cpp	/^std::ostream& CELSLC_prm::create_bin_args(std::ostream& args_stream) const {$/;"	function	line:124	language:C++	class:CELSLC_prm
create_box_options	configwin.cpp	/^void MainWindow::create_box_options(){$/;"	function	line:1064	language:C++	class:MainWindow
create_cells	gui_tdmap_table.cpp	/^void TDMap_Table::create_cells(){$/;"	function	line:170	language:C++	class:TDMap_Table
create_target_folder	base_bin.cpp	/^bool BaseBin::create_target_folder(){$/;"	function	line:34	language:C++	class:BaseBin
creativecommons	QtAwesome.h	/^      creativecommons                  = 0xf25e,$/;"	enumerator	line:212	language:C++	enum:fa::icon
creditcard	QtAwesome.h	/^      creditcard                       = 0xf09d,$/;"	enumerator	line:213	language:C++	enum:fa::icon
creditcardalt	QtAwesome.h	/^      creditcardalt                    = 0xf283,$/;"	enumerator	line:214	language:C++	enum:fa::icon
critical	application_log.hpp	/^    critical$/;"	enumerator	line:32	language:C++	enum:ApplicationLog::severity_level
crop	QtAwesome.h	/^      crop                             = 0xf125,$/;"	enumerator	line:215	language:C++	enum:fa::icon
crosshairs	QtAwesome.h	/^      crosshairs                       = 0xf05b,$/;"	enumerator	line:216	language:C++	enum:fa::icon
crystallography_root	configwin.h	/^  TreeItem* crystallography_root = nullptr;$/;"	member	line:225	language:C++	class:MainWindow	access:private
css3	QtAwesome.h	/^      css3                             = 0xf13c,$/;"	enumerator	line:217	language:C++	enum:fa::icon
cube	QtAwesome.h	/^      cube                             = 0xf1b2,$/;"	enumerator	line:218	language:C++	enum:fa::icon
cubes	QtAwesome.h	/^      cubes                            = 0xf1b3,$/;"	enumerator	line:219	language:C++	enum:fa::icon
curFile	configwin.h	/^    QString curFile;$/;"	member	line:152	language:C++	class:MainWindow	access:private
currentLocation	gui_tdmap_table.cpp	/^QString TDMap_Table::currentLocation() const$/;"	function	line:250	language:C++	class:TDMap_Table
cut	QtAwesome.h	/^      cut                              = 0xf0c4,$/;"	enumerator	line:220	language:C++	enum:fa::icon
cutlery	QtAwesome.h	/^      cutlery                          = 0xf0f5,$/;"	enumerator	line:221	language:C++	enum:fa::icon
dashboard	QtAwesome.h	/^      dashboard                        = 0xf0e4,$/;"	enumerator	line:222	language:C++	enum:fa::icon
dashcube	QtAwesome.h	/^      dashcube                         = 0xf210,$/;"	enumerator	line:223	language:C++	enum:fa::icon
dat_cleanup_bin	wavimg_prm.cpp	/^bool WAVIMG_prm::dat_cleanup_bin(){$/;"	function	line:229	language:C++	class:WAVIMG_prm
dat_output_target_folder	base_crystal.hpp	/^    std::string dat_output_target_folder;$/;"	member	line:101	language:C++	class:BaseCrystal	access:protected
data	gui_tdmap_cell.cpp	/^QVariant TDMap_Cell::data(int role) const {$/;"	function	line:14	language:C++	class:TDMap_Cell
data	treeitem.cpp	/^QVariant TreeItem::data(int column, int role ) const{$/;"	function	line:382	language:C++	class:TreeItem
data	treemodel.cpp	/^QVariant TreeModel::data(const QModelIndex &index, int role) const{$/;"	function	line:41	language:C++	class:TreeModel
database	QtAwesome.h	/^      database                         = 0xf1c0,$/;"	enumerator	line:224	language:C++	enum:fa::icon
deaf	QtAwesome.h	/^      deaf                             = 0xf2a4,$/;"	enumerator	line:225	language:C++	enum:fa::icon
deafness	QtAwesome.h	/^      deafness                         = 0xf2a4,$/;"	enumerator	line:226	language:C++	enum:fa::icon
dedent	QtAwesome.h	/^      dedent                           = 0xf03b,$/;"	enumerator	line:227	language:C++	enum:fa::icon
defaultOption	QtAwesome.cpp	/^QVariant QtAwesome::defaultOption(const QString& name)$/;"	function	line:1018	language:C++	class:QtAwesome
defaultOptions_	QtAwesome.h	/^    QVariantMap defaultOptions_;                           \/\/\/< The default icon options$/;"	member	line:857	language:C++	class:QtAwesome	access:private
defocus_lower_bound	base_crystal.hpp	/^    double defocus_lower_bound = 0.0f;$/;"	member	line:127	language:C++	class:BaseCrystal	access:protected
defocus_period	base_crystal.hpp	/^    double defocus_period = 0.0f;$/;"	member	line:131	language:C++	class:BaseCrystal	access:protected
defocus_range	configwin.h	/^  TreeItem* defocus_range = nullptr;$/;"	member	line:247	language:C++	class:MainWindow	access:private
defocus_range_lower_bound	configwin.h	/^  TreeItem* defocus_range_lower_bound = nullptr;$/;"	member	line:248	language:C++	class:MainWindow	access:private
defocus_range_number_samples	configwin.h	/^  TreeItem* defocus_range_number_samples = nullptr;$/;"	member	line:246	language:C++	class:MainWindow	access:private
defocus_range_upper_bound	configwin.h	/^  TreeItem* defocus_range_upper_bound = nullptr;$/;"	member	line:249	language:C++	class:MainWindow	access:private
defocus_samples	base_crystal.hpp	/^    int defocus_samples = 0;$/;"	member	line:125	language:C++	class:BaseCrystal	access:protected
defocus_upper_bound	base_crystal.hpp	/^    double defocus_upper_bound = 0.0f;$/;"	member	line:129	language:C++	class:BaseCrystal	access:protected
delicious	QtAwesome.h	/^      delicious                        = 0xf1a5,$/;"	enumerator	line:228	language:C++	enum:fa::icon
desktop	QtAwesome.h	/^      desktop                          = 0xf108,$/;"	enumerator	line:229	language:C++	enum:fa::icon
deviantart	QtAwesome.h	/^      deviantart                       = 0xf1bd,$/;"	enumerator	line:230	language:C++	enum:fa::icon
diamond	QtAwesome.h	/^      diamond                          = 0xf219,$/;"	enumerator	line:231	language:C++	enum:fa::icon
digg	QtAwesome.h	/^      digg                             = 0xf1a6,$/;"	enumerator	line:232	language:C++	enum:fa::icon
disable_highlight_error	treeitem.cpp	/^bool TreeItem::disable_highlight_error( int column ){$/;"	function	line:26	language:C++	class:TreeItem
do_attr	emd_attribute.cpp	/^void EMDAttribute::do_attr(hid_t aid ){$/;"	function	line:10	language:C++	class:EMDAttribute
do_dset	emd_dataset.cpp	/^void EMDDataSet::do_dset(hid_t did){$/;"	function	line:43	language:C++	class:EMDDataSet
do_dtype	emd_object.cpp	/^void EMDObject::do_dtype(hid_t tid ){$/;"	function	line:6	language:C++	class:EMDObject
do_link	emd_object.cpp	/^void EMDObject::do_link(hid_t gid, char *name){$/;"	function	line:41	language:C++	class:EMDObject
do_plist	emd_dataset.cpp	/^void EMDDataSet::do_plist(hid_t pid) {$/;"	function	line:114	language:C++	class:EMDDataSet
documentWasModified	configwin.cpp	/^void MainWindow::documentWasModified(){$/;"	function	line:703	language:C++	class:MainWindow
dollar	QtAwesome.h	/^      dollar                           = 0xf155,$/;"	enumerator	line:233	language:C++	enum:fa::icon
dotcircleo	QtAwesome.h	/^      dotcircleo                       = 0xf192,$/;"	enumerator	line:234	language:C++	enum:fa::icon
doubleToString	string_additions.cpp	/^string doubleToString(float const& dbl){$/;"	function	line:81	language:C++
download	QtAwesome.h	/^      download                         = 0xf019,$/;"	enumerator	line:235	language:C++	enum:fa::icon
dribbble	QtAwesome.h	/^      dribbble                         = 0xf17d,$/;"	enumerator	line:236	language:C++	enum:fa::icon
driverslicense	QtAwesome.h	/^      driverslicense                   = 0xf2c2,$/;"	enumerator	line:237	language:C++	enum:fa::icon
driverslicenseo	QtAwesome.h	/^      driverslicenseo                  = 0xf2c3,$/;"	enumerator	line:238	language:C++	enum:fa::icon
dropbox	QtAwesome.h	/^      dropbox                          = 0xf16b,$/;"	enumerator	line:239	language:C++	enum:fa::icon
dropdown_column	treeitem.h	/^    int dropdown_column;$/;"	member	line:192	language:C++	class:TreeItem	access:private
dropdown_data	treeitem.h	/^    QVector<QVariant> dropdown_data;$/;"	member	line:190	language:C++	class:TreeItem	access:private
dropdown_enum	treeitem.h	/^    QVector<QVariant> dropdown_enum;$/;"	member	line:191	language:C++	class:TreeItem	access:private
drupal	QtAwesome.h	/^      drupal                           = 0xf1a9,$/;"	enumerator	line:240	language:C++	enum:fa::icon
dsid	emd_object.h	/^    hid_t dsid;$/;"	member	line:40	language:C++	class:EMDObject	access:protected
dwf_switch	celslc_prm.hpp	/^    bool dwf_switch = false;$/;"	member	line:51	language:C++	class:CELSLC_prm	access:private
edge	QtAwesome.h	/^      edge                             = 0xf282,$/;"	enumerator	line:241	language:C++	enum:fa::icon
edit	QtAwesome.h	/^      edit                             = 0xf044,$/;"	enumerator	line:242	language:C++	enum:fa::icon
edit_preferences	configwin.cpp	/^bool MainWindow::edit_preferences(){$/;"	function	line:673	language:C++	class:MainWindow
eercast	QtAwesome.h	/^      eercast                          = 0xf2da,$/;"	enumerator	line:243	language:C++	enum:fa::icon
eject	QtAwesome.h	/^      eject                            = 0xf052,$/;"	enumerator	line:244	language:C++	enum:fa::icon
electronAffinity	atom_info.cpp	/^double Atom_Info::electronAffinity()  {$/;"	function	line:76	language:C++	class:Atom_Info
electronegativity	atom_info.cpp	/^double Atom_Info::electronegativity()  {$/;"	function	line:71	language:C++	class:Atom_Info
elements_database	chem_database.hpp	/^    std::map<std::string,Atom_Info> elements_database = {$/;"	member	line:47	language:C++	class:Chem_Database	access:private
ellipsish	QtAwesome.h	/^      ellipsish                        = 0xf141,$/;"	enumerator	line:245	language:C++	enum:fa::icon
ellipsisv	QtAwesome.h	/^      ellipsisv                        = 0xf142,$/;"	enumerator	line:246	language:C++	enum:fa::icon
emd_wrapper	base_image.hpp	/^    EMDWrapper* emd_wrapper;$/;"	member	line:48	language:C++	class:BaseImage	access:private
emitCommitData	treeitem_file_delegate.cpp	/^void TreeItemFileDelegate::emitCommitData(){$/;"	function	line:369	language:C++	class:TreeItemFileDelegate
empire	QtAwesome.h	/^      empire                           = 0xf1d1,$/;"	enumerator	line:247	language:C++	enum:fa::icon
empiricalRadius_Angstroms	atom_info.cpp	/^double Atom_Info::empiricalRadius_Angstroms()  {$/;"	function	line:91	language:C++	class:Atom_Info
empiricalRadius_Nanometers	atom_info.cpp	/^double Atom_Info::empiricalRadius_Nanometers()  {$/;"	function	line:96	language:C++	class:Atom_Info
enable_highlight_error	treeitem.cpp	/^bool TreeItem::enable_highlight_error( std::string varname , int column ){$/;"	function	line:31	language:C++	class:TreeItem
enable_highlight_error	treemodel.cpp	/^bool TreeModel::enable_highlight_error( std::string varname,  int _item_missing_col ){$/;"	function	line:17	language:C++	class:TreeModel
end	super_cell.cpp	/^auto ToggleIndices(Cont &cont, It beg, It end) -> decltype(std::end(cont)){$/;"	function	line:5	language:C++
envelope	QtAwesome.h	/^      envelope                         = 0xf0e0,$/;"	enumerator	line:248	language:C++	enum:fa::icon
envelopeo	QtAwesome.h	/^      envelopeo                        = 0xf003,$/;"	enumerator	line:249	language:C++	enum:fa::icon
envelopeopen	QtAwesome.h	/^      envelopeopen                     = 0xf2b6,$/;"	enumerator	line:250	language:C++	enum:fa::icon
envelopeopeno	QtAwesome.h	/^      envelopeopeno                    = 0xf2b7,$/;"	enumerator	line:251	language:C++	enum:fa::icon
envelopesquare	QtAwesome.h	/^      envelopesquare                   = 0xf199,$/;"	enumerator	line:252	language:C++	enum:fa::icon
envira	QtAwesome.h	/^      envira                           = 0xf299,$/;"	enumerator	line:253	language:C++	enum:fa::icon
eraser	QtAwesome.h	/^      eraser                           = 0xf12d,$/;"	enumerator	line:254	language:C++	enum:fa::icon
err	emd_object.h	/^    herr_t err;$/;"	member	line:37	language:C++	class:EMDObject	access:protected
error	application_log.hpp	/^    error,$/;"	enumerator	line:31	language:C++	enum:ApplicationLog::severity_level
etsy	QtAwesome.h	/^      etsy                             = 0xf2d7,$/;"	enumerator	line:255	language:C++	enum:fa::icon
eur	QtAwesome.h	/^      eur                              = 0xf153,$/;"	enumerator	line:256	language:C++	enum:fa::icon
euro	QtAwesome.h	/^      euro                             = 0xf153,$/;"	enumerator	line:257	language:C++	enum:fa::icon
exchange	QtAwesome.h	/^      exchange                         = 0xf0ec,$/;"	enumerator	line:258	language:C++	enum:fa::icon
exclamation	QtAwesome.h	/^      exclamation                      = 0xf12a,$/;"	enumerator	line:259	language:C++	enum:fa::icon
exclamationcircle	QtAwesome.h	/^      exclamationcircle                = 0xf06a,$/;"	enumerator	line:260	language:C++	enum:fa::icon
exclamationtriangle	QtAwesome.h	/^      exclamationtriangle              = 0xf071,$/;"	enumerator	line:261	language:C++	enum:fa::icon
exp_image_properties	simgrid.hpp	/^    BaseImage exp_image_properties;$/;"	member	line:56	language:C++	class:SimGrid	access:private
expand	QtAwesome.h	/^      expand                           = 0xf065,$/;"	enumerator	line:262	language:C++	enum:fa::icon
expand_factor_a	base_cell.hpp	/^    int expand_factor_a = 1;$/;"	member	line:88	language:C++	class:BaseCell	access:protected
expand_factor_b	base_cell.hpp	/^    int expand_factor_b = 1;$/;"	member	line:89	language:C++	class:BaseCell	access:protected
expand_factor_c	base_cell.hpp	/^    int expand_factor_c = 1;$/;"	member	line:90	language:C++	class:BaseCell	access:protected
expeditedssl	QtAwesome.h	/^      expeditedssl                     = 0xf23e,$/;"	enumerator	line:263	language:C++	enum:fa::icon
experimental_image_contours	image_bounds.hpp	/^    cv::Mat experimental_image_contours;$/;"	member	line:106	language:C++	class:ImageBounds	access:protected
experimental_image_full	deprecated/image_crystal.hpp	/^    cv::Mat experimental_image_full;$/;"	member	line:36	language:C++	class:Image_Crystal	access:private
experimental_image_path	deprecated/image_crystal.hpp	/^    std::string experimental_image_path;$/;"	member	line:33	language:C++	class:Image_Crystal	access:private
experimental_image_roi	deprecated/image_crystal.hpp	/^    cv::Mat experimental_image_roi;$/;"	member	line:38	language:C++	class:Image_Crystal	access:private
experimental_image_root	configwin.h	/^  TreeItem* experimental_image_root = nullptr;$/;"	member	line:207	language:C++	class:MainWindow	access:private
experimental_images_match_location_grid	simgrid.hpp	/^    std::vector< std::vector<cv::Point> > experimental_images_match_location_grid;$/;"	member	line:71	language:C++	class:SimGrid	access:private
experimental_roi	configwin.h	/^TreeItem* experimental_roi = nullptr;$/;"	member	line:212	language:C++	class:MainWindow	access:private
experimental_roi_center	configwin.h	/^  TreeItem* experimental_roi_center = nullptr;$/;"	member	line:214	language:C++	class:MainWindow	access:private
experimental_roi_center_x	configwin.h	/^  TreeItem* experimental_roi_center_x = nullptr;$/;"	member	line:215	language:C++	class:MainWindow	access:private
experimental_roi_center_y	configwin.h	/^  TreeItem* experimental_roi_center_y = nullptr;$/;"	member	line:216	language:C++	class:MainWindow	access:private
experimental_roi_dimensions	configwin.h	/^  TreeItem* experimental_roi_dimensions = nullptr;$/;"	member	line:218	language:C++	class:MainWindow	access:private
experimental_roi_dimensions_height	configwin.h	/^  TreeItem* experimental_roi_dimensions_height = nullptr;$/;"	member	line:222	language:C++	class:MainWindow	access:private
experimental_roi_dimensions_height_nm	configwin.h	/^  TreeItem* experimental_roi_dimensions_height_nm = nullptr;$/;"	member	line:224	language:C++	class:MainWindow	access:private
experimental_roi_dimensions_height_px	configwin.h	/^  TreeItem* experimental_roi_dimensions_height_px = nullptr;$/;"	member	line:223	language:C++	class:MainWindow	access:private
experimental_roi_dimensions_width	configwin.h	/^  TreeItem* experimental_roi_dimensions_width = nullptr;$/;"	member	line:219	language:C++	class:MainWindow	access:private
experimental_roi_dimensions_width_nm	configwin.h	/^  TreeItem* experimental_roi_dimensions_width_nm = nullptr;$/;"	member	line:221	language:C++	class:MainWindow	access:private
experimental_roi_dimensions_width_px	configwin.h	/^  TreeItem* experimental_roi_dimensions_width_px = nullptr;$/;"	member	line:220	language:C++	class:MainWindow	access:private
experimental_sampling_rate	configwin.h	/^TreeItem* experimental_sampling_rate = nullptr;$/;"	member	line:209	language:C++	class:MainWindow	access:private
experimental_sampling_rate_x	configwin.h	/^TreeItem* experimental_sampling_rate_x = nullptr;$/;"	member	line:210	language:C++	class:MainWindow	access:private
experimental_sampling_rate_y	configwin.h	/^TreeItem* experimental_sampling_rate_y = nullptr;$/;"	member	line:211	language:C++	class:MainWindow	access:private
experimental_working	deprecated/image_crystal.hpp	/^    cv::Mat experimental_working;$/;"	member	line:39	language:C++	class:Image_Crystal	access:private
export_TDMap	configwin.cpp	/^bool MainWindow::export_TDMap(){$/;"	function	line:647	language:C++	class:MainWindow
export_sim_grid	simgrid.cpp	/^bool SimGrid::export_sim_grid( std::string sim_grid_file_name_image ){$/;"	function	line:181	language:C++	class:SimGrid
export_sim_grid	td_map.cpp	/^bool TDMap::export_sim_grid( std::string sim_grid_file_name_image ){$/;"	function	line:504	language:C++	class:TDMap
externallink	QtAwesome.h	/^      externallink                     = 0xf08e,$/;"	enumerator	line:264	language:C++	enum:fa::icon
externallinksquare	QtAwesome.h	/^      externallinksquare               = 0xf14c,$/;"	enumerator	line:265	language:C++	enum:fa::icon
eye	QtAwesome.h	/^      eye                              = 0xf06e,$/;"	enumerator	line:266	language:C++	enum:fa::icon
eyedropper	QtAwesome.h	/^      eyedropper                       = 0xf1fb,$/;"	enumerator	line:268	language:C++	enum:fa::icon
eyeslash	QtAwesome.h	/^      eyeslash                         = 0xf070,$/;"	enumerator	line:267	language:C++	enum:fa::icon
fa	QtAwesome.h	/^      fa                               = 0xf2b4,$/;"	enumerator	line:269	language:C++	enum:fa::icon
fa	QtAwesome.h	/^namespace fa {$/;"	namespace	line:24	language:C++
faNameIconArray	QtAwesome.cpp	/^static const FANameIcon faNameIconArray[] = {$/;"	variable	line:165	language:C++	file:
fa_500px	QtAwesome.h	/^      fa_500px                         = 0xf26e,$/;"	enumerator	line:26	language:C++	enum:fa::icon
fa_linux	QtAwesome.h	/^      fa_linux                         = 0xf17c,$/;"	enumerator	line:441	language:C++	enum:fa::icon
fa_try	QtAwesome.h	/^      fa_try                           = 0xf195,$/;"	enumerator	line:731	language:C++	enum:fa::icon
facebook	QtAwesome.h	/^      facebook                         = 0xf09a,$/;"	enumerator	line:270	language:C++	enum:fa::icon
facebookf	QtAwesome.h	/^      facebookf                        = 0xf09a,$/;"	enumerator	line:271	language:C++	enum:fa::icon
facebookofficial	QtAwesome.h	/^      facebookofficial                 = 0xf230,$/;"	enumerator	line:272	language:C++	enum:fa::icon
facebooksquare	QtAwesome.h	/^      facebooksquare                   = 0xf082,$/;"	enumerator	line:273	language:C++	enum:fa::icon
farPlane	vis/camera.cpp	/^float Camera::farPlane() const {$/;"	function	line:85	language:C++	class:Camera
fastbackward	QtAwesome.h	/^      fastbackward                     = 0xf049,$/;"	enumerator	line:274	language:C++	enum:fa::icon
fastforward	QtAwesome.h	/^      fastforward                      = 0xf050,$/;"	enumerator	line:275	language:C++	enum:fa::icon
fax	QtAwesome.h	/^      fax                              = 0xf1ac,$/;"	enumerator	line:276	language:C++	enum:fa::icon
feed	QtAwesome.h	/^      feed                             = 0xf09e,$/;"	enumerator	line:277	language:C++	enum:fa::icon
female	QtAwesome.h	/^      female                           = 0xf182,$/;"	enumerator	line:278	language:C++	enum:fa::icon
fieldOfView	vis/camera.cpp	/^float Camera::fieldOfView() const {$/;"	function	line:72	language:C++	class:Camera
fighterjet	QtAwesome.h	/^      fighterjet                       = 0xf0fb,$/;"	enumerator	line:279	language:C++	enum:fa::icon
file	QtAwesome.h	/^      file                             = 0xf15b,$/;"	enumerator	line:280	language:C++	enum:fa::icon
file_name_input_dat	base_cell.hpp	/^    std::string file_name_input_dat;$/;"	member	line:127	language:C++	class:BaseCell	access:protected
file_name_input_wave_function	wavimg_prm.hpp	/^    std::string file_name_input_wave_function;$/;"	member	line:28	language:C++	class:WAVIMG_prm	access:private
file_name_output_image_wave_function	wavimg_prm.hpp	/^    std::string file_name_output_image_wave_function;$/;"	member	line:33	language:C++	class:WAVIMG_prm	access:private
filearchiveo	QtAwesome.h	/^      filearchiveo                     = 0xf1c6,$/;"	enumerator	line:281	language:C++	enum:fa::icon
fileaudioo	QtAwesome.h	/^      fileaudioo                       = 0xf1c7,$/;"	enumerator	line:282	language:C++	enum:fa::icon
filecodeo	QtAwesome.h	/^      filecodeo                        = 0xf1c9,$/;"	enumerator	line:283	language:C++	enum:fa::icon
fileexcelo	QtAwesome.h	/^      fileexcelo                       = 0xf1c3,$/;"	enumerator	line:284	language:C++	enum:fa::icon
fileimageo	QtAwesome.h	/^      fileimageo                       = 0xf1c5,$/;"	enumerator	line:285	language:C++	enum:fa::icon
filemovieo	QtAwesome.h	/^      filemovieo                       = 0xf1c8,$/;"	enumerator	line:286	language:C++	enum:fa::icon
fileo	QtAwesome.h	/^      fileo                            = 0xf016,$/;"	enumerator	line:287	language:C++	enum:fa::icon
filepdfo	QtAwesome.h	/^      filepdfo                         = 0xf1c1,$/;"	enumerator	line:288	language:C++	enum:fa::icon
filephotoo	QtAwesome.h	/^      filephotoo                       = 0xf1c5,$/;"	enumerator	line:289	language:C++	enum:fa::icon
filepictureo	QtAwesome.h	/^      filepictureo                     = 0xf1c5,$/;"	enumerator	line:290	language:C++	enum:fa::icon
filepowerpointo	QtAwesome.h	/^      filepowerpointo                  = 0xf1c4,$/;"	enumerator	line:291	language:C++	enum:fa::icon
fileso	QtAwesome.h	/^      fileso                           = 0xf0c5,$/;"	enumerator	line:298	language:C++	enum:fa::icon
filesoundo	QtAwesome.h	/^      filesoundo                       = 0xf1c7,$/;"	enumerator	line:292	language:C++	enum:fa::icon
filetext	QtAwesome.h	/^      filetext                         = 0xf15c,$/;"	enumerator	line:293	language:C++	enum:fa::icon
filetexto	QtAwesome.h	/^      filetexto                        = 0xf0f6,$/;"	enumerator	line:294	language:C++	enum:fa::icon
filevideoo	QtAwesome.h	/^      filevideoo                       = 0xf1c8,$/;"	enumerator	line:295	language:C++	enum:fa::icon
filewordo	QtAwesome.h	/^      filewordo                        = 0xf1c2,$/;"	enumerator	line:296	language:C++	enum:fa::icon
filezipo	QtAwesome.h	/^      filezipo                         = 0xf1c6,$/;"	enumerator	line:297	language:C++	enum:fa::icon
fillColor1	renderarea.h	/^    QColor fillColor1;$/;"	member	line:79	language:C++	class:RenderArea	access:private
fillColor2	renderarea.h	/^    QColor fillColor2;$/;"	member	line:80	language:C++	class:RenderArea	access:private
film	QtAwesome.h	/^      film                             = 0xf008,$/;"	enumerator	line:299	language:C++	enum:fa::icon
filter	QtAwesome.h	/^      filter                           = 0xf0b0,$/;"	enumerator	line:300	language:C++	enum:fa::icon
final	im2model_gui.cpp	/^class Application final : public QApplication {$/;"	class	line:24	language:C++	file:	inherits:QApplication
fire	QtAwesome.h	/^      fire                             = 0xf06d,$/;"	enumerator	line:301	language:C++	enum:fa::icon
fireextinguisher	QtAwesome.h	/^      fireextinguisher                 = 0xf134,$/;"	enumerator	line:302	language:C++	enum:fa::icon
firefox	QtAwesome.h	/^      firefox                          = 0xf269,$/;"	enumerator	line:303	language:C++	enum:fa::icon
firstorder	QtAwesome.h	/^      firstorder                       = 0xf2b0,$/;"	enumerator	line:304	language:C++	enum:fa::icon
fitToContainer	cv_image_cell_widget.h	/^    void fitToContainer(){$/;"	function	line:61	language:C++	class:CvImageCellWidget	access:public
fitToWindow	cv_image_widget.cpp	/^void CVImageWidget::fitToWindow(){$/;"	function	line:35	language:C++	class:CVImageWidget
flag	QtAwesome.h	/^      flag                             = 0xf024,$/;"	enumerator	line:305	language:C++	enum:fa::icon
flagcheckered	QtAwesome.h	/^      flagcheckered                    = 0xf11e,$/;"	enumerator	line:306	language:C++	enum:fa::icon
flago	QtAwesome.h	/^      flago                            = 0xf11d,$/;"	enumerator	line:307	language:C++	enum:fa::icon
flags	treemodel.cpp	/^Qt::ItemFlags TreeModel::flags(const QModelIndex &index) const{$/;"	function	line:49	language:C++	class:TreeModel
flash	QtAwesome.h	/^      flash                            = 0xf0e7,$/;"	enumerator	line:308	language:C++	enum:fa::icon
flask	QtAwesome.h	/^      flask                            = 0xf0c3,$/;"	enumerator	line:309	language:C++	enum:fa::icon
flickr	QtAwesome.h	/^      flickr                           = 0xf16e,$/;"	enumerator	line:310	language:C++	enum:fa::icon
floppyo	QtAwesome.h	/^      floppyo                          = 0xf0c7,$/;"	enumerator	line:311	language:C++	enum:fa::icon
folder	QtAwesome.h	/^      folder                           = 0xf07b,$/;"	enumerator	line:312	language:C++	enum:fa::icon
foldero	QtAwesome.h	/^      foldero                          = 0xf114,$/;"	enumerator	line:313	language:C++	enum:fa::icon
folderopen	QtAwesome.h	/^      folderopen                       = 0xf07c,$/;"	enumerator	line:314	language:C++	enum:fa::icon
folderopeno	QtAwesome.h	/^      folderopeno                      = 0xf115,$/;"	enumerator	line:315	language:C++	enum:fa::icon
font	QtAwesome.cpp	/^QFont QtAwesome::font( int size )$/;"	function	line:1108	language:C++	class:QtAwesome
font	QtAwesome.h	/^      font                             = 0xf031,$/;"	enumerator	line:316	language:C++	enum:fa::icon
fontIconPainter_	QtAwesome.h	/^    QtAwesomeIconPainter* fontIconPainter_;                \/\/\/< A special painter fo painting codepoints$/;"	member	line:858	language:C++	class:QtAwesome	access:private
fontName	QtAwesome.h	/^    QString fontName() { return fontName_ ; }$/;"	function	line:850	language:C++	class:QtAwesome	access:public
fontName_	QtAwesome.h	/^    QString fontName_;                                     \/\/\/< The font name used for this map$/;"	member	line:853	language:C++	class:QtAwesome	access:private
fontawesome	QtAwesome.h	/^      fontawesome                      = 0xf2b4,$/;"	enumerator	line:317	language:C++	enum:fa::icon
fonticons	QtAwesome.h	/^      fonticons                        = 0xf280,$/;"	enumerator	line:318	language:C++	enum:fa::icon
form_matrix_from_miller_indices	base_cell.cpp	/^void BaseCell::form_matrix_from_miller_indices (){$/;"	function	line:367	language:C++	class:BaseCell
fortawesome	QtAwesome.h	/^      fortawesome                      = 0xf286,$/;"	enumerator	line:319	language:C++	enum:fa::icon
forumbee	QtAwesome.h	/^      forumbee                         = 0xf211,$/;"	enumerator	line:320	language:C++	enum:fa::icon
forward	QtAwesome.h	/^      forward                          = 0xf04e,$/;"	enumerator	line:321	language:C++	enum:fa::icon
forward	vis/camera.cpp	/^glm::vec3 Camera::forward() const {$/;"	function	line:126	language:C++	class:Camera
foursquare	QtAwesome.h	/^      foursquare                       = 0xf180,$/;"	enumerator	line:322	language:C++	enum:fa::icon
fp_checkable_getters	treeitem.h	/^    std::vector< boost::function<bool(void)> > fp_checkable_getters;$/;"	member	line:167	language:C++	class:TreeItem	access:private
fp_checkable_setters	treeitem.h	/^    std::vector< boost::function<bool(bool)> > fp_checkable_setters;$/;"	member	line:166	language:C++	class:TreeItem	access:private
fp_data_appender_string	treeitem.h	/^    boost::function<bool(std::string)> fp_data_appender_string;$/;"	member	line:197	language:C++	class:TreeItem	access:private
fp_data_getter_bool	treeitem.h	/^    boost::function<bool(void)> fp_data_getter_bool;$/;"	member	line:204	language:C++	class:TreeItem	access:private
fp_data_getter_double	treeitem.h	/^    boost::function<double(void)> fp_data_getter_double;$/;"	member	line:201	language:C++	class:TreeItem	access:private
fp_data_getter_double_vec	treeitem.h	/^    std::vector< boost::function<double(void)> > fp_data_getter_double_vec;$/;"	member	line:184	language:C++	class:TreeItem	access:private
fp_data_getter_int	treeitem.h	/^    boost::function<int(void)> fp_data_getter_int;$/;"	member	line:207	language:C++	class:TreeItem	access:private
fp_data_getter_string	treeitem.h	/^    boost::function<std::string(void)> fp_data_getter_string;$/;"	member	line:198	language:C++	class:TreeItem	access:private
fp_data_setter_bool	treeitem.h	/^    boost::function<bool(bool)> fp_data_setter_bool;$/;"	member	line:203	language:C++	class:TreeItem	access:private
fp_data_setter_double	treeitem.h	/^    boost::function<bool(double)> fp_data_setter_double;$/;"	member	line:200	language:C++	class:TreeItem	access:private
fp_data_setter_int	treeitem.h	/^    boost::function<bool(int)> fp_data_setter_int;$/;"	member	line:206	language:C++	class:TreeItem	access:private
fp_data_setter_string	treeitem.h	/^    boost::function<bool(std::string)> fp_data_setter_string;$/;"	member	line:196	language:C++	class:TreeItem	access:private
fp_validator_double_range_max	treeitem.h	/^    std::vector< boost::function<double(void)> > fp_validator_double_range_max;$/;"	member	line:183	language:C++	class:TreeItem	access:private
fp_validator_double_range_min	treeitem.h	/^    std::vector< boost::function<double(void)> > fp_validator_double_range_min;$/;"	member	line:182	language:C++	class:TreeItem	access:private
fp_validator_int_range_max	treeitem.h	/^    std::vector< boost::function<int(void)> > fp_validator_int_range_max;$/;"	member	line:174	language:C++	class:TreeItem	access:private
fp_validator_int_range_min	treeitem.h	/^    std::vector< boost::function<int(void)> > fp_validator_int_range_min;$/;"	member	line:173	language:C++	class:TreeItem	access:private
fractional_norm_a_atom_pos	base_cell.hpp	/^    double fractional_norm_a_atom_pos;$/;"	member	line:105	language:C++	class:BaseCell	access:protected
fractional_norm_b_atom_pos	base_cell.hpp	/^    double fractional_norm_b_atom_pos;$/;"	member	line:106	language:C++	class:BaseCell	access:protected
fractional_norm_c_atom_pos	base_cell.hpp	/^    double fractional_norm_c_atom_pos;$/;"	member	line:107	language:C++	class:BaseCell	access:protected
freecodecamp	QtAwesome.h	/^      freecodecamp                     = 0xf2c5,$/;"	enumerator	line:323	language:C++	enum:fa::icon
frowno	QtAwesome.h	/^      frowno                           = 0xf119,$/;"	enumerator	line:324	language:C++	enum:fa::icon
full_bin_path_execname	base_bin.hpp	/^    boost::filesystem::path full_bin_path_execname;$/;"	member	line:55	language:C++	class:BaseBin	access:protected
full_boundary_polygon	image_bounds.hpp	/^    std::vector<cv::Point2i> full_boundary_polygon;$/;"	member	line:75	language:C++	class:ImageBounds	access:protected
full_boundary_polygon_margin_x_nm	image_bounds.hpp	/^    double full_boundary_polygon_margin_x_nm = 0.0f;$/;"	member	line:100	language:C++	class:ImageBounds	access:protected
full_boundary_polygon_margin_x_px	image_bounds.hpp	/^    int full_boundary_polygon_margin_x_px = 0;$/;"	member	line:101	language:C++	class:ImageBounds	access:protected
full_boundary_polygon_margin_y_nm	image_bounds.hpp	/^    double full_boundary_polygon_margin_y_nm = 0.0f;$/;"	member	line:103	language:C++	class:ImageBounds	access:protected
full_boundary_polygon_margin_y_px	image_bounds.hpp	/^    int full_boundary_polygon_margin_y_px = 0;$/;"	member	line:104	language:C++	class:ImageBounds	access:protected
full_boundary_polygon_w_margin	image_bounds.hpp	/^    std::vector<cv::Point2i> full_boundary_polygon_w_margin;$/;"	member	line:77	language:C++	class:ImageBounds	access:protected
full_image	base_image.hpp	/^    cv::Mat full_image;$/;"	member	line:52	language:C++	class:BaseImage	access:protected
full_image	emd_wrapper.h	/^cv::Mat full_image;$/;"	member	line:71	language:C++	class:EMDWrapper	access:private
full_n_cols_width	base_image.hpp	/^    int full_n_cols_width = 0;$/;"	member	line:58	language:C++	class:BaseImage	access:protected
full_n_cols_width_nm	base_image.hpp	/^    double full_n_cols_width_nm = 0;$/;"	member	line:59	language:C++	class:BaseImage	access:protected
full_n_rows_height	base_image.hpp	/^    int full_n_rows_height = 0;$/;"	member	line:55	language:C++	class:BaseImage	access:protected
full_n_rows_height_nm	base_image.hpp	/^    double full_n_rows_height_nm = 0.0f;$/;"	member	line:56	language:C++	class:BaseImage	access:protected
full_nm_size_cols_b	base_image.hpp	/^    double full_nm_size_cols_b = 0.0f;$/;"	member	line:72	language:C++	class:BaseImage	access:protected
full_nm_size_rows_a	base_image.hpp	/^    double full_nm_size_rows_a = 0.0f;$/;"	member	line:70	language:C++	class:BaseImage	access:protected
full_path_file	application_log.hpp	/^      boost::filesystem::path full_path_file;$/;"	member	line:42	language:C++	class:ApplicationLog::ApplicationLog	access:private
full_prm_dat_cleanup_bin	wavimg_prm.cpp	/^bool WAVIMG_prm::full_prm_dat_cleanup_bin(){$/;"	function	line:220	language:C++	class:WAVIMG_prm
futbolo	QtAwesome.h	/^      futbolo                          = 0xf1e3,$/;"	enumerator	line:325	language:C++	enum:fa::icon
gamepad	QtAwesome.h	/^      gamepad                          = 0xf11b,$/;"	enumerator	line:326	language:C++	enum:fa::icon
gavel	QtAwesome.h	/^      gavel                            = 0xf0e3,$/;"	enumerator	line:327	language:C++	enum:fa::icon
gbp	QtAwesome.h	/^      gbp                              = 0xf154,$/;"	enumerator	line:328	language:C++	enum:fa::icon
ge	QtAwesome.h	/^      ge                               = 0xf1d1,$/;"	enumerator	line:329	language:C++	enum:fa::icon
gear	QtAwesome.h	/^      gear                             = 0xf013,$/;"	enumerator	line:330	language:C++	enum:fa::icon
gears	QtAwesome.h	/^      gears                            = 0xf085,$/;"	enumerator	line:331	language:C++	enum:fa::icon
genderless	QtAwesome.h	/^      genderless                       = 0xf22d,$/;"	enumerator	line:332	language:C++	enum:fa::icon
getItem	treemodel.cpp	/^TreeItem *TreeModel::getItem(const QModelIndex &index) const{$/;"	function	line:64	language:C++	class:TreeModel
get_aberration_definition	wavimg_prm.cpp	/^double WAVIMG_prm::get_aberration_definition( WAVIMG_prm::AberrationDefinition aberration_index, int coefficient ){$/;"	function	line:628	language:C++	class:WAVIMG_prm
get_aberration_definition_switch	wavimg_prm.cpp	/^bool WAVIMG_prm::get_aberration_definition_switch( WAVIMG_prm::AberrationDefinition aberration_index ){$/;"	function	line:643	language:C++	class:WAVIMG_prm
get_accelaration_voltage_kv_bottom_limit	td_map.cpp	/^double TDMap::get_accelaration_voltage_kv_bottom_limit(){$/;"	function	line:1542	language:C++	class:TDMap
get_accelaration_voltage_kv_top_limit	td_map.cpp	/^double TDMap::get_accelaration_voltage_kv_top_limit(){$/;"	function	line:1546	language:C++	class:TDMap
get_action_toolBar	treeitem.cpp	/^CustomToolButton* TreeItem::get_action_toolBar(){$/;"	function	line:18	language:C++	class:TreeItem
get_angle_alpha	base_cell.hpp	/^    double get_angle_alpha(){ return angle_alpha; }$/;"	function	line:218	language:C++	class:BaseCell	access:public
get_angle_beta	base_cell.hpp	/^    double get_angle_beta(){ return angle_beta; }$/;"	function	line:219	language:C++	class:BaseCell	access:public
get_angle_gamma	base_cell.hpp	/^    double get_angle_gamma(){ return angle_gamma; }$/;"	function	line:220	language:C++	class:BaseCell	access:public
get_atom_cpk_rgba_colors_vec	base_cell.hpp	/^    std::vector<cv::Vec4d> get_atom_cpk_rgba_colors_vec( ){ return atom_cpk_rgba_colors; }$/;"	function	line:275	language:C++	class:BaseCell	access:public
get_atom_debye_waller_factor_vec	base_cell.hpp	/^    std::vector<double> get_atom_debye_waller_factor_vec(){ return atom_debye_waller_factor; }$/;"	function	line:234	language:C++	class:BaseCell	access:public
get_atom_empirical_radii_vec	base_cell.hpp	/^    std::vector<double> get_atom_empirical_radii_vec(){ return atom_empirical_radii; }$/;"	function	line:276	language:C++	class:BaseCell	access:public
get_atom_info	chem_database.cpp	/^Atom_Info Chem_Database::get_atom_info( std::string type_symbol ){$/;"	function	line:7	language:C++	class:Chem_Database
get_atom_occupancy_vec	base_cell.hpp	/^    std::vector<double> get_atom_occupancy_vec(){ return atom_occupancies; }$/;"	function	line:233	language:C++	class:BaseCell	access:public
get_atom_positions_vec	base_cell.hpp	/^    std::vector<cv::Point3d> get_atom_positions_vec( ){ return atom_positions; }$/;"	function	line:274	language:C++	class:BaseCell	access:public
get_atom_radii_vec	base_cell.hpp	/^    std::vector<double> get_atom_radii_vec(){ return atom_radii; }$/;"	function	line:236	language:C++	class:BaseCell	access:public
get_atom_type_symbols_vec	base_cell.hpp	/^    std::vector<std::string> get_atom_type_symbols_vec(){ return atom_type_symbols; }$/;"	function	line:232	language:C++	class:BaseCell	access:public
get_base_bin_output_target_folder	base_bin.hpp	/^    boost::filesystem::path get_base_bin_output_target_folder(){ return base_bin_output_target_folder; }$/;"	function	line:77	language:C++	class:BaseBin	access:public
get_base_bin_start_dir_path	base_bin.hpp	/^    boost::filesystem::path get_base_bin_start_dir_path(){ return base_bin_start_dir_path; }$/;"	function	line:76	language:C++	class:BaseBin	access:public
get_base_dir_path	base_crystal.hpp	/^    boost::filesystem::path get_base_dir_path(){ return base_dir_path; }$/;"	function	line:252	language:C++	class:BaseCrystal	access:public
get_best_match_position	simgrid.cpp	/^cv::Point2i SimGrid::get_best_match_position(){$/;"	function	line:665	language:C++	class:SimGrid
get_cel_margin_nm	base_cell.hpp	/^    double get_cel_margin_nm(){ return cel_margin_nm; }$/;"	function	line:272	language:C++	class:BaseCell	access:public
get_cel_path	base_cell.hpp	/^    std::string get_cel_path(){ return cel_path; }$/;"	function	line:217	language:C++	class:BaseCell	access:public
get_celslc_parameters	simulation_step.cpp	/^CELSLC_prm* Simulation_Step::get_celslc_parameters(){$/;"	function	line:40	language:C++	class:Simulation_Step
get_child_group	emd_group.cpp	/^EMDGroup* EMDGroup::get_child_group( int child_pos  ){$/;"	function	line:26	language:C++	class:EMDGroup
get_chunk_dims_out	emd_dataset.cpp	/^hsize_t* EMDDataSet::get_chunk_dims_out(){$/;"	function	line:11	language:C++	class:EMDDataSet
get_cif_loop_tables	mc_driver.hpp	/^      std::map<int,std::vector<std::string>> get_cif_loop_tables(){ return loop_tables; }$/;"	function	line:41	language:C++	class:MC::MC_Driver	access:public
get_cif_looped_items	mc_driver.hpp	/^      std::map<std::string,std::vector<std::string>> get_cif_looped_items(){ return looped_items; }$/;"	function	line:42	language:C++	class:MC::MC_Driver	access:public
get_cif_non_looped_items	mc_driver.hpp	/^      std::map<std::string,std::string> get_cif_non_looped_items(){ return non_looped_items; }$/;"	function	line:40	language:C++	class:MC::MC_Driver	access:public
get_cif_path	base_cell.hpp	/^    std::string get_cif_path(){ return cif_path; }$/;"	function	line:213	language:C++	class:BaseCell	access:public
get_dat_output_target_folder	base_crystal.hpp	/^    std::string get_dat_output_target_folder(){ return dat_output_target_folder; }$/;"	function	line:231	language:C++	class:BaseCrystal	access:public
get_dataset	emd_group.cpp	/^EMDDataSet* EMDGroup::get_dataset( std::string dataset_name ){$/;"	function	line:45	language:C++	class:EMDGroup
get_defocus_lower_bound	base_crystal.hpp	/^    double get_defocus_lower_bound(){ return defocus_lower_bound; }$/;"	function	line:248	language:C++	class:BaseCrystal	access:public
get_defocus_lower_bound	td_map.cpp	/^double TDMap::get_defocus_lower_bound(){$/;"	function	line:666	language:C++	class:TDMap
get_defocus_lower_bound_bottom_limit	td_map.cpp	/^double TDMap::get_defocus_lower_bound_bottom_limit(){$/;"	function	line:1514	language:C++	class:TDMap
get_defocus_lower_bound_top_limit	td_map.cpp	/^double TDMap::get_defocus_lower_bound_top_limit(){$/;"	function	line:1519	language:C++	class:TDMap
get_defocus_period	base_crystal.hpp	/^    double get_defocus_period(){ return defocus_period; }$/;"	function	line:250	language:C++	class:BaseCrystal	access:public
get_defocus_period	td_map.cpp	/^double TDMap::get_defocus_period(){$/;"	function	line:670	language:C++	class:TDMap
get_defocus_samples	base_crystal.hpp	/^    int get_defocus_samples(){ return defocus_samples; }$/;"	function	line:247	language:C++	class:BaseCrystal	access:public
get_defocus_samples	td_map.cpp	/^int TDMap::get_defocus_samples(){$/;"	function	line:662	language:C++	class:TDMap
get_defocus_samples_bottom_limit	td_map.cpp	/^int TDMap::get_defocus_samples_bottom_limit(){$/;"	function	line:1505	language:C++	class:TDMap
get_defocus_samples_top_limit	td_map.cpp	/^int TDMap::get_defocus_samples_top_limit(){$/;"	function	line:1509	language:C++	class:TDMap
get_defocus_upper_bound	base_crystal.hpp	/^    double get_defocus_upper_bound(){ return defocus_upper_bound; }$/;"	function	line:249	language:C++	class:BaseCrystal	access:public
get_defocus_upper_bound_bottom_limit	td_map.cpp	/^double TDMap::get_defocus_upper_bound_bottom_limit(){$/;"	function	line:1528	language:C++	class:TDMap
get_defocus_upper_bound_top_limit	td_map.cpp	/^double TDMap::get_defocus_upper_bound_top_limit(){$/;"	function	line:1537	language:C++	class:TDMap
get_dirname_slot	treeitem_file_delegate.cpp	/^void TreeItemFileDelegate::get_dirname_slot( QWidget *editor ) {$/;"	function	line:502	language:C++	class:TreeItemFileDelegate
get_dr_probe_bin_path	settings.cpp	/^QString Settings::get_dr_probe_bin_path(){$/;"	function	line:48	language:C++	class:Settings
get_dr_probe_celslc_bin	settings.cpp	/^QString Settings::get_dr_probe_celslc_bin( ){$/;"	function	line:52	language:C++	class:Settings
get_dr_probe_msa_bin	settings.cpp	/^QString Settings::get_dr_probe_msa_bin( ){$/;"	function	line:56	language:C++	class:Settings
get_dr_probe_wavimg_bin	settings.cpp	/^QString Settings::get_dr_probe_wavimg_bin( ){$/;"	function	line:60	language:C++	class:Settings
get_dropdown_column	treeitem.cpp	/^int TreeItem::get_dropdown_column(){$/;"	function	line:513	language:C++	class:TreeItem
get_dropdown_data	treeitem.cpp	/^QVector<QVariant> TreeItem::get_dropdown_data(){$/;"	function	line:639	language:C++	class:TreeItem
get_dropdown_enum	treeitem.cpp	/^QVector<QVariant> TreeItem::get_dropdown_enum(){$/;"	function	line:643	language:C++	class:TreeItem
get_exec_log_level	td_map.hpp	/^    int get_exec_log_level(){ return _exec_log_level;}$/;"	function	line:144	language:C++	class:TDMap	access:public
get_exp_image_bounds_flag_full_boundary_polygon	td_map.cpp	/^bool TDMap::get_exp_image_bounds_flag_full_boundary_polygon(){ return _super_cell->get_flag_full_boundary_polygon(); }$/;"	function	line:1662	language:C++	class:TDMap
get_exp_image_bounds_flag_full_boundary_polygon_w_margin	td_map.cpp	/^bool TDMap::get_exp_image_bounds_flag_full_boundary_polygon_w_margin(){ return _super_cell->get_flag_full_boundary_polygon_w_margin(); }$/;"	function	line:1663	language:C++	class:TDMap
get_exp_image_bounds_flag_roi_boundary_image	td_map.cpp	/^bool TDMap::get_exp_image_bounds_flag_roi_boundary_image(){ return _super_cell->get_flag_roi_boundary_image(); }$/;"	function	line:1666	language:C++	class:TDMap
get_exp_image_bounds_flag_roi_boundary_image_w_margin	td_map.cpp	/^bool TDMap::get_exp_image_bounds_flag_roi_boundary_image_w_margin(){ return _super_cell->get_flag_roi_boundary_image_w_margin(); }$/;"	function	line:1669	language:C++	class:TDMap
get_exp_image_bounds_flag_roi_boundary_polygon	td_map.cpp	/^bool TDMap::get_exp_image_bounds_flag_roi_boundary_polygon(){ return _super_cell->get_flag_roi_boundary_polygon(); }$/;"	function	line:1664	language:C++	class:TDMap
get_exp_image_bounds_flag_roi_boundary_polygon_w_margin	td_map.cpp	/^bool TDMap::get_exp_image_bounds_flag_roi_boundary_polygon_w_margin(){ return _super_cell->get_flag_roi_boundary_polygon_w_margin(); }$/;"	function	line:1667	language:C++	class:TDMap
get_exp_image_bounds_flag_roi_boundary_rect	td_map.cpp	/^bool TDMap::get_exp_image_bounds_flag_roi_boundary_rect(){ return _super_cell->get_flag_roi_boundary_rect(); }$/;"	function	line:1665	language:C++	class:TDMap
get_exp_image_bounds_flag_roi_boundary_rect_w_margin	td_map.cpp	/^bool TDMap::get_exp_image_bounds_flag_roi_boundary_rect_w_margin(){ return _super_cell->get_flag_roi_boundary_rect_w_margin(); }$/;"	function	line:1668	language:C++	class:TDMap
get_exp_image_bounds_full_boundary_polygon	td_map.cpp	/^std::vector<cv::Point2i> TDMap::get_exp_image_bounds_full_boundary_polygon(){ return _super_cell->get_full_boundary_polygon(); }$/;"	function	line:1678	language:C++	class:TDMap
get_exp_image_bounds_full_boundary_polygon_margin_x_nm	td_map.cpp	/^double TDMap::get_exp_image_bounds_full_boundary_polygon_margin_x_nm(){ return _super_cell->get_full_boundary_polygon_margin_x_nm(); }$/;"	function	line:1687	language:C++	class:TDMap
get_exp_image_bounds_full_boundary_polygon_margin_x_px	td_map.cpp	/^int TDMap::get_exp_image_bounds_full_boundary_polygon_margin_x_px(){ return _super_cell->get_full_boundary_polygon_margin_x_px(); }$/;"	function	line:1688	language:C++	class:TDMap
get_exp_image_bounds_full_boundary_polygon_margin_y_nm	td_map.cpp	/^double TDMap::get_exp_image_bounds_full_boundary_polygon_margin_y_nm(){ return _super_cell->get_full_boundary_polygon_margin_y_nm(); }$/;"	function	line:1689	language:C++	class:TDMap
get_exp_image_bounds_full_boundary_polygon_margin_y_px	td_map.cpp	/^int TDMap::get_exp_image_bounds_full_boundary_polygon_margin_y_px(){ return _super_cell->get_full_boundary_polygon_margin_y_px(); }$/;"	function	line:1690	language:C++	class:TDMap
get_exp_image_bounds_full_boundary_polygon_w_margin	td_map.cpp	/^std::vector<cv::Point2i> TDMap::get_exp_image_bounds_full_boundary_polygon_w_margin(){ return _super_cell->get_full_boundary_polygon_w_margin(); }$/;"	function	line:1679	language:C++	class:TDMap
get_exp_image_bounds_hysteresis_threshold	td_map.cpp	/^int TDMap::get_exp_image_bounds_hysteresis_threshold(){ return _super_cell->get_hysteresis_threshold(); }$/;"	function	line:1671	language:C++	class:TDMap
get_exp_image_bounds_hysteresis_threshold_range_bottom_limit	td_map.cpp	/^int TDMap::get_exp_image_bounds_hysteresis_threshold_range_bottom_limit(){ return _super_cell->get_hysteresis_threshold_range_bottom_limit(); }$/;"	function	line:1674	language:C++	class:TDMap
get_exp_image_bounds_hysteresis_threshold_range_top_limit	td_map.cpp	/^int TDMap::get_exp_image_bounds_hysteresis_threshold_range_top_limit(){ return _super_cell->get_hysteresis_threshold_range_top_limit(); }$/;"	function	line:1675	language:C++	class:TDMap
get_exp_image_bounds_max_contour_distance_px	td_map.cpp	/^int TDMap::get_exp_image_bounds_max_contour_distance_px(){ return _super_cell->get_max_contour_distance_px(); }$/;"	function	line:1672	language:C++	class:TDMap
get_exp_image_bounds_max_contour_distance_px_range_bottom_limit	td_map.cpp	/^int TDMap::get_exp_image_bounds_max_contour_distance_px_range_bottom_limit(){ return _super_cell->get_max_contour_distance_px_range_bottom_limit(); }$/;"	function	line:1676	language:C++	class:TDMap
get_exp_image_bounds_max_contour_distance_px_range_top_limit	td_map.cpp	/^int TDMap::get_exp_image_bounds_max_contour_distance_px_range_top_limit(){ return _super_cell->get_max_contour_distance_px_range_top_limit(); }$/;"	function	line:1677	language:C++	class:TDMap
get_exp_image_bounds_roi_boundary_image	td_map.cpp	/^cv::Mat TDMap::get_exp_image_bounds_roi_boundary_image(){ return _super_cell->get_roi_boundary_image(); }$/;"	function	line:1683	language:C++	class:TDMap
get_exp_image_bounds_roi_boundary_image_w_margin	td_map.cpp	/^cv::Mat TDMap::get_exp_image_bounds_roi_boundary_image_w_margin(){ return _super_cell->get_roi_boundary_image_w_margin(); }$/;"	function	line:1686	language:C++	class:TDMap
get_exp_image_bounds_roi_boundary_polygon	td_map.cpp	/^std::vector<cv::Point2i> TDMap::get_exp_image_bounds_roi_boundary_polygon(){ return _super_cell->get_roi_boundary_polygon(); }$/;"	function	line:1681	language:C++	class:TDMap
get_exp_image_bounds_roi_boundary_polygon_w_margin	td_map.cpp	/^std::vector<cv::Point2i> TDMap::get_exp_image_bounds_roi_boundary_polygon_w_margin(){ return _super_cell->get_roi_boundary_polygon_w_margin(); }$/;"	function	line:1684	language:C++	class:TDMap
get_exp_image_bounds_roi_boundary_rect	td_map.cpp	/^cv::Rect TDMap::get_exp_image_bounds_roi_boundary_rect(){ return _super_cell->get_roi_boundary_rect(); }$/;"	function	line:1682	language:C++	class:TDMap
get_exp_image_bounds_roi_boundary_rect_w_margin	td_map.cpp	/^cv::Rect TDMap::get_exp_image_bounds_roi_boundary_rect_w_margin(){ return _super_cell->get_roi_boundary_rect_w_margin(); }$/;"	function	line:1685	language:C++	class:TDMap
get_exp_image_properties_flag_full_image	simgrid.cpp	/^bool SimGrid::get_exp_image_properties_flag_full_image(){$/;"	function	line:153	language:C++	class:SimGrid
get_exp_image_properties_flag_full_image	td_map.cpp	/^bool TDMap::get_exp_image_properties_flag_full_image(){$/;"	function	line:1409	language:C++	class:TDMap
get_exp_image_properties_flag_full_n_cols_width	simgrid.cpp	/^bool SimGrid::get_exp_image_properties_flag_full_n_cols_width(){$/;"	function	line:85	language:C++	class:SimGrid
get_exp_image_properties_flag_full_n_rows_height	simgrid.cpp	/^bool SimGrid::get_exp_image_properties_flag_full_n_rows_height(){$/;"	function	line:89	language:C++	class:SimGrid
get_exp_image_properties_flag_roi_image	simgrid.cpp	/^bool SimGrid::get_exp_image_properties_flag_roi_image(){$/;"	function	line:157	language:C++	class:SimGrid
get_exp_image_properties_flag_roi_image	td_map.cpp	/^bool TDMap::get_exp_image_properties_flag_roi_image(){$/;"	function	line:1575	language:C++	class:TDMap
get_exp_image_properties_flag_roi_nx_size_height	simgrid.cpp	/^bool SimGrid::get_exp_image_properties_flag_roi_nx_size_height(){$/;"	function	line:141	language:C++	class:SimGrid
get_exp_image_properties_flag_roi_ny_size_width	simgrid.cpp	/^bool SimGrid::get_exp_image_properties_flag_roi_ny_size_width(){$/;"	function	line:137	language:C++	class:SimGrid
get_exp_image_properties_flag_roi_rectangle	simgrid.cpp	/^bool SimGrid::get_exp_image_properties_flag_roi_rectangle(){$/;"	function	line:161	language:C++	class:SimGrid
get_exp_image_properties_flag_roi_rectangle	td_map.cpp	/^bool TDMap::get_exp_image_properties_flag_roi_rectangle(){$/;"	function	line:1579	language:C++	class:TDMap
get_exp_image_properties_full_image	simgrid.cpp	/^cv::Mat SimGrid::get_exp_image_properties_full_image(){$/;"	function	line:93	language:C++	class:SimGrid
get_exp_image_properties_full_image	td_map.cpp	/^cv::Mat TDMap::get_exp_image_properties_full_image(){$/;"	function	line:1626	language:C++	class:TDMap
get_exp_image_properties_full_n_cols_width	simgrid.cpp	/^int SimGrid::get_exp_image_properties_full_n_cols_width(){$/;"	function	line:105	language:C++	class:SimGrid
get_exp_image_properties_full_n_cols_width	td_map.cpp	/^int TDMap::get_exp_image_properties_full_n_cols_width(){$/;"	function	line:1413	language:C++	class:TDMap
get_exp_image_properties_full_n_rows_height	simgrid.cpp	/^int SimGrid::get_exp_image_properties_full_n_rows_height(){$/;"	function	line:117	language:C++	class:SimGrid
get_exp_image_properties_full_n_rows_height	td_map.cpp	/^int TDMap::get_exp_image_properties_full_n_rows_height(){$/;"	function	line:1417	language:C++	class:TDMap
get_exp_image_properties_full_nx_size_height_nm	simgrid.cpp	/^double SimGrid::get_exp_image_properties_full_nx_size_height_nm(){$/;"	function	line:109	language:C++	class:SimGrid
get_exp_image_properties_full_nx_size_height_nm	td_map.cpp	/^double TDMap::get_exp_image_properties_full_nx_size_height_nm(){$/;"	function	line:1638	language:C++	class:TDMap
get_exp_image_properties_full_ny_size_width_nm	simgrid.cpp	/^double SimGrid::get_exp_image_properties_full_ny_size_width_nm(){$/;"	function	line:121	language:C++	class:SimGrid
get_exp_image_properties_full_ny_size_width_nm	td_map.cpp	/^double TDMap::get_exp_image_properties_full_ny_size_width_nm(){$/;"	function	line:1642	language:C++	class:TDMap
get_exp_image_properties_roi_center_x	simgrid.cpp	/^int SimGrid::get_exp_image_properties_roi_center_x(){$/;"	function	line:145	language:C++	class:SimGrid
get_exp_image_properties_roi_center_y	simgrid.cpp	/^int SimGrid::get_exp_image_properties_roi_center_y(){$/;"	function	line:149	language:C++	class:SimGrid
get_exp_image_properties_roi_image	simgrid.cpp	/^cv::Mat SimGrid::get_exp_image_properties_roi_image(){$/;"	function	line:97	language:C++	class:SimGrid
get_exp_image_properties_roi_image	td_map.cpp	/^cv::Mat TDMap::get_exp_image_properties_roi_image(){$/;"	function	line:1630	language:C++	class:TDMap
get_exp_image_properties_roi_nx_size_height	simgrid.cpp	/^int SimGrid::get_exp_image_properties_roi_nx_size_height(){$/;"	function	line:133	language:C++	class:SimGrid
get_exp_image_properties_roi_nx_size_height_nm	simgrid.cpp	/^double SimGrid::get_exp_image_properties_roi_nx_size_height_nm(){$/;"	function	line:113	language:C++	class:SimGrid
get_exp_image_properties_roi_nx_size_height_nm	td_map.cpp	/^double TDMap::get_exp_image_properties_roi_nx_size_height_nm(){$/;"	function	line:1646	language:C++	class:TDMap
get_exp_image_properties_roi_ny_size_width	simgrid.cpp	/^int SimGrid::get_exp_image_properties_roi_ny_size_width(){$/;"	function	line:129	language:C++	class:SimGrid
get_exp_image_properties_roi_ny_size_width_nm	simgrid.cpp	/^double SimGrid::get_exp_image_properties_roi_ny_size_width_nm(){$/;"	function	line:125	language:C++	class:SimGrid
get_exp_image_properties_roi_ny_size_width_nm	td_map.cpp	/^double TDMap::get_exp_image_properties_roi_ny_size_width_nm(){$/;"	function	line:1650	language:C++	class:TDMap
get_exp_image_properties_roi_rectangle	simgrid.cpp	/^cv::Rect SimGrid::get_exp_image_properties_roi_rectangle(){$/;"	function	line:101	language:C++	class:SimGrid
get_exp_image_properties_roi_rectangle	td_map.cpp	/^cv::Rect TDMap::get_exp_image_properties_roi_rectangle(){$/;"	function	line:1634	language:C++	class:TDMap
get_exp_image_properties_sampling_rate_nm_per_pixel_bottom_limit	td_map.cpp	/^double TDMap::get_exp_image_properties_sampling_rate_nm_per_pixel_bottom_limit(){$/;"	function	line:1425	language:C++	class:TDMap
get_exp_image_properties_sampling_rate_nm_per_pixel_top_limit	td_map.cpp	/^double TDMap::get_exp_image_properties_sampling_rate_nm_per_pixel_top_limit(){$/;"	function	line:1429	language:C++	class:TDMap
get_experimental_roi_center_x_bottom_limit	td_map.cpp	/^int TDMap::get_experimental_roi_center_x_bottom_limit(){$/;"	function	line:1584	language:C++	class:TDMap
get_experimental_roi_center_x_top_limit	td_map.cpp	/^int TDMap::get_experimental_roi_center_x_top_limit(){$/;"	function	line:1604	language:C++	class:TDMap
get_experimental_roi_center_y_bottom_limit	td_map.cpp	/^int TDMap::get_experimental_roi_center_y_bottom_limit(){$/;"	function	line:1594	language:C++	class:TDMap
get_experimental_roi_center_y_top_limit	td_map.cpp	/^int TDMap::get_experimental_roi_center_y_top_limit(){$/;"	function	line:1615	language:C++	class:TDMap
get_experimental_roi_dimensions_height_bottom_limit	td_map.cpp	/^int TDMap::get_experimental_roi_dimensions_height_bottom_limit(){$/;"	function	line:1451	language:C++	class:TDMap
get_experimental_roi_dimensions_height_top_limit	td_map.cpp	/^int TDMap::get_experimental_roi_dimensions_height_top_limit(){$/;"	function	line:1459	language:C++	class:TDMap
get_experimental_roi_dimensions_width_bottom_limit	td_map.cpp	/^int TDMap::get_experimental_roi_dimensions_width_bottom_limit(){$/;"	function	line:1433	language:C++	class:TDMap
get_experimental_roi_dimensions_width_top_limit	td_map.cpp	/^int TDMap::get_experimental_roi_dimensions_width_top_limit(){$/;"	function	line:1441	language:C++	class:TDMap
get_export_sim_grid_filename_hint	simgrid.cpp	/^std::string SimGrid::get_export_sim_grid_filename_hint(){$/;"	function	line:628	language:C++	class:SimGrid
get_export_sim_grid_filename_hint	td_map.cpp	/^std::string TDMap::get_export_sim_grid_filename_hint(){$/;"	function	line:541	language:C++	class:TDMap
get_filename_slot	treeitem_file_delegate.cpp	/^void TreeItemFileDelegate::get_filename_slot( QWidget *editor ) const {$/;"	function	line:486	language:C++	class:TreeItemFileDelegate
get_flag_base_bin_output_target_folder	base_bin.hpp	/^    bool get_flag_base_bin_output_target_folder(){ return _flag_base_bin_output_target_folder; }$/;"	function	line:70	language:C++	class:BaseBin	access:public
get_flag_base_bin_start_dir_path	base_bin.hpp	/^    bool get_flag_base_bin_start_dir_path(){ return _flag_base_bin_start_dir_path; }$/;"	function	line:69	language:C++	class:BaseBin	access:public
get_flag_base_dir_path	base_crystal.hpp	/^    bool get_flag_base_dir_path(){ return _flag_base_dir_path; }$/;"	function	line:202	language:C++	class:BaseCrystal	access:public
get_flag_cel_format	base_cell.hpp	/^    bool get_flag_cel_format(){ return _flag_cel_format; }$/;"	function	line:216	language:C++	class:BaseCell	access:public
get_flag_celslc_io_ap_pipe_out	td_map.cpp	/^bool TDMap::get_flag_celslc_io_ap_pipe_out(){$/;"	function	line:585	language:C++	class:TDMap
get_flag_cif_format	base_cell.hpp	/^    bool get_flag_cif_format(){ return _flag_cif_format; }$/;"	function	line:215	language:C++	class:BaseCell	access:public
get_flag_cif_path	base_cell.hpp	/^    bool get_flag_cif_path(){ return _flag_cif_path; }$/;"	function	line:214	language:C++	class:BaseCell	access:public
get_flag_contains_dataset	emd_group.cpp	/^bool EMDGroup::get_flag_contains_dataset( std::string dataset_name ){$/;"	function	line:35	language:C++	class:EMDGroup
get_flag_contains_group	emd_group.cpp	/^bool EMDGroup::get_flag_contains_group( std::string name ){$/;"	function	line:6	language:C++	class:EMDGroup
get_flag_dat_output_target_folder	base_crystal.hpp	/^    bool get_flag_dat_output_target_folder(){ return _flag_dat_output_target_folder; }$/;"	function	line:176	language:C++	class:BaseCrystal	access:public
get_flag_debug_switch	base_bin.hpp	/^    bool get_flag_debug_switch(){ return _flag_debug_switch; }$/;"	function	line:72	language:C++	class:BaseBin	access:public
get_flag_defocus_lower_bound	base_crystal.hpp	/^    bool get_flag_defocus_lower_bound(){ return _flag_defocus_lower_bound;}$/;"	function	line:188	language:C++	class:BaseCrystal	access:public
get_flag_defocus_lower_bound	td_map.cpp	/^bool TDMap::get_flag_defocus_lower_bound(){$/;"	function	line:618	language:C++	class:TDMap
get_flag_defocus_period	base_crystal.hpp	/^    bool get_flag_defocus_period(){ return _flag_defocus_period;}$/;"	function	line:190	language:C++	class:BaseCrystal	access:public
get_flag_defocus_period	td_map.cpp	/^bool TDMap::get_flag_defocus_period(){$/;"	function	line:622	language:C++	class:TDMap
get_flag_defocus_samples	base_crystal.hpp	/^    bool get_flag_defocus_samples(){ return _flag_defocus_samples;}$/;"	function	line:187	language:C++	class:BaseCrystal	access:public
get_flag_defocus_samples	td_map.cpp	/^bool TDMap::get_flag_defocus_samples(){$/;"	function	line:614	language:C++	class:TDMap
get_flag_defocus_upper_bound	base_crystal.hpp	/^    bool get_flag_defocus_upper_bound(){ return _flag_defocus_upper_bound;}$/;"	function	line:189	language:C++	class:BaseCrystal	access:public
get_flag_fp_data_getter_bool	treeitem.cpp	/^bool TreeItem::get_flag_fp_data_getter_bool( ){$/;"	function	line:216	language:C++	class:TreeItem
get_flag_fp_data_setter_bool	treeitem.cpp	/^bool TreeItem::get_flag_fp_data_setter_bool( ){$/;"	function	line:225	language:C++	class:TreeItem
get_flag_full_bin_path_execname	base_bin.hpp	/^    bool get_flag_full_bin_path_execname(){ return _flag_full_bin_path_execname; }$/;"	function	line:71	language:C++	class:BaseBin	access:public
get_flag_full_boundary_polygon	image_bounds.hpp	/^    bool get_flag_full_boundary_polygon(){ return _flag_full_boundary_polygon; }$/;"	function	line:115	language:C++	class:ImageBounds	access:public
get_flag_full_boundary_polygon_w_margin	image_bounds.hpp	/^    bool get_flag_full_boundary_polygon_w_margin(){ return _flag_full_boundary_polygon_w_margin; }$/;"	function	line:116	language:C++	class:ImageBounds	access:public
get_flag_full_image	base_image.hpp	/^    bool get_flag_full_image(){ return _flag_full_image; }$/;"	function	line:108	language:C++	class:BaseImage	access:public
get_flag_full_n_cols_width	base_image.hpp	/^    bool get_flag_full_n_cols_width (){ return _flag_full_n_cols_width; }$/;"	function	line:110	language:C++	class:BaseImage	access:public
get_flag_full_n_rows_height	base_image.hpp	/^    bool get_flag_full_n_rows_height (){ return _flag_full_n_rows_height; }$/;"	function	line:109	language:C++	class:BaseImage	access:public
get_flag_ht_accelaration_voltage	base_crystal.hpp	/^    bool get_flag_ht_accelaration_voltage(){ return _flag_ht_accelaration_voltage; }$/;"	function	line:163	language:C++	class:BaseCrystal	access:public
get_flag_ht_accelaration_voltage	td_map.cpp	/^bool TDMap::get_flag_ht_accelaration_voltage(){$/;"	function	line:626	language:C++	class:TDMap
get_flag_ignore_edge_pixels	base_image.hpp	/^    bool get_flag_ignore_edge_pixels (){ return _flag_ignore_edge_pixels; }$/;"	function	line:123	language:C++	class:BaseImage	access:public
get_flag_ignore_edge_pixels_rectangle	base_image.hpp	/^    bool get_flag_ignore_edge_pixels_rectangle (){ return _flag_ignore_edge_pixels_rectangle; }$/;"	function	line:122	language:C++	class:BaseImage	access:public
get_flag_image_correlation_matching_method	td_map.hpp	/^    bool get_flag_image_correlation_matching_method(){ return _flag_image_correlation_matching_method; }$/;"	function	line:131	language:C++	class:TDMap	access:public
get_flag_io_ap_pipe_out	base_bin.hpp	/^    bool get_flag_io_ap_pipe_out(){ return _flag_io_ap_pipe_out; }$/;"	function	line:68	language:C++	class:BaseBin	access:public
get_flag_logger	base_crystal.hpp	/^    bool get_flag_logger(){ return _flag_logger; }$/;"	function	line:204	language:C++	class:BaseCrystal	access:public
get_flag_logger	base_image.hpp	/^    bool get_flag_logger(){ return _flag_logger; }$/;"	function	line:147	language:C++	class:BaseImage	access:public
get_flag_logger	base_logger.hpp	/^    bool get_flag_logger(){ return _flag_logger; }$/;"	function	line:42	language:C++	class:BaseLogger	access:public
get_flag_logger	celslc_prm.hpp	/^    bool get_flag_logger(){ return _flag_logger; }$/;"	function	line:75	language:C++	class:CELSLC_prm	access:public
get_flag_logger	image_bounds.hpp	/^    bool get_flag_logger(){ return _flag_logger; }$/;"	function	line:149	language:C++	class:ImageBounds	access:public
get_flag_logger	msa_prm.hpp	/^    bool get_flag_logger(){ return _flag_logger; }$/;"	function	line:64	language:C++	class:MSA_prm	access:public
get_flag_logger	simgrid.hpp	/^    bool get_flag_logger(){ return _flag_logger; }$/;"	function	line:147	language:C++	class:SimGrid	access:public
get_flag_logger	wavimg_prm.hpp	/^    bool get_flag_logger(){ return _flag_logger; }$/;"	function	line:130	language:C++	class:WAVIMG_prm	access:public
get_flag_msa_io_ap_pipe_out	td_map.cpp	/^bool TDMap::get_flag_msa_io_ap_pipe_out(){$/;"	function	line:589	language:C++	class:TDMap
get_flag_nm_lower_bound	base_crystal.hpp	/^    bool get_flag_nm_lower_bound(){ return _flag_nm_lower_bound;}$/;"	function	line:181	language:C++	class:BaseCrystal	access:public
get_flag_nm_lower_bound	td_map.cpp	/^bool TDMap::get_flag_nm_lower_bound(){$/;"	function	line:606	language:C++	class:TDMap
get_flag_nm_upper_bound	base_crystal.hpp	/^    bool get_flag_nm_upper_bound(){ return _flag_nm_upper_bound;}$/;"	function	line:182	language:C++	class:BaseCrystal	access:public
get_flag_nz_simulated_partitions	base_crystal.hpp	/^    bool get_flag_nz_simulated_partitions(){ return _flag_nz_simulated_partitions; }$/;"	function	line:154	language:C++	class:BaseCrystal	access:public
get_flag_pixel_size_height	emd_wrapper.h	/^    bool get_flag_pixel_size_height(){ return _flag_BinaryResult_PixelSize_height; }$/;"	function	line:97	language:C++	class:EMDWrapper	access:public
get_flag_pixel_size_width	emd_wrapper.h	/^    bool get_flag_pixel_size_width(){ return BinaryResult_PixelSize_height; }$/;"	function	line:95	language:C++	class:EMDWrapper	access:public
get_flag_prm_filename	msa_prm.cpp	/^bool MSA_prm::get_flag_prm_filename(){$/;"	function	line:262	language:C++	class:MSA_prm
get_flag_prm_filename	wavimg_prm.cpp	/^bool WAVIMG_prm::get_flag_prm_filename(){$/;"	function	line:679	language:C++	class:WAVIMG_prm
get_flag_prm_filename_path	wavimg_prm.cpp	/^bool WAVIMG_prm::get_flag_prm_filename_path(){$/;"	function	line:671	language:C++	class:WAVIMG_prm
get_flag_produced_prm	wavimg_prm.cpp	/^bool WAVIMG_prm::get_flag_produced_prm(){$/;"	function	line:683	language:C++	class:WAVIMG_prm
get_flag_project_dir_path	td_map.hpp	/^    bool get_flag_project_dir_path(){ return _flag_project_dir_path; };$/;"	function	line:130	language:C++	class:TDMap	access:public
get_flag_projected_y_axis	base_crystal.hpp	/^    bool get_flag_projected_y_axis(){ return _flag_projected_y_axis; }$/;"	function	line:158	language:C++	class:BaseCrystal	access:public
get_flag_projected_y_axis_u	base_crystal.hpp	/^    bool get_flag_projected_y_axis_u(){ return _flag_projected_y_axis_u; }$/;"	function	line:155	language:C++	class:BaseCrystal	access:public
get_flag_projected_y_axis_v	base_crystal.hpp	/^    bool get_flag_projected_y_axis_v(){ return _flag_projected_y_axis_v; }$/;"	function	line:156	language:C++	class:BaseCrystal	access:public
get_flag_projected_y_axis_w	base_crystal.hpp	/^    bool get_flag_projected_y_axis_w(){ return _flag_projected_y_axis_w; }$/;"	function	line:157	language:C++	class:BaseCrystal	access:public
get_flag_raw_simulated_images_grid	simgrid.cpp	/^bool SimGrid::get_flag_raw_simulated_images_grid(){$/;"	function	line:77	language:C++	class:SimGrid
get_flag_raw_simulated_images_grid	td_map.cpp	/^bool TDMap::get_flag_raw_simulated_images_grid(){$/;"	function	line:639	language:C++	class:TDMap
get_flag_refinement_definition_method	td_map.hpp	/^    bool get_flag_refinement_definition_method(){ return _flag_refinement_definition_method; }$/;"	function	line:132	language:C++	class:TDMap	access:public
get_flag_roi_boundary_image	image_bounds.hpp	/^    bool get_flag_roi_boundary_image(){ return _flag_roi_boundary_image; }$/;"	function	line:119	language:C++	class:ImageBounds	access:public
get_flag_roi_boundary_image_w_margin	image_bounds.hpp	/^    bool get_flag_roi_boundary_image_w_margin(){ return _flag_roi_boundary_image_w_margin; }$/;"	function	line:122	language:C++	class:ImageBounds	access:public
get_flag_roi_boundary_polygon	image_bounds.hpp	/^    bool get_flag_roi_boundary_polygon(){ return _flag_roi_boundary_polygon; }$/;"	function	line:117	language:C++	class:ImageBounds	access:public
get_flag_roi_boundary_polygon_w_margin	image_bounds.hpp	/^    bool get_flag_roi_boundary_polygon_w_margin(){ return _flag_roi_boundary_polygon_w_margin; }$/;"	function	line:120	language:C++	class:ImageBounds	access:public
get_flag_roi_boundary_rect	image_bounds.hpp	/^    bool get_flag_roi_boundary_rect(){ return _flag_roi_boundary_rect; }$/;"	function	line:118	language:C++	class:ImageBounds	access:public
get_flag_roi_boundary_rect_w_margin	image_bounds.hpp	/^    bool get_flag_roi_boundary_rect_w_margin(){ return _flag_roi_boundary_rect_w_margin; }$/;"	function	line:121	language:C++	class:ImageBounds	access:public
get_flag_roi_center_x	base_image.hpp	/^    bool get_flag_roi_center_x (){ return _flag_roi_center_x; }$/;"	function	line:120	language:C++	class:BaseImage	access:public
get_flag_roi_center_y	base_image.hpp	/^    bool get_flag_roi_center_y (){ return _flag_roi_center_y; }$/;"	function	line:121	language:C++	class:BaseImage	access:public
get_flag_roi_image	base_image.hpp	/^    bool get_flag_roi_image(){ return _flag_roi_image; }$/;"	function	line:116	language:C++	class:BaseImage	access:public
get_flag_roi_n_cols_width	base_image.hpp	/^    bool get_flag_roi_n_cols_width (){ return _flag_roi_n_cols_width; }$/;"	function	line:119	language:C++	class:BaseImage	access:public
get_flag_roi_n_rows_height	base_image.hpp	/^    bool get_flag_roi_n_rows_height (){ return _flag_roi_n_rows_height; }$/;"	function	line:118	language:C++	class:BaseImage	access:public
get_flag_roi_rectangle	base_image.hpp	/^    bool get_flag_roi_rectangle (){ return _flag_roi_rectangle; }$/;"	function	line:117	language:C++	class:BaseImage	access:public
get_flag_runned_bin	base_bin.hpp	/^    bool get_flag_runned_bin(){ return _flag_runned_bin; }$/;"	function	line:73	language:C++	class:BaseBin	access:public
get_flag_sampling_rate	base_image.hpp	/^    bool get_flag_sampling_rate(){ return _flag_sampling_rate; }$/;"	function	line:113	language:C++	class:BaseImage	access:public
get_flag_sampling_rate_x_nm_per_pixel	base_image.hpp	/^    bool get_flag_sampling_rate_x_nm_per_pixel(){ return _flag_sampling_rate_x_nm_per_pixel; }$/;"	function	line:111	language:C++	class:BaseImage	access:public
get_flag_sampling_rate_y_nm_per_pixel	base_image.hpp	/^    bool get_flag_sampling_rate_y_nm_per_pixel(){ return _flag_sampling_rate_y_nm_per_pixel; }$/;"	function	line:112	language:C++	class:BaseImage	access:public
get_flag_simgrid_best_match_position	simgrid.hpp	/^    bool get_flag_simgrid_best_match_position(){ return _flag_best_match_Point2i; }$/;"	function	line:153	language:C++	class:SimGrid	access:public
get_flag_simgrid_best_match_position	td_map.cpp	/^bool TDMap::get_flag_simgrid_best_match_position(){$/;"	function	line:519	language:C++	class:TDMap
get_flag_simgrid_io_ap_pipe_out	td_map.cpp	/^bool TDMap::get_flag_simgrid_io_ap_pipe_out(){$/;"	function	line:597	language:C++	class:TDMap
get_flag_simulated_images_grid	simgrid.cpp	/^bool SimGrid::get_flag_simulated_images_grid(){$/;"	function	line:81	language:C++	class:SimGrid
get_flag_simulated_images_grid	td_map.cpp	/^bool TDMap::get_flag_simulated_images_grid(){$/;"	function	line:523	language:C++	class:TDMap
get_flag_simulated_images_horizontal_header_defocus_nm	td_map.cpp	/^bool TDMap::get_flag_simulated_images_horizontal_header_defocus_nm(){$/;"	function	line:515	language:C++	class:TDMap
get_flag_simulated_images_vertical_header_slice_nm	td_map.cpp	/^bool TDMap::get_flag_simulated_images_vertical_header_slice_nm(){$/;"	function	line:511	language:C++	class:TDMap
get_flag_simulated_params_nm_defocus_vec	base_crystal.hpp	/^    bool get_flag_simulated_params_nm_defocus_vec(){ return _flag_simulated_params_nm_defocus_vec; }$/;"	function	line:199	language:C++	class:BaseCrystal	access:public
get_flag_simulated_params_nm_slice_vec	base_crystal.hpp	/^    bool get_flag_simulated_params_nm_slice_vec(){ return _flag_simulated_params_nm_slice_vec; }$/;"	function	line:197	language:C++	class:BaseCrystal	access:public
get_flag_simulated_params_slice_vec	base_crystal.hpp	/^    bool get_flag_simulated_params_slice_vec(){ return _flag_simulated_params_slice_vec; }$/;"	function	line:195	language:C++	class:BaseCrystal	access:public
get_flag_slc_output_target_folder	base_crystal.hpp	/^    bool get_flag_slc_output_target_folder(){ return _flag_slc_output_target_folder; }$/;"	function	line:174	language:C++	class:BaseCrystal	access:public
get_flag_slice_params_accum_nm_slice_vec	base_crystal.hpp	/^    bool get_flag_slice_params_accum_nm_slice_vec(){ return _flag_slice_params_accum_nm_slice_vec; };$/;"	function	line:171	language:C++	class:BaseCrystal	access:public
get_flag_slice_params_accum_nm_slice_vec	td_map.cpp	/^bool TDMap::get_flag_slice_params_accum_nm_slice_vec(){$/;"	function	line:635	language:C++	class:TDMap
get_flag_slice_params_nm_slice	base_crystal.hpp	/^    bool get_flag_slice_params_nm_slice(){ return _flag_slice_params_nm_slice; };$/;"	function	line:172	language:C++	class:BaseCrystal	access:public
get_flag_slice_params_nm_slice_vec	base_crystal.hpp	/^    bool get_flag_slice_params_nm_slice_vec(){ return _flag_slice_params_nm_slice_vec; };$/;"	function	line:170	language:C++	class:BaseCrystal	access:public
get_flag_slice_period	base_crystal.hpp	/^    bool get_flag_slice_period(){ return _flag_slice_period;}$/;"	function	line:183	language:C++	class:BaseCrystal	access:public
get_flag_slice_period	td_map.cpp	/^bool TDMap::get_flag_slice_period(){$/;"	function	line:610	language:C++	class:TDMap
get_flag_slice_samples	base_crystal.hpp	/^    bool get_flag_slice_samples(){ return _flag_slice_samples;}$/;"	function	line:180	language:C++	class:BaseCrystal	access:public
get_flag_slice_samples	td_map.cpp	/^bool TDMap::get_flag_slice_samples(){$/;"	function	line:602	language:C++	class:TDMap
get_flag_super_cell_size	base_crystal.hpp	/^    bool get_flag_super_cell_size(){ return _flag_super_cell_size; };$/;"	function	line:168	language:C++	class:BaseCrystal	access:public
get_flag_super_cell_size_a	base_crystal.hpp	/^    bool get_flag_super_cell_size_a(){ return _flag_super_cell_size_a; };$/;"	function	line:165	language:C++	class:BaseCrystal	access:public
get_flag_super_cell_size_b	base_crystal.hpp	/^    bool get_flag_super_cell_size_b(){ return _flag_super_cell_size_b; };$/;"	function	line:166	language:C++	class:BaseCrystal	access:public
get_flag_super_cell_size_c	base_crystal.hpp	/^    bool get_flag_super_cell_size_c(){ return _flag_super_cell_size_c; };$/;"	function	line:167	language:C++	class:BaseCrystal	access:public
get_flag_unit_cell_cif_path	base_crystal.hpp	/^    bool get_flag_unit_cell_cif_path(){ return unit_cell->get_flag_cif_path(); }$/;"	function	line:153	language:C++	class:BaseCrystal	access:public
get_flag_validatable_double	treeitem.cpp	/^bool TreeItem::get_flag_validatable_double(int col_pos ){$/;"	function	line:738	language:C++	class:TreeItem
get_flag_validatable_double_bottom	treeitem.cpp	/^bool TreeItem::get_flag_validatable_double_bottom(int col_pos ){$/;"	function	line:766	language:C++	class:TreeItem
get_flag_validatable_double_top	treeitem.cpp	/^bool TreeItem::get_flag_validatable_double_top(int col_pos ){$/;"	function	line:757	language:C++	class:TreeItem
get_flag_validatable_int	treeitem.cpp	/^bool TreeItem::get_flag_validatable_int(int col_pos ){$/;"	function	line:650	language:C++	class:TreeItem
get_flag_validatable_int_bottom	treeitem.cpp	/^bool TreeItem::get_flag_validatable_int_bottom(int col_pos ){$/;"	function	line:678	language:C++	class:TreeItem
get_flag_validatable_int_top	treeitem.cpp	/^bool TreeItem::get_flag_validatable_int_top(int col_pos ){$/;"	function	line:669	language:C++	class:TreeItem
get_flag_wav_output_target_folder	base_crystal.hpp	/^    bool get_flag_wav_output_target_folder(){ return _flag_wav_output_target_folder; }$/;"	function	line:175	language:C++	class:BaseCrystal	access:public
get_flag_wavimg_io_ap_pipe_out	td_map.cpp	/^bool TDMap::get_flag_wavimg_io_ap_pipe_out(){$/;"	function	line:593	language:C++	class:TDMap
get_flag_zone_axis	base_crystal.hpp	/^    bool get_flag_zone_axis(){ return _flag_zone_axis; }$/;"	function	line:162	language:C++	class:BaseCrystal	access:public
get_flag_zone_axis_u	base_crystal.hpp	/^    bool get_flag_zone_axis_u(){ return _flag_zone_axis_u; }$/;"	function	line:159	language:C++	class:BaseCrystal	access:public
get_flag_zone_axis_v	base_crystal.hpp	/^    bool get_flag_zone_axis_v(){ return _flag_zone_axis_v; }$/;"	function	line:160	language:C++	class:BaseCrystal	access:public
get_flag_zone_axis_w	base_crystal.hpp	/^    bool get_flag_zone_axis_w(){ return _flag_zone_axis_w; }$/;"	function	line:161	language:C++	class:BaseCrystal	access:public
get_fractional_norm_a_atom_pos_Nanometers	base_cell.hpp	/^    double get_fractional_norm_a_atom_pos_Nanometers(){ return fractional_norm_a_atom_pos; }$/;"	function	line:268	language:C++	class:BaseCell	access:public
get_fractional_norm_b_atom_pos_Nanometers	base_cell.hpp	/^    double get_fractional_norm_b_atom_pos_Nanometers(){ return fractional_norm_b_atom_pos; }$/;"	function	line:269	language:C++	class:BaseCell	access:public
get_fractional_norm_c_atom_pos_Nanometers	base_cell.hpp	/^    double get_fractional_norm_c_atom_pos_Nanometers(){ return fractional_norm_c_atom_pos; }$/;"	function	line:270	language:C++	class:BaseCell	access:public
get_full_bin_path_execname	base_bin.hpp	/^    boost::filesystem::path get_full_bin_path_execname(){ return full_bin_path_execname; }$/;"	function	line:80	language:C++	class:BaseBin	access:public
get_full_boundary_polygon	image_bounds.hpp	/^    std::vector<cv::Point2i> get_full_boundary_polygon(){ return full_boundary_polygon; }$/;"	function	line:133	language:C++	class:ImageBounds	access:public
get_full_boundary_polygon_margin_nm	td_map.cpp	/^double TDMap::get_full_boundary_polygon_margin_nm(){$/;"	function	line:1421	language:C++	class:TDMap
get_full_boundary_polygon_margin_nm_bottom_limit	td_map.cpp	/^double TDMap::get_full_boundary_polygon_margin_nm_bottom_limit(){$/;"	function	line:1567	language:C++	class:TDMap
get_full_boundary_polygon_margin_nm_top_limit	td_map.cpp	/^double TDMap::get_full_boundary_polygon_margin_nm_top_limit(){$/;"	function	line:1571	language:C++	class:TDMap
get_full_boundary_polygon_margin_x_nm	image_bounds.hpp	/^    double get_full_boundary_polygon_margin_x_nm(){ return full_boundary_polygon_margin_x_nm; }$/;"	function	line:142	language:C++	class:ImageBounds	access:public
get_full_boundary_polygon_margin_x_px	image_bounds.hpp	/^    int get_full_boundary_polygon_margin_x_px(){ return full_boundary_polygon_margin_x_px; }$/;"	function	line:143	language:C++	class:ImageBounds	access:public
get_full_boundary_polygon_margin_y_nm	image_bounds.hpp	/^    double get_full_boundary_polygon_margin_y_nm(){ return full_boundary_polygon_margin_y_nm; }$/;"	function	line:144	language:C++	class:ImageBounds	access:public
get_full_boundary_polygon_margin_y_px	image_bounds.hpp	/^    int get_full_boundary_polygon_margin_y_px(){ return full_boundary_polygon_margin_y_px; }$/;"	function	line:145	language:C++	class:ImageBounds	access:public
get_full_boundary_polygon_w_margin	image_bounds.hpp	/^    std::vector<cv::Point2i> get_full_boundary_polygon_w_margin(){ return full_boundary_polygon_w_margin; }$/;"	function	line:134	language:C++	class:ImageBounds	access:public
get_full_experimental_image_mat	deprecated/image_crystal.cpp	/^cv::Mat Image_Crystal::get_full_experimental_image_mat(){$/;"	function	line:45	language:C++	class:Image_Crystal
get_full_image	base_image.hpp	/^    cv::Mat get_full_image(){ return full_image.clone(); }$/;"	function	line:126	language:C++	class:BaseImage	access:public
get_full_image	emd_wrapper.cpp	/^cv::Mat EMDWrapper::get_full_image(){$/;"	function	line:70	language:C++	class:EMDWrapper
get_full_n_cols_width	base_image.hpp	/^    int get_full_n_cols_width(){ return full_n_cols_width; }$/;"	function	line:129	language:C++	class:BaseImage	access:public
get_full_n_cols_width	emd_wrapper.cpp	/^int EMDWrapper::get_full_n_cols_width(){$/;"	function	line:79	language:C++	class:EMDWrapper
get_full_n_cols_width_nm	base_image.hpp	/^    double get_full_n_cols_width_nm(){ return full_n_cols_width_nm; }$/;"	function	line:130	language:C++	class:BaseImage	access:public
get_full_n_rows_height	base_image.hpp	/^    int get_full_n_rows_height(){ return full_n_rows_height; }$/;"	function	line:127	language:C++	class:BaseImage	access:public
get_full_n_rows_height	emd_wrapper.cpp	/^int EMDWrapper::get_full_n_rows_height(){$/;"	function	line:75	language:C++	class:EMDWrapper
get_full_n_rows_height_nm	base_image.hpp	/^    double get_full_n_rows_height_nm(){ return full_n_rows_height_nm; }$/;"	function	line:128	language:C++	class:BaseImage	access:public
get_group	emd_group.cpp	/^EMDGroup* EMDGroup::get_group( std::string name ){$/;"	function	line:16	language:C++	class:EMDGroup
get_group_name	group_options.cpp	/^std::string group_options::get_group_name(){$/;"	function	line:85	language:C++	class:group_options
get_group_vars_error_list	group_options.cpp	/^std::vector<std::string> group_options::get_group_vars_error_list(){$/;"	function	line:133	language:C++	class:group_options
get_ht_accelaration_voltage	base_crystal.hpp	/^    double get_ht_accelaration_voltage(){ return ht_accelaration_voltage; }$/;"	function	line:218	language:C++	class:BaseCrystal	access:public
get_hysteresis_threshold	image_bounds.hpp	/^    int get_hysteresis_threshold(){ return hysteresis_threshold; }$/;"	function	line:125	language:C++	class:ImageBounds	access:public
get_hysteresis_threshold_range_bottom_limit	image_bounds.hpp	/^    int get_hysteresis_threshold_range_bottom_limit(){ return hysteresis_threshold_range_bottom_limit; }$/;"	function	line:128	language:C++	class:ImageBounds	access:public
get_hysteresis_threshold_range_top_limit	image_bounds.hpp	/^    int get_hysteresis_threshold_range_top_limit(){ return hysteresis_threshold_range_top_limit; }$/;"	function	line:129	language:C++	class:ImageBounds	access:public
get_ignore_edge_pixels	base_image.hpp	/^    int get_ignore_edge_pixels(){ return ignore_edge_pixels; }$/;"	function	line:143	language:C++	class:BaseImage	access:public
get_ignore_edge_pixels_rectangle	base_image.hpp	/^    cv::Rect get_ignore_edge_pixels_rectangle(){ return ignore_edge_pixels_rectangle; }$/;"	function	line:142	language:C++	class:BaseImage	access:public
get_image_correlation_matching_method	simgrid.cpp	/^int SimGrid::get_image_correlation_matching_method(){$/;"	function	line:669	language:C++	class:SimGrid
get_image_correlation_matching_method	td_map.hpp	/^    int get_image_correlation_matching_method(){ return image_correlation_matching_method ; }$/;"	function	line:135	language:C++	class:TDMap	access:public
get_inverse_orientation_matrix	base_cell.hpp	/^    cv::Mat get_inverse_orientation_matrix(){ return inverse_orientation_matrix; }$/;"	function	line:239	language:C++	class:BaseCell	access:public
get_item_delegate_type	treeitem.cpp	/^TreeItem::DelegateType TreeItem::get_item_delegate_type(){$/;"	function	line:624	language:C++	class:TreeItem
get_legend	treeitem.cpp	/^QVariant TreeItem::get_legend(int column) const{$/;"	function	line:407	language:C++	class:TreeItem
get_length_a_Angstroms	base_cell.hpp	/^    double get_length_a_Angstroms(){ return length_a_Angstroms; }$/;"	function	line:261	language:C++	class:BaseCell	access:public
get_length_a_Nanometers	base_cell.hpp	/^    double get_length_a_Nanometers(){ return length_a_Nanometers; }$/;"	function	line:264	language:C++	class:BaseCell	access:public
get_length_b_Angstroms	base_cell.hpp	/^    double get_length_b_Angstroms(){ return length_b_Angstroms; }$/;"	function	line:262	language:C++	class:BaseCell	access:public
get_length_b_Nanometers	base_cell.hpp	/^    double get_length_b_Nanometers(){ return length_b_Nanometers; }$/;"	function	line:265	language:C++	class:BaseCell	access:public
get_length_c_Angstroms	base_cell.hpp	/^    double get_length_c_Angstroms(){ return length_c_Angstroms; }$/;"	function	line:263	language:C++	class:BaseCell	access:public
get_length_c_Nanometers	base_cell.hpp	/^    double get_length_c_Nanometers(){ return length_c_Nanometers; }$/;"	function	line:266	language:C++	class:BaseCell	access:public
get_logger	base_bin.hpp	/^    ApplicationLog::ApplicationLog* get_logger(){ return logger; }$/;"	function	line:85	language:C++	class:BaseBin	access:public
get_logger	base_crystal.hpp	/^    ApplicationLog::ApplicationLog* get_logger(){ return logger; }$/;"	function	line:254	language:C++	class:BaseCrystal	access:public
get_logger	base_image.hpp	/^    ApplicationLog::ApplicationLog* get_logger(){ return logger; }$/;"	function	line:149	language:C++	class:BaseImage	access:public
get_logger	base_logger.hpp	/^    ApplicationLog::ApplicationLog* get_logger(){ return logger; }$/;"	function	line:45	language:C++	class:BaseLogger	access:public
get_logger	celslc_prm.hpp	/^    ApplicationLog::ApplicationLog* get_logger(){ return logger; }$/;"	function	line:77	language:C++	class:CELSLC_prm	access:public
get_logger	image_bounds.hpp	/^    ApplicationLog::ApplicationLog* get_logger(){ return logger; }$/;"	function	line:151	language:C++	class:ImageBounds	access:public
get_logger	msa_prm.hpp	/^    ApplicationLog::ApplicationLog* get_logger(){ return logger; }$/;"	function	line:66	language:C++	class:MSA_prm	access:public
get_logger	simgrid.hpp	/^    ApplicationLog::ApplicationLog* get_logger(){ return logger; }$/;"	function	line:149	language:C++	class:SimGrid	access:public
get_logger	wavimg_prm.hpp	/^    ApplicationLog::ApplicationLog* get_logger(){ return logger; }$/;"	function	line:132	language:C++	class:WAVIMG_prm	access:public
get_match_values_matrix	simgrid.cpp	/^cv::Mat SimGrid::get_match_values_matrix(){$/;"	function	line:661	language:C++	class:SimGrid
get_max_contour_distance_px	image_bounds.hpp	/^    int get_max_contour_distance_px(){ return max_contour_distance_px; }$/;"	function	line:126	language:C++	class:ImageBounds	access:public
get_max_contour_distance_px_range_bottom_limit	image_bounds.hpp	/^    int get_max_contour_distance_px_range_bottom_limit(){ return max_contour_distance_px_range_bottom_limit; }$/;"	function	line:130	language:C++	class:ImageBounds	access:public
get_max_contour_distance_px_range_top_limit	image_bounds.hpp	/^    int get_max_contour_distance_px_range_top_limit(){ return max_contour_distance_px_range_top_limit; }$/;"	function	line:131	language:C++	class:ImageBounds	access:public
get_msa_parameters	simulation_step.cpp	/^MSA_prm* Simulation_Step::get_msa_parameters(){$/;"	function	line:44	language:C++	class:Simulation_Step
get_mtf_simulation_switch	wavimg_prm.cpp	/^bool WAVIMG_prm::get_mtf_simulation_switch(){$/;"	function	line:675	language:C++	class:WAVIMG_prm
get_mtf_switch	td_map.cpp	/^bool TDMap::get_mtf_switch( ){$/;"	function	line:579	language:C++	class:TDMap
get_name	emd_object.h	/^    std::string get_name(){ return name; }$/;"	function	line:50	language:C++	class:EMDObject	access:public
get_nm_lower_bound	base_crystal.hpp	/^    double get_nm_lower_bound(){ return nm_lower_bound; }$/;"	function	line:237	language:C++	class:BaseCrystal	access:public
get_nm_lower_bound_bottom_limit	td_map.cpp	/^double TDMap::get_nm_lower_bound_bottom_limit(){$/;"	function	line:1478	language:C++	class:TDMap
get_nm_lower_bound_top_limit	td_map.cpp	/^double TDMap::get_nm_lower_bound_top_limit(){$/;"	function	line:1482	language:C++	class:TDMap
get_nm_upper_bound	base_crystal.hpp	/^    double get_nm_upper_bound(){ return nm_upper_bound; }$/;"	function	line:238	language:C++	class:BaseCrystal	access:public
get_nm_upper_bound_bottom_limit	td_map.cpp	/^double TDMap::get_nm_upper_bound_bottom_limit(){$/;"	function	line:1491	language:C++	class:TDMap
get_nm_upper_bound_top_limit	td_map.cpp	/^double TDMap::get_nm_upper_bound_top_limit(){$/;"	function	line:1500	language:C++	class:TDMap
get_number_slices_to_max_thickness	base_crystal.hpp	/^    int get_number_slices_to_max_thickness(){ return nz_simulated_partitions; }$/;"	function	line:243	language:C++	class:BaseCrystal	access:public
get_nx_px	base_cell.hpp	/^    int get_nx_px(){ return cel_nx_px; }$/;"	function	line:278	language:C++	class:BaseCell	access:public
get_ny_px	base_cell.hpp	/^    int get_ny_px(){ return cel_ny_px; }$/;"	function	line:279	language:C++	class:BaseCell	access:public
get_nz_simulated_partitions	base_crystal.hpp	/^    int get_nz_simulated_partitions(){ return nz_simulated_partitions; }$/;"	function	line:208	language:C++	class:BaseCrystal	access:public
get_nz_switch	base_crystal.hpp	/^    bool get_nz_switch(){ return nz_switch; }$/;"	function	line:209	language:C++	class:BaseCrystal	access:public
get_orientation_matrix	base_cell.hpp	/^    cv::Mat get_orientation_matrix(){ return orientation_matrix; }$/;"	function	line:238	language:C++	class:BaseCell	access:public
get_pixel_size_height	emd_wrapper.h	/^    int get_pixel_size_height(){ return BinaryResult_PixelSize_height; }$/;"	function	line:98	language:C++	class:EMDWrapper	access:public
get_pixel_size_width	emd_wrapper.h	/^    double get_pixel_size_width(){ return _flag_BinaryResult_PixelSize_height; }$/;"	function	line:96	language:C++	class:EMDWrapper	access:public
get_project_dir_path	td_map.hpp	/^    boost::filesystem::path get_project_dir_path(){ return project_dir_path; }$/;"	function	line:202	language:C++	class:TDMap	access:public
get_project_filename_with_path	td_map.cpp	/^std::string TDMap::get_project_filename_with_path(){$/;"	function	line:1403	language:C++	class:TDMap
get_projected_y_axis	base_crystal.hpp	/^    cv::Point3d  get_projected_y_axis(){ return projected_y_axis; }$/;"	function	line:210	language:C++	class:BaseCrystal	access:public
get_projected_y_axis_u	base_crystal.hpp	/^    double get_projected_y_axis_u(){ return projected_y_axis_u; }$/;"	function	line:211	language:C++	class:BaseCrystal	access:public
get_projected_y_axis_v	base_crystal.hpp	/^    double get_projected_y_axis_v(){ return projected_y_axis_v; }$/;"	function	line:212	language:C++	class:BaseCrystal	access:public
get_projected_y_axis_w	base_crystal.hpp	/^    double get_projected_y_axis_w(){ return projected_y_axis_w; }$/;"	function	line:213	language:C++	class:BaseCrystal	access:public
get_raw_data	emd_dataset.cpp	/^const std::vector<unsigned char>& EMDDataSet::get_raw_data() const {$/;"	function	line:7	language:C++	class:EMDDataSet
get_refinement_definition_method	td_map.hpp	/^    int get_refinement_definition_method(){ return _refinement_definition_method; }$/;"	function	line:136	language:C++	class:TDMap	access:public
get_roi_boundary_image	image_bounds.hpp	/^    cv::Mat get_roi_boundary_image(){ return roi_boundary_image; }$/;"	function	line:138	language:C++	class:ImageBounds	access:public
get_roi_boundary_image_w_margin	image_bounds.hpp	/^    cv::Mat get_roi_boundary_image_w_margin(){ return roi_boundary_image_w_margin; }$/;"	function	line:141	language:C++	class:ImageBounds	access:public
get_roi_boundary_polygon	image_bounds.hpp	/^    std::vector<cv::Point2i> get_roi_boundary_polygon(){ return roi_boundary_polygon; }$/;"	function	line:136	language:C++	class:ImageBounds	access:public
get_roi_boundary_polygon_w_margin	image_bounds.hpp	/^    std::vector<cv::Point2i> get_roi_boundary_polygon_w_margin(){ return roi_boundary_polygon_w_margin; }$/;"	function	line:139	language:C++	class:ImageBounds	access:public
get_roi_boundary_rect	image_bounds.hpp	/^    cv::Rect get_roi_boundary_rect(){ return roi_boundary_rect; }$/;"	function	line:137	language:C++	class:ImageBounds	access:public
get_roi_boundary_rect_w_margin	image_bounds.hpp	/^    cv::Rect get_roi_boundary_rect_w_margin(){ return roi_boundary_rect_w_margin; }$/;"	function	line:140	language:C++	class:ImageBounds	access:public
get_roi_center	deprecated/image_crystal.cpp	/^cv::Point2i Image_Crystal::get_roi_center(){$/;"	function	line:40	language:C++	class:Image_Crystal
get_roi_center_x	base_image.hpp	/^    int get_roi_center_x(){ return roi_center_x; }$/;"	function	line:139	language:C++	class:BaseImage	access:public
get_roi_center_y	base_image.hpp	/^    int get_roi_center_y(){ return roi_center_y; }$/;"	function	line:140	language:C++	class:BaseImage	access:public
get_roi_experimental_image_mat	deprecated/image_crystal.cpp	/^cv::Mat Image_Crystal::get_roi_experimental_image_mat(){$/;"	function	line:49	language:C++	class:Image_Crystal
get_roi_image	base_image.hpp	/^    cv::Mat get_roi_image(){ return roi_image.clone(); }$/;"	function	line:133	language:C++	class:BaseImage	access:public
get_roi_n_cols_width	base_image.hpp	/^    int get_roi_n_cols_width(){ return roi_n_cols_width; }$/;"	function	line:137	language:C++	class:BaseImage	access:public
get_roi_n_cols_width_nm	base_image.hpp	/^    double get_roi_n_cols_width_nm(){ return roi_nm_size_cols_b; }$/;"	function	line:138	language:C++	class:BaseImage	access:public
get_roi_n_rows_height	base_image.hpp	/^    int get_roi_n_rows_height(){ return roi_n_rows_height; }$/;"	function	line:135	language:C++	class:BaseImage	access:public
get_roi_n_rows_height_nm	base_image.hpp	/^    double get_roi_n_rows_height_nm(){ return roi_nm_size_rows_a; }$/;"	function	line:136	language:C++	class:BaseImage	access:public
get_roi_rectangle	base_image.hpp	/^    cv::Rect get_roi_rectangle(){ return roi_rectangle; }$/;"	function	line:134	language:C++	class:BaseImage	access:public
get_roi_rectangle	deprecated/image_crystal.cpp	/^cv::Rect Image_Crystal::get_roi_rectangle(){$/;"	function	line:53	language:C++	class:Image_Crystal
get_run_celslc_exec_log_level	td_map.hpp	/^    int get_run_celslc_exec_log_level(){ return _run_celslc_exec_log_level; }$/;"	function	line:138	language:C++	class:TDMap	access:public
get_run_celslc_switch	td_map.hpp	/^    bool get_run_celslc_switch(){ return _run_celslc_switch; }$/;"	function	line:137	language:C++	class:TDMap	access:public
get_run_env_warnings	base_bin.hpp	/^    std::vector<std::string> get_run_env_warnings(){ return run_env_warnings; }$/;"	function	line:82	language:C++	class:BaseBin	access:public
get_run_msa_exec_log_level	td_map.hpp	/^    int get_run_msa_exec_log_level(){ return _run_msa_exec_log_level; }$/;"	function	line:140	language:C++	class:TDMap	access:public
get_run_msa_switch	td_map.hpp	/^    bool get_run_msa_switch(){ return _run_msa_switch; }$/;"	function	line:139	language:C++	class:TDMap	access:public
get_run_simgrid_switch	td_map.hpp	/^    bool get_run_simgrid_switch(){ return _run_simgrid_switch; }$/;"	function	line:143	language:C++	class:TDMap	access:public
get_run_wavimg_exec_log_level	td_map.hpp	/^    int get_run_wavimg_exec_log_level(){ return _run_wavimg_exec_log_level; }$/;"	function	line:142	language:C++	class:TDMap	access:public
get_run_wavimg_switch	td_map.hpp	/^    bool get_run_wavimg_switch(){ return _run_wavimg_switch; }$/;"	function	line:141	language:C++	class:TDMap	access:public
get_runned_time	group_options.cpp	/^time_t group_options::get_runned_time(){$/;"	function	line:145	language:C++	class:group_options
get_sampling_rate_x_nm_per_pixel	base_image.hpp	/^    double get_sampling_rate_x_nm_per_pixel(){ return sampling_rate_x_nm_per_pixel; }$/;"	function	line:131	language:C++	class:BaseImage	access:public
get_sampling_rate_y_nm_per_pixel	base_image.hpp	/^    double get_sampling_rate_y_nm_per_pixel(){ return sampling_rate_y_nm_per_pixel; }$/;"	function	line:132	language:C++	class:BaseImage	access:public
get_sim_image_properties_flag_full_n_cols_width	simgrid.cpp	/^bool SimGrid::get_sim_image_properties_flag_full_n_cols_width(){$/;"	function	line:169	language:C++	class:SimGrid
get_sim_image_properties_flag_full_n_rows_height	simgrid.cpp	/^bool SimGrid::get_sim_image_properties_flag_full_n_rows_height(){$/;"	function	line:177	language:C++	class:SimGrid
get_sim_image_properties_full_n_cols_width	simgrid.cpp	/^int SimGrid::get_sim_image_properties_full_n_cols_width(){$/;"	function	line:165	language:C++	class:SimGrid
get_sim_image_properties_full_n_rows_height	simgrid.cpp	/^int SimGrid::get_sim_image_properties_full_n_rows_height(){$/;"	function	line:173	language:C++	class:SimGrid
get_simgrid_best_match_defocus_nm	simgrid.cpp	/^double SimGrid::get_simgrid_best_match_defocus_nm(){$/;"	function	line:624	language:C++	class:SimGrid
get_simgrid_best_match_position	td_map.cpp	/^cv::Point2i TDMap::get_simgrid_best_match_position(){$/;"	function	line:546	language:C++	class:TDMap
get_simgrid_best_match_thickness_nm	simgrid.cpp	/^double SimGrid::get_simgrid_best_match_thickness_nm(){$/;"	function	line:620	language:C++	class:SimGrid
get_simgrid_best_match_thickness_slice	simgrid.cpp	/^int SimGrid::get_simgrid_best_match_thickness_slice(){$/;"	function	line:616	language:C++	class:SimGrid
get_simulated_image_defocus_in_grid	simgrid.cpp	/^double SimGrid::get_simulated_image_defocus_in_grid( int row_thickness, int col_defocus ){$/;"	function	line:657	language:C++	class:SimGrid
get_simulated_image_defocus_in_grid	td_map.cpp	/^double TDMap::get_simulated_image_defocus_in_grid( int x, int y ){$/;"	function	line:566	language:C++	class:TDMap
get_simulated_image_in_grid	simgrid.cpp	/^cv::Mat SimGrid::get_simulated_image_in_grid( int row_thickness, int col_defocus ){$/;"	function	line:639	language:C++	class:SimGrid
get_simulated_image_in_grid	td_map.cpp	/^cv::Mat TDMap::get_simulated_image_in_grid( int x, int y ){$/;"	function	line:550	language:C++	class:TDMap
get_simulated_image_match_in_grid	simgrid.cpp	/^double SimGrid::get_simulated_image_match_in_grid( int row_thickness, int col_defocus ){$/;"	function	line:645	language:C++	class:SimGrid
get_simulated_image_match_in_grid	td_map.cpp	/^double TDMap::get_simulated_image_match_in_grid( int x, int y ){$/;"	function	line:554	language:C++	class:TDMap
get_simulated_image_thickness_nm_in_grid	simgrid.cpp	/^double SimGrid::get_simulated_image_thickness_nm_in_grid( int row_thickness, int col_defocus ){$/;"	function	line:653	language:C++	class:SimGrid
get_simulated_image_thickness_nm_in_grid	td_map.cpp	/^double TDMap::get_simulated_image_thickness_nm_in_grid( int x, int y ){$/;"	function	line:562	language:C++	class:TDMap
get_simulated_image_thickness_slice_in_grid	simgrid.cpp	/^int SimGrid::get_simulated_image_thickness_slice_in_grid( int row_thickness, int col_defocus ){$/;"	function	line:649	language:C++	class:SimGrid
get_simulated_image_thickness_slice_in_grid	td_map.cpp	/^int TDMap::get_simulated_image_thickness_slice_in_grid( int x, int y ){$/;"	function	line:558	language:C++	class:TDMap
get_simulated_images_grid	simgrid.cpp	/^std::vector< std::vector<cv::Mat> > SimGrid::get_simulated_images_grid(){$/;"	function	line:635	language:C++	class:SimGrid
get_simulated_images_grid	td_map.cpp	/^std::vector< std::vector<cv::Mat> > TDMap::get_simulated_images_grid(){$/;"	function	line:537	language:C++	class:TDMap
get_simulated_images_horizontal_header_defocus_nm	td_map.cpp	/^std::vector< double > TDMap::get_simulated_images_horizontal_header_defocus_nm(){$/;"	function	line:532	language:C++	class:TDMap
get_simulated_images_vertical_header_slice_nm	td_map.cpp	/^std::vector< double > TDMap::get_simulated_images_vertical_header_slice_nm(){$/;"	function	line:528	language:C++	class:TDMap
get_simulated_params_nm_defocus_vec	base_crystal.hpp	/^    std::vector<double> get_simulated_params_nm_defocus_vec(){ return simulated_params_nm_defocus_vec; }$/;"	function	line:198	language:C++	class:BaseCrystal	access:public
get_simulated_params_nm_slice_vec	base_crystal.hpp	/^    std::vector<double> get_simulated_params_nm_slice_vec(){ return simulated_params_nm_slice_vec; }$/;"	function	line:196	language:C++	class:BaseCrystal	access:public
get_simulated_params_slice_vec	base_crystal.hpp	/^    std::vector<int> get_simulated_params_slice_vec(){ return simulated_params_slice_vec; }$/;"	function	line:194	language:C++	class:BaseCrystal	access:public
get_slc_file_name_prefix	base_crystal.hpp	/^    std::string get_slc_file_name_prefix(){ return slc_file_name_prefix; }$/;"	function	line:224	language:C++	class:BaseCrystal	access:public
get_slc_output_target_folder	base_crystal.hpp	/^    std::string get_slc_output_target_folder(){ return slc_output_target_folder; }$/;"	function	line:229	language:C++	class:BaseCrystal	access:public
get_slice_number_from_nm_ceil	base_crystal.cpp	/^int BaseCrystal::get_slice_number_from_nm_ceil( double goal_thickness_nm  ){$/;"	function	line:116	language:C++	class:BaseCrystal
get_slice_number_from_nm_floor	base_crystal.cpp	/^int BaseCrystal::get_slice_number_from_nm_floor( double goal_thickness_nm ){$/;"	function	line:101	language:C++	class:BaseCrystal
get_slice_params_accum_nm_slice_vec	base_crystal.hpp	/^    std::vector<double> get_slice_params_accum_nm_slice_vec(){ return slice_params_accum_nm_slice_vec; }$/;"	function	line:226	language:C++	class:BaseCrystal	access:public
get_slice_params_accum_nm_slice_vec	td_map.cpp	/^std::vector<double> TDMap::get_slice_params_accum_nm_slice_vec(){$/;"	function	line:673	language:C++	class:TDMap
get_slice_params_nm_slice	base_crystal.hpp	/^    std::map<int,double> get_slice_params_nm_slice(){ return slice_params_nm_slice; }$/;"	function	line:227	language:C++	class:BaseCrystal	access:public
get_slice_params_nm_slice_vec	base_crystal.hpp	/^    std::vector<double> get_slice_params_nm_slice_vec(){ return slice_params_nm_slice_vec; }$/;"	function	line:225	language:C++	class:BaseCrystal	access:public
get_slice_period	base_crystal.hpp	/^    int get_slice_period(){ return slice_period; }$/;"	function	line:239	language:C++	class:BaseCrystal	access:public
get_slice_period	td_map.cpp	/^int TDMap::get_slice_period(){$/;"	function	line:655	language:C++	class:TDMap
get_slice_samples	base_crystal.hpp	/^    int get_slice_samples(){ return slice_samples; }$/;"	function	line:236	language:C++	class:BaseCrystal	access:public
get_slice_samples	td_map.cpp	/^int TDMap::get_slice_samples(){$/;"	function	line:647	language:C++	class:TDMap
get_slice_samples_bottom_limit	td_map.cpp	/^int TDMap::get_slice_samples_bottom_limit(){$/;"	function	line:1469	language:C++	class:TDMap
get_slice_samples_top_limit	td_map.cpp	/^int TDMap::get_slice_samples_top_limit(){$/;"	function	line:1473	language:C++	class:TDMap
get_slices_lower_bound	base_crystal.hpp	/^    int get_slices_lower_bound(){ return slices_lower_bound; }$/;"	function	line:241	language:C++	class:BaseCrystal	access:public
get_slices_lower_bound	td_map.cpp	/^int TDMap::get_slices_lower_bound(){$/;"	function	line:651	language:C++	class:TDMap
get_slices_upper_bound	base_crystal.hpp	/^    int get_slices_upper_bound(){ return slices_upper_bound; }$/;"	function	line:242	language:C++	class:BaseCrystal	access:public
get_slider_column	treeitem.cpp	/^int TreeItem::get_slider_column(){$/;"	function	line:533	language:C++	class:TreeItem
get_slider_int_range_max	treeitem.cpp	/^int TreeItem::get_slider_int_range_max(){$/;"	function	line:521	language:C++	class:TreeItem
get_slider_int_range_min	treeitem.cpp	/^int TreeItem::get_slider_int_range_min(){$/;"	function	line:517	language:C++	class:TreeItem
get_spherical_aberration	td_map.cpp	/^double TDMap::get_spherical_aberration(){$/;"	function	line:570	language:C++	class:TDMap
get_spherical_aberration_switch	td_map.cpp	/^bool TDMap::get_spherical_aberration_switch(){$/;"	function	line:574	language:C++	class:TDMap
get_super_cell	simulation_step.cpp	/^Super_Cell* Simulation_Step::get_super_cell(){$/;"	function	line:36	language:C++	class:Simulation_Step
get_super_cell_size_a	base_crystal.hpp	/^    double get_super_cell_size_a(){ return super_cell_size_a; }$/;"	function	line:220	language:C++	class:BaseCrystal	access:public
get_super_cell_size_b	base_crystal.hpp	/^    double get_super_cell_size_b(){ return super_cell_size_b; }$/;"	function	line:221	language:C++	class:BaseCrystal	access:public
get_super_cell_size_c	base_crystal.hpp	/^    double get_super_cell_size_c(){ return super_cell_size_c; }$/;"	function	line:222	language:C++	class:BaseCrystal	access:public
get_symetry_atom_positions_vec	base_cell.hpp	/^    std::vector<cv::Point3d> get_symetry_atom_positions_vec(){ return symetry_atom_positions; }$/;"	function	line:235	language:C++	class:BaseCell	access:public
get_tdmap_cell_dimensions_a_bottom_limit	td_map.cpp	/^double TDMap::get_tdmap_cell_dimensions_a_bottom_limit(){$/;"	function	line:1550	language:C++	class:TDMap
get_tdmap_cell_dimensions_a_top_limit	td_map.cpp	/^double TDMap::get_tdmap_cell_dimensions_a_top_limit(){$/;"	function	line:1554	language:C++	class:TDMap
get_tdmap_cell_dimensions_b_bottom_limit	td_map.cpp	/^double TDMap::get_tdmap_cell_dimensions_b_bottom_limit(){$/;"	function	line:1558	language:C++	class:TDMap
get_tdmap_cell_dimensions_b_top_limit	td_map.cpp	/^double TDMap::get_tdmap_cell_dimensions_b_top_limit(){$/;"	function	line:1562	language:C++	class:TDMap
get_test_clean_run_env_warnings	td_map.hpp	/^    std::vector<std::string> get_test_clean_run_env_warnings(){ return test_clean_run_env_warnings; };$/;"	function	line:146	language:C++	class:TDMap	access:public
get_test_run_config_errors	td_map.hpp	/^    std::vector<std::string> get_test_run_config_errors(){ return test_run_config_errors; };$/;"	function	line:145	language:C++	class:TDMap	access:public
get_toolbar_actions	treeitem.cpp	/^std::vector<boost::function<bool()>> TreeItem::get_toolbar_actions(){$/;"	function	line:271	language:C++	class:TreeItem
get_toolbar_actions_description	treeitem.cpp	/^QVector<QVariant> TreeItem::get_toolbar_actions_description(){$/;"	function	line:240	language:C++	class:TreeItem
get_unit_cell	simulation_step.cpp	/^UnitCell* Simulation_Step::get_unit_cell(){$/;"	function	line:32	language:C++	class:Simulation_Step
get_unit_cell_cif_path	base_crystal.hpp	/^    std::string get_unit_cell_cif_path(){ return unit_cell->get_cif_path(); }$/;"	function	line:207	language:C++	class:BaseCrystal	access:public
get_upward_vector_hkl	base_cell.hpp	/^    cv::Point3d get_upward_vector_hkl(){ return upward_vector_hkl; }$/;"	function	line:227	language:C++	class:BaseCell	access:public
get_validator_value_double_bottom	treeitem.cpp	/^double TreeItem::get_validator_value_double_bottom( int col_pos ){$/;"	function	line:797	language:C++	class:TreeItem
get_validator_value_double_top	treeitem.cpp	/^double TreeItem::get_validator_value_double_top( int col_pos  ){$/;"	function	line:805	language:C++	class:TreeItem
get_validator_value_int_bottom	treeitem.cpp	/^int TreeItem::get_validator_value_int_bottom( int col_pos ){$/;"	function	line:709	language:C++	class:TreeItem
get_validator_value_int_top	treeitem.cpp	/^int TreeItem::get_validator_value_int_top( int col_pos  ){$/;"	function	line:728	language:C++	class:TreeItem
get_variable_description	treeitem.cpp	/^std::string TreeItem::get_variable_description( ){$/;"	function	line:460	language:C++	class:TreeItem
get_variable_name	treeitem.cpp	/^std::string TreeItem::get_variable_name(){$/;"	function	line:448	language:C++	class:TreeItem
get_vector_t	base_cell.hpp	/^    cv::Point3d get_vector_t(){ return vector_t; }$/;"	function	line:230	language:C++	class:BaseCell	access:public
get_volume	base_cell.hpp	/^    double get_volume(){ return cell_volume; }$/;"	function	line:221	language:C++	class:BaseCell	access:public
get_wav_output_target_folder	base_crystal.hpp	/^    std::string get_wav_output_target_folder(){ return wav_output_target_folder; }$/;"	function	line:230	language:C++	class:BaseCrystal	access:public
get_wavimg_parameters	simulation_step.cpp	/^WAVIMG_prm* Simulation_Step::get_wavimg_parameters(){$/;"	function	line:48	language:C++	class:Simulation_Step
get_zone_axis	base_crystal.hpp	/^    cv::Point3d  get_zone_axis(){ return zone_axis; }$/;"	function	line:214	language:C++	class:BaseCrystal	access:public
get_zone_axis_u	base_crystal.hpp	/^    double get_zone_axis_u(){ return zone_axis_u; }$/;"	function	line:215	language:C++	class:BaseCrystal	access:public
get_zone_axis_v	base_crystal.hpp	/^    double get_zone_axis_v(){ return zone_axis_v; }$/;"	function	line:216	language:C++	class:BaseCrystal	access:public
get_zone_axis_vector_uvw	base_cell.hpp	/^    cv::Point3d get_zone_axis_vector_uvw(){ return zone_axis_vector_uvw; }$/;"	function	line:224	language:C++	class:BaseCell	access:public
get_zone_axis_w	base_crystal.hpp	/^    double get_zone_axis_w(){ return zone_axis_w; }$/;"	function	line:217	language:C++	class:BaseCrystal	access:public
getpocket	QtAwesome.h	/^      getpocket                        = 0xf265,$/;"	enumerator	line:333	language:C++	enum:fa::icon
gg	QtAwesome.h	/^      gg                               = 0xf260,$/;"	enumerator	line:334	language:C++	enum:fa::icon
ggcircle	QtAwesome.h	/^      ggcircle                         = 0xf261,$/;"	enumerator	line:335	language:C++	enum:fa::icon
gid	emd_group.h	/^    hid_t gid;$/;"	member	line:69	language:C++	class:EMDGroup	access:private
gift	QtAwesome.h	/^      gift                             = 0xf06b,$/;"	enumerator	line:336	language:C++	enum:fa::icon
git	QtAwesome.h	/^      git                              = 0xf1d3,$/;"	enumerator	line:337	language:C++	enum:fa::icon
github	QtAwesome.h	/^      github                           = 0xf09b,$/;"	enumerator	line:339	language:C++	enum:fa::icon
githubalt	QtAwesome.h	/^      githubalt                        = 0xf113,$/;"	enumerator	line:340	language:C++	enum:fa::icon
githubsquare	QtAwesome.h	/^      githubsquare                     = 0xf092,$/;"	enumerator	line:341	language:C++	enum:fa::icon
gitlab	QtAwesome.h	/^      gitlab                           = 0xf296,$/;"	enumerator	line:342	language:C++	enum:fa::icon
gitsquare	QtAwesome.h	/^      gitsquare                        = 0xf1d2,$/;"	enumerator	line:338	language:C++	enum:fa::icon
gittip	QtAwesome.h	/^      gittip                           = 0xf184,$/;"	enumerator	line:343	language:C++	enum:fa::icon
give	QtAwesome.cpp	/^void QtAwesome::give(const QString& name, QtAwesomeIconPainter* painter)$/;"	function	line:1097	language:C++	class:QtAwesome
glass	QtAwesome.h	/^      glass                            = 0xf000,$/;"	enumerator	line:344	language:C++	enum:fa::icon
glide	QtAwesome.h	/^      glide                            = 0xf2a5,$/;"	enumerator	line:345	language:C++	enum:fa::icon
glideg	QtAwesome.h	/^      glideg                           = 0xf2a6,$/;"	enumerator	line:346	language:C++	enum:fa::icon
globe	QtAwesome.h	/^      globe                            = 0xf0ac,$/;"	enumerator	line:347	language:C++	enum:fa::icon
google	QtAwesome.h	/^      google                           = 0xf1a0,$/;"	enumerator	line:348	language:C++	enum:fa::icon
googleplus	QtAwesome.h	/^      googleplus                       = 0xf0d5,$/;"	enumerator	line:349	language:C++	enum:fa::icon
googlepluscircle	QtAwesome.h	/^      googlepluscircle                 = 0xf2b3,$/;"	enumerator	line:350	language:C++	enum:fa::icon
googleplusofficial	QtAwesome.h	/^      googleplusofficial               = 0xf2b3,$/;"	enumerator	line:351	language:C++	enum:fa::icon
googleplussquare	QtAwesome.h	/^      googleplussquare                 = 0xf0d4,$/;"	enumerator	line:352	language:C++	enum:fa::icon
googlewallet	QtAwesome.h	/^      googlewallet                     = 0xf1ee,$/;"	enumerator	line:353	language:C++	enum:fa::icon
graduationcap	QtAwesome.h	/^      graduationcap                    = 0xf19d,$/;"	enumerator	line:354	language:C++	enum:fa::icon
gratipay	QtAwesome.h	/^      gratipay                         = 0xf184,$/;"	enumerator	line:355	language:C++	enum:fa::icon
grav	QtAwesome.h	/^      grav                             = 0xf2d6,$/;"	enumerator	line:356	language:C++	enum:fa::icon
group	QtAwesome.h	/^      group                            = 0xf0c0,$/;"	enumerator	line:357	language:C++	enum:fa::icon
group_name	emd_group.h	/^    char group_name[MAX_NAME];$/;"	member	line:71	language:C++	class:EMDGroup	access:private
group_options	group_options.cpp	/^group_options::group_options( std::string gname ){$/;"	function	line:3	language:C++	class:group_options
group_options	group_options.h	/^class group_options : public QObject {$/;"	class	line:14	language:C++	inherits:QObject
group_vars_error_list	group_options.h	/^    std::vector<std::string> group_vars_error_list;$/;"	member	line:35	language:C++	class:group_options	access:private
grp	emd_wrapper.h	/^EMDGroup grp;$/;"	member	line:72	language:C++	class:EMDWrapper	access:private
grpid	emd_group.h	/^    hid_t grpid;$/;"	member	line:70	language:C++	class:EMDGroup	access:private
hackernews	QtAwesome.h	/^      hackernews                       = 0xf1d4,$/;"	enumerator	line:359	language:C++	enum:fa::icon
handgrabo	QtAwesome.h	/^      handgrabo                        = 0xf255,$/;"	enumerator	line:360	language:C++	enum:fa::icon
handlizardo	QtAwesome.h	/^      handlizardo                      = 0xf258,$/;"	enumerator	line:361	language:C++	enum:fa::icon
handodown	QtAwesome.h	/^      handodown                        = 0xf0a7,$/;"	enumerator	line:362	language:C++	enum:fa::icon
handoleft	QtAwesome.h	/^      handoleft                        = 0xf0a5,$/;"	enumerator	line:363	language:C++	enum:fa::icon
handoright	QtAwesome.h	/^      handoright                       = 0xf0a4,$/;"	enumerator	line:364	language:C++	enum:fa::icon
handoup	QtAwesome.h	/^      handoup                          = 0xf0a6,$/;"	enumerator	line:365	language:C++	enum:fa::icon
handpapero	QtAwesome.h	/^      handpapero                       = 0xf256,$/;"	enumerator	line:366	language:C++	enum:fa::icon
handpeaceo	QtAwesome.h	/^      handpeaceo                       = 0xf25b,$/;"	enumerator	line:367	language:C++	enum:fa::icon
handpointero	QtAwesome.h	/^      handpointero                     = 0xf25a,$/;"	enumerator	line:368	language:C++	enum:fa::icon
handrocko	QtAwesome.h	/^      handrocko                        = 0xf255,$/;"	enumerator	line:369	language:C++	enum:fa::icon
handscissorso	QtAwesome.h	/^      handscissorso                    = 0xf257,$/;"	enumerator	line:370	language:C++	enum:fa::icon
handshakeo	QtAwesome.h	/^      handshakeo                       = 0xf2b5,$/;"	enumerator	line:373	language:C++	enum:fa::icon
handspocko	QtAwesome.h	/^      handspocko                       = 0xf259,$/;"	enumerator	line:371	language:C++	enum:fa::icon
handstopo	QtAwesome.h	/^      handstopo                        = 0xf256,$/;"	enumerator	line:372	language:C++	enum:fa::icon
hardofhearing	QtAwesome.h	/^      hardofhearing                    = 0xf2a4,$/;"	enumerator	line:374	language:C++	enum:fa::icon
has_hightlight_error	treeitem.cpp	/^bool TreeItem::has_hightlight_error( int column ){$/;"	function	line:22	language:C++	class:TreeItem
hashtag	QtAwesome.h	/^      hashtag                          = 0xf292,$/;"	enumerator	line:375	language:C++	enum:fa::icon
hddo	QtAwesome.h	/^      hddo                             = 0xf0a0,$/;"	enumerator	line:376	language:C++	enum:fa::icon
header	QtAwesome.h	/^      header                           = 0xf1dc,$/;"	enumerator	line:377	language:C++	enum:fa::icon
headerData	treemodel.cpp	/^QVariant TreeModel::headerData(int section, Qt::Orientation orientation, int role) const {$/;"	function	line:74	language:C++	class:TreeModel
headphones	QtAwesome.h	/^      headphones                       = 0xf025,$/;"	enumerator	line:378	language:C++	enum:fa::icon
heart	QtAwesome.h	/^      heart                            = 0xf004,$/;"	enumerator	line:379	language:C++	enum:fa::icon
heartbeat	QtAwesome.h	/^      heartbeat                        = 0xf21e,$/;"	enumerator	line:381	language:C++	enum:fa::icon
hearto	QtAwesome.h	/^      hearto                           = 0xf08a,$/;"	enumerator	line:380	language:C++	enum:fa::icon
height_px	base_cell.hpp	/^    int height_px;$/;"	member	line:147	language:C++	class:BaseCell	access:protected
history	QtAwesome.h	/^      history                          = 0xf1da,$/;"	enumerator	line:382	language:C++	enum:fa::icon
home	QtAwesome.h	/^      home                             = 0xf015,$/;"	enumerator	line:383	language:C++	enum:fa::icon
hospitalo	QtAwesome.h	/^      hospitalo                        = 0xf0f8,$/;"	enumerator	line:384	language:C++	enum:fa::icon
hotel	QtAwesome.h	/^      hotel                            = 0xf236,$/;"	enumerator	line:385	language:C++	enum:fa::icon
hourglass	QtAwesome.h	/^      hourglass                        = 0xf254,$/;"	enumerator	line:386	language:C++	enum:fa::icon
hourglass1	QtAwesome.h	/^      hourglass1                       = 0xf251,$/;"	enumerator	line:387	language:C++	enum:fa::icon
hourglass2	QtAwesome.h	/^      hourglass2                       = 0xf252,$/;"	enumerator	line:388	language:C++	enum:fa::icon
hourglass3	QtAwesome.h	/^      hourglass3                       = 0xf253,$/;"	enumerator	line:389	language:C++	enum:fa::icon
hourglassend	QtAwesome.h	/^      hourglassend                     = 0xf253,$/;"	enumerator	line:390	language:C++	enum:fa::icon
hourglasshalf	QtAwesome.h	/^      hourglasshalf                    = 0xf252,$/;"	enumerator	line:391	language:C++	enum:fa::icon
hourglasso	QtAwesome.h	/^      hourglasso                       = 0xf250,$/;"	enumerator	line:392	language:C++	enum:fa::icon
hourglassstart	QtAwesome.h	/^      hourglassstart                   = 0xf251,$/;"	enumerator	line:393	language:C++	enum:fa::icon
houzz	QtAwesome.h	/^      houzz                            = 0xf27c,$/;"	enumerator	line:394	language:C++	enum:fa::icon
hsquare	QtAwesome.h	/^      hsquare                          = 0xf0fd,$/;"	enumerator	line:358	language:C++	enum:fa::icon
ht_accelaration_voltage	base_crystal.hpp	/^    double ht_accelaration_voltage = 0.0f;$/;"	member	line:73	language:C++	class:BaseCrystal	access:protected
html5	QtAwesome.h	/^      html5                            = 0xf13b,$/;"	enumerator	line:395	language:C++	enum:fa::icon
hysteresis_threshold	image_bounds.hpp	/^    int hysteresis_threshold = 85;$/;"	member	line:62	language:C++	class:ImageBounds	access:protected
hysteresis_threshold_range_bottom_limit	image_bounds.hpp	/^    int hysteresis_threshold_range_bottom_limit = 1;$/;"	member	line:65	language:C++	class:ImageBounds	access:protected
hysteresis_threshold_range_top_limit	image_bounds.hpp	/^    int hysteresis_threshold_range_top_limit = 255;$/;"	member	line:66	language:C++	class:ImageBounds	access:protected
i	emd_object.h	/^    int i;$/;"	member	line:34	language:C++	class:EMDObject	access:protected
icon	QtAwesome.cpp	/^  fa::icon icon;$/;"	member	line:162	language:C++	struct:FANameIcon	file:	access:public
icon	QtAwesome.cpp	/^QIcon QtAwesome::icon(QtAwesomeIconPainter* painter, const QVariantMap& optionMap )$/;"	function	line:1083	language:C++	class:QtAwesome
icon	QtAwesome.cpp	/^QIcon QtAwesome::icon(const QString& name, const QVariantMap& options)$/;"	function	line:1059	language:C++	class:QtAwesome
icon	QtAwesome.cpp	/^QIcon QtAwesome::icon(int character, const QVariantMap &options)$/;"	function	line:1043	language:C++	class:QtAwesome
icon	QtAwesome.h	/^  enum icon {$/;"	enum	line:25	language:C++	namespace:fa
iconPainterRef_	QtAwesome.cpp	/^    QtAwesomeIconPainter* iconPainterRef_;   \/\/\/< a reference to the icon painter$/;"	member	line:118	language:C++	class:QtAwesomeIconPainterIconEngine	file:	access:private
icursor	QtAwesome.h	/^      icursor                          = 0xf246,$/;"	enumerator	line:396	language:C++	enum:fa::icon
idbadge	QtAwesome.h	/^      idbadge                          = 0xf2c1,$/;"	enumerator	line:397	language:C++	enum:fa::icon
idcard	QtAwesome.h	/^      idcard                           = 0xf2c2,$/;"	enumerator	line:398	language:C++	enum:fa::icon
idcardo	QtAwesome.h	/^      idcardo                          = 0xf2c3,$/;"	enumerator	line:399	language:C++	enum:fa::icon
ignore_cel_margin_rectangle	base_cell.hpp	/^    cv::Rect ignore_cel_margin_rectangle;$/;"	member	line:121	language:C++	class:BaseCell	access:protected
ignore_edge_pixels	base_image.hpp	/^    int ignore_edge_pixels = 0;$/;"	member	line:100	language:C++	class:BaseImage	access:protected
ignore_edge_pixels_rectangle	base_image.hpp	/^    cv::Rect ignore_edge_pixels_rectangle;$/;"	member	line:98	language:C++	class:BaseImage	access:protected
ils	QtAwesome.h	/^      ils                              = 0xf20b,$/;"	enumerator	line:400	language:C++	enum:fa::icon
im2model_logger	configwin.h	/^    ApplicationLog::ApplicationLog* im2model_logger = nullptr;$/;"	member	line:198	language:C++	class:MainWindow	access:private
im2model_logger	im2model_gui.cpp	/^    ApplicationLog::ApplicationLog* im2model_logger;$/;"	member	line:26	language:C++	class:final	file:	access:public
image	QtAwesome.h	/^      image                            = 0xf03e,$/;"	enumerator	line:401	language:C++	enum:fa::icon
image	celslc_prm.hpp	/^BaseImage* image;$/;"	member	line:48	language:C++	class:CELSLC_prm	access:private
image_correlation_matching_method	td_map.hpp	/^    int image_correlation_matching_method = CV_TM_CCOEFF_NORMED;$/;"	member	line:28	language:C++	class:TDMap	access:private
image_data_type	wavimg_prm.hpp	/^    int image_data_type = 0;$/;"	member	line:36	language:C++	class:WAVIMG_prm	access:private
image_delegate	gui_tdmap_table.h	/^    CvTDMapImageFrameDelegate *image_delegate;$/;"	member	line:74	language:C++	class:TDMap_Table	access:private
image_frame_offset_x_pixels_input_wave_function	wavimg_prm.hpp	/^    double image_frame_offset_x_pixels_input_wave_function = 0.0f;$/;"	member	line:48	language:C++	class:WAVIMG_prm	access:private
image_frame_offset_y_pixels_input_wave_function	wavimg_prm.hpp	/^    double image_frame_offset_y_pixels_input_wave_function = 0.0f;$/;"	member	line:49	language:C++	class:WAVIMG_prm	access:private
image_frame_rotation	wavimg_prm.hpp	/^    double image_frame_rotation = 0.0f;$/;"	member	line:52	language:C++	class:WAVIMG_prm	access:private
image_path	configwin.h	/^  TreeItem* image_path = nullptr;$/;"	member	line:208	language:C++	class:MainWindow	access:private
image_vacuum_mean_intensity	wavimg_prm.hpp	/^    double image_vacuum_mean_intensity = 0.0f;$/;"	member	line:37	language:C++	class:WAVIMG_prm	access:private
image_widget	cv_image_cell_widget.h	/^    CVImageWidget *image_widget;$/;"	member	line:74	language:C++	class:CvImageCellWidget	access:protected
image_widget	cv_image_edge_frame.h	/^    CVImageWidget *image_widget;$/;"	member	line:72	language:C++	class:CvImageEdgeFrame	access:protected
image_widget	cv_image_frame.h	/^    CVImageWidget *image_widget;$/;"	member	line:34	language:C++	class:CvImageFrameWidget	access:protected
image_widget	cv_tdmap_cell_image_frame.h	/^    CVImageWidget *image_widget;$/;"	member	line:28	language:C++	class:CvTDMapImageFrame	access:protected
imdb	QtAwesome.h	/^      imdb                             = 0xf2d8,$/;"	enumerator	line:402	language:C++	enum:fa::icon
imregionalmax_match_values_matrix	simgrid.hpp	/^    cv::Mat imregionalmax_match_values_matrix;$/;"	member	line:82	language:C++	class:SimGrid	access:private
inbox	QtAwesome.h	/^      inbox                            = 0xf01c,$/;"	enumerator	line:403	language:C++	enum:fa::icon
incident_electron_beam	configwin.h	/^  TreeItem* incident_electron_beam = nullptr;$/;"	member	line:250	language:C++	class:MainWindow	access:private
indent	QtAwesome.h	/^      indent                           = 0xf03c,$/;"	enumerator	line:404	language:C++	enum:fa::icon
index	treemodel.cpp	/^QModelIndex TreeModel::index(int row, int column, const QModelIndex &parent) const {$/;"	function	line:81	language:C++	class:TreeModel
industry	QtAwesome.h	/^      industry                         = 0xf275,$/;"	enumerator	line:405	language:C++	enum:fa::icon
info	QtAwesome.h	/^      info                             = 0xf129,$/;"	enumerator	line:406	language:C++	enum:fa::icon
infocircle	QtAwesome.h	/^      infocircle                       = 0xf05a,$/;"	enumerator	line:407	language:C++	enum:fa::icon
init	QtAwesome.cpp	/^void QtAwesome::init(const QString& fontname)$/;"	function	line:155	language:C++	class:QtAwesome
initFontAwesome	QtAwesome.cpp	/^bool QtAwesome::initFontAwesome( )$/;"	function	line:958	language:C++	class:QtAwesome
inpolygon	edge.hpp	/^bool inpolygon( cv::Point3d p, std::vector<cv::Point2d> polygon_points ){$/;"	function	line:41	language:C++
inpolygon_double	edge.hpp	/^bool inpolygon_double(const cv::Point3d& p, std::vector<Edge> edges){$/;"	function	line:33	language:C++
inr	QtAwesome.h	/^      inr                              = 0xf156,$/;"	enumerator	line:408	language:C++	enum:fa::icon
insertChildren	treeitem.cpp	/^bool TreeItem::insertChildren(TreeItem *item){$/;"	function	line:427	language:C++	class:TreeItem
insertChildren	treeitem.cpp	/^bool TreeItem::insertChildren(int position, int count, int columns){$/;"	function	line:433	language:C++	class:TreeItem
insertColumns	treeitem.cpp	/^bool TreeItem::insertColumns(int position, int columns){$/;"	function	line:464	language:C++	class:TreeItem
insertColumns	treemodel.cpp	/^bool TreeModel::insertColumns(int position, int columns, const QModelIndex &parent){$/;"	function	line:95	language:C++	class:TreeModel
insertRows	treemodel.cpp	/^bool TreeModel::insertRows(int position, int rows, const QModelIndex &parent){$/;"	function	line:105	language:C++	class:TreeModel
instagram	QtAwesome.h	/^      instagram                        = 0xf16d,$/;"	enumerator	line:409	language:C++	enum:fa::icon
institution	QtAwesome.h	/^      institution                      = 0xf19c,$/;"	enumerator	line:410	language:C++	enum:fa::icon
intAsString	string_additions.cpp	/^string intAsString(int number) {$/;"	function	line:91	language:C++
int_sign	emd_object.h	/^    H5T_sign_t int_sign;$/;"	member	line:47	language:C++	class:EMDObject	access:protected
internal_repeat_factor_of_super_cell_along_x	msa_prm.hpp	/^    int internal_repeat_factor_of_super_cell_along_x = 0;$/;"	member	line:31	language:C++	class:MSA_prm	access:private
internal_repeat_factor_of_super_cell_along_y	msa_prm.hpp	/^    int internal_repeat_factor_of_super_cell_along_y = 0;$/;"	member	line:32	language:C++	class:MSA_prm	access:private
internal_repeat_factor_of_super_cell_along_z	msa_prm.hpp	/^    int internal_repeat_factor_of_super_cell_along_z = 1;$/;"	member	line:33	language:C++	class:MSA_prm	access:private
internetexplorer	QtAwesome.h	/^      internetexplorer                 = 0xf26b,$/;"	enumerator	line:411	language:C++	enum:fa::icon
intersex	QtAwesome.h	/^      intersex                         = 0xf224,$/;"	enumerator	line:412	language:C++	enum:fa::icon
interval_	QtAwesomeAnim.h	/^    int interval_;$/;"	member	line:29	language:C++	class:QtAwesomeAnimation	access:private
invalidate_grid	gui_tdmap_table.cpp	/^void TDMap_Table::invalidate_grid( int signal_item_changed_column ){$/;"	function	line:47	language:C++	class:TDMap_Table
inverse_orientation_matrix	base_cell.hpp	/^    cv::Mat inverse_orientation_matrix;$/;"	member	line:125	language:C++	class:BaseCell	access:protected
ioxhost	QtAwesome.h	/^      ioxhost                          = 0xf208,$/;"	enumerator	line:413	language:C++	enum:fa::icon
isInUse	vis/program.cpp	/^bool Program::isInUse() const {$/;"	function	line:61	language:C++	class:Program
isItemCheckable	treeitem.cpp	/^bool TreeItem::isItemCheckable( int column ) const {$/;"	function	line:419	language:C++	class:TreeItem
isItemEditable	treeitem.cpp	/^bool TreeItem::isItemEditable( int column ) const{$/;"	function	line:411	language:C++	class:TreeItem
is_update_required	group_options.cpp	/^bool group_options::is_update_required(){$/;"	function	line:7	language:C++	class:group_options
isotropic_one_rms_amplitude	wavimg_prm.hpp	/^    double isotropic_one_rms_amplitude = 0.0f;$/;"	member	line:69	language:C++	class:WAVIMG_prm	access:private
italic	QtAwesome.h	/^      italic                           = 0xf033,$/;"	enumerator	line:414	language:C++	enum:fa::icon
itemData	treeitem.h	/^    QVector<QVariant> itemData;$/;"	member	line:157	language:C++	class:TreeItem	access:private
itemIsCheckableVec	treeitem.h	/^    QVector<bool> itemIsCheckableVec;$/;"	member	line:164	language:C++	class:TreeItem	access:private
itemIsEditableVec	treeitem.h	/^    QVector<bool> itemIsEditableVec;$/;"	member	line:161	language:C++	class:TreeItem	access:private
itemIsValidatableDoubleBottomVec	treeitem.h	/^    QVector<bool> itemIsValidatableDoubleBottomVec;$/;"	member	line:179	language:C++	class:TreeItem	access:private
itemIsValidatableDoubleTopVec	treeitem.h	/^    QVector<bool> itemIsValidatableDoubleTopVec;$/;"	member	line:178	language:C++	class:TreeItem	access:private
itemIsValidatableDoubleVec	treeitem.h	/^    QVector<bool> itemIsValidatableDoubleVec;$/;"	member	line:177	language:C++	class:TreeItem	access:private
itemIsValidatableIntBottomVec	treeitem.h	/^    QVector<bool> itemIsValidatableIntBottomVec;$/;"	member	line:172	language:C++	class:TreeItem	access:private
itemIsValidatableIntTopVec	treeitem.h	/^    QVector<bool> itemIsValidatableIntTopVec;$/;"	member	line:171	language:C++	class:TreeItem	access:private
itemIsValidatableIntVec	treeitem.h	/^    QVector<bool> itemIsValidatableIntVec;$/;"	member	line:170	language:C++	class:TreeItem	access:private
itemLegend	treeitem.h	/^    QVector<QVariant> itemLegend;$/;"	member	line:158	language:C++	class:TreeItem	access:private
itemState	treeitem.h	/^    QVector<bool> itemState;$/;"	member	line:165	language:C++	class:TreeItem	access:private
itemToolTip	treeitem.h	/^    QVector<QVariant> itemToolTip;$/;"	member	line:187	language:C++	class:TreeItem	access:private
joomla	QtAwesome.h	/^      joomla                           = 0xf1aa,$/;"	enumerator	line:415	language:C++	enum:fa::icon
jpy	QtAwesome.h	/^      jpy                              = 0xf157,$/;"	enumerator	line:416	language:C++	enum:fa::icon
jsfiddle	QtAwesome.h	/^      jsfiddle                         = 0xf1cc,$/;"	enumerator	line:417	language:C++	enum:fa::icon
k_space_scaling	wavimg_prm.hpp	/^    double k_space_scaling = 1.0f;$/;"	member	line:64	language:C++	class:WAVIMG_prm	access:private
key	QtAwesome.h	/^      key                              = 0xf084,$/;"	enumerator	line:418	language:C++	enum:fa::icon
keyboardo	QtAwesome.h	/^      keyboardo                        = 0xf11c,$/;"	enumerator	line:419	language:C++	enum:fa::icon
krw	QtAwesome.h	/^      krw                              = 0xf159,$/;"	enumerator	line:420	language:C++	enum:fa::icon
language	QtAwesome.h	/^      language                         = 0xf1ab,$/;"	enumerator	line:421	language:C++	enum:fa::icon
laptop	QtAwesome.h	/^      laptop                           = 0xf109,$/;"	enumerator	line:422	language:C++	enum:fa::icon
lastfm	QtAwesome.h	/^      lastfm                           = 0xf202,$/;"	enumerator	line:423	language:C++	enum:fa::icon
lastfmsquare	QtAwesome.h	/^      lastfmsquare                     = 0xf203,$/;"	enumerator	line:424	language:C++	enum:fa::icon
leaf	QtAwesome.h	/^      leaf                             = 0xf06c,$/;"	enumerator	line:425	language:C++	enum:fa::icon
leanpub	QtAwesome.h	/^      leanpub                          = 0xf212,$/;"	enumerator	line:426	language:C++	enum:fa::icon
left_padding_px	base_cell.hpp	/^    int left_padding_px;$/;"	member	line:133	language:C++	class:BaseCell	access:protected
left_padding_w_margin_px	base_cell.hpp	/^    int left_padding_w_margin_px;$/;"	member	line:131	language:C++	class:BaseCell	access:protected
legal	QtAwesome.h	/^      legal                            = 0xf0e3,$/;"	enumerator	line:427	language:C++	enum:fa::icon
lemono	QtAwesome.h	/^      lemono                           = 0xf094,$/;"	enumerator	line:428	language:C++	enum:fa::icon
len	emd_attribute.h	/^ssize_t len;$/;"	member	line:20	language:C++	class:EMDAttribute	access:protected
len	emd_object.h	/^    ssize_t len;$/;"	member	line:35	language:C++	class:EMDObject	access:protected
length_a_Angstroms	base_cell.hpp	/^    double length_a_Angstroms;$/;"	member	line:68	language:C++	class:BaseCell	access:protected
length_a_Nanometers	base_cell.hpp	/^    double length_a_Nanometers;$/;"	member	line:71	language:C++	class:BaseCell	access:protected
length_b_Angstroms	base_cell.hpp	/^    double length_b_Angstroms;$/;"	member	line:69	language:C++	class:BaseCell	access:protected
length_b_Nanometers	base_cell.hpp	/^    double length_b_Nanometers;$/;"	member	line:72	language:C++	class:BaseCell	access:protected
length_c_Angstroms	base_cell.hpp	/^    double length_c_Angstroms;$/;"	member	line:70	language:C++	class:BaseCell	access:protected
length_c_Nanometers	base_cell.hpp	/^    double length_c_Nanometers;$/;"	member	line:73	language:C++	class:BaseCell	access:protected
leveldown	QtAwesome.h	/^      leveldown                        = 0xf149,$/;"	enumerator	line:429	language:C++	enum:fa::icon
levelup	QtAwesome.h	/^      levelup                          = 0xf148,$/;"	enumerator	line:430	language:C++	enum:fa::icon
lifebouy	QtAwesome.h	/^      lifebouy                         = 0xf1cd,$/;"	enumerator	line:431	language:C++	enum:fa::icon
lifebuoy	QtAwesome.h	/^      lifebuoy                         = 0xf1cd,$/;"	enumerator	line:432	language:C++	enum:fa::icon
lifering	QtAwesome.h	/^      lifering                         = 0xf1cd,$/;"	enumerator	line:433	language:C++	enum:fa::icon
lifesaver	QtAwesome.h	/^      lifesaver                        = 0xf1cd,$/;"	enumerator	line:434	language:C++	enum:fa::icon
lightbulbo	QtAwesome.h	/^      lightbulbo                       = 0xf0eb,$/;"	enumerator	line:435	language:C++	enum:fa::icon
linechart	QtAwesome.h	/^      linechart                        = 0xf201,$/;"	enumerator	line:436	language:C++	enum:fa::icon
link	QtAwesome.h	/^      link                             = 0xf0c1,$/;"	enumerator	line:437	language:C++	enum:fa::icon
linkedin	QtAwesome.h	/^      linkedin                         = 0xf0e1,$/;"	enumerator	line:438	language:C++	enum:fa::icon
linkedinsquare	QtAwesome.h	/^      linkedinsquare                   = 0xf08c,$/;"	enumerator	line:439	language:C++	enum:fa::icon
linode	QtAwesome.h	/^      linode                           = 0xf2b8,$/;"	enumerator	line:440	language:C++	enum:fa::icon
list	QtAwesome.h	/^      list                             = 0xf03a,$/;"	enumerator	line:442	language:C++	enum:fa::icon
listalt	QtAwesome.h	/^      listalt                          = 0xf022,$/;"	enumerator	line:443	language:C++	enum:fa::icon
listen_group_update_required	group_options.cpp	/^void group_options::listen_group_update_required( group_options* group_to_listen ){$/;"	function	line:47	language:C++	class:group_options
listol	QtAwesome.h	/^      listol                           = 0xf0cb,$/;"	enumerator	line:444	language:C++	enum:fa::icon
listul	QtAwesome.h	/^      listul                           = 0xf0ca,$/;"	enumerator	line:445	language:C++	enum:fa::icon
loadFile	configwin.cpp	/^void MainWindow::loadFile(const QString &fileName){$/;"	function	line:947	language:C++	class:MainWindow
load_check_status_from_getter	treeitem.cpp	/^bool TreeItem::load_check_status_from_getter( int col ){$/;"	function	line:257	language:C++	class:TreeItem
load_data_from_getter	treeitem.cpp	/^bool TreeItem::load_data_from_getter( ){$/;"	function	line:169	language:C++	class:TreeItem
load_data_from_getter	treeitem.cpp	/^void TreeItem::load_data_from_getter( int column ){$/;"	function	line:199	language:C++	class:TreeItem
load_data_from_property_tree	treeitem.cpp	/^bool TreeItem::load_data_from_property_tree( boost::property_tree::ptree pt_root ){$/;"	function	line:279	language:C++	class:TreeItem
load_data_from_property_tree	treemodel.cpp	/^bool TreeModel::load_data_from_property_tree( boost::property_tree::ptree pt_root ){$/;"	function	line:30	language:C++	class:TreeModel
load_full_experimental_image	deprecated/image_crystal.cpp	/^bool Image_Crystal::load_full_experimental_image(){$/;"	function	line:10	language:C++	class:Image_Crystal
loc	mc_scanner.hpp	/^      MC::MC_Parser::location_type *loc    = nullptr;$/;"	member	line:38	language:C++	class:MC::MC_Scanner	access:private
locationarrow	QtAwesome.h	/^      locationarrow                    = 0xf124,$/;"	enumerator	line:446	language:C++	enum:fa::icon
lock	QtAwesome.h	/^      lock                             = 0xf023,$/;"	enumerator	line:447	language:C++	enum:fa::icon
logEvent	application_log.cpp	/^  void ApplicationLog::logEvent(const severity_level level, std::string message)$/;"	function	line:87	language:C++	class:ApplicationLog::ApplicationLog
log_window	gui_stream.hpp	/^    QTextEdit* log_window;$/;"	member	line:72	language:C++	class:Q_GUI_Stream	access:private
logger	base_bin.hpp	/^    ApplicationLog::ApplicationLog* logger = nullptr;$/;"	member	line:35	language:C++	class:BaseBin	access:private
logger	base_crystal.hpp	/^    ApplicationLog::ApplicationLog* logger = nullptr;$/;"	member	line:40	language:C++	class:BaseCrystal	access:private
logger	base_image.hpp	/^    ApplicationLog::ApplicationLog* logger = nullptr;$/;"	member	line:45	language:C++	class:BaseImage	access:private
logger	base_logger.hpp	/^    ApplicationLog::ApplicationLog* logger = nullptr;$/;"	member	line:35	language:C++	class:BaseLogger	access:protected
logger	celslc_prm.hpp	/^    ApplicationLog::ApplicationLog* logger = nullptr;$/;"	member	line:63	language:C++	class:CELSLC_prm	access:private
logger	image_bounds.hpp	/^    ApplicationLog::ApplicationLog* logger = nullptr;$/;"	member	line:54	language:C++	class:ImageBounds	access:private
logger	msa_prm.hpp	/^    ApplicationLog::ApplicationLog* logger = nullptr;$/;"	member	line:49	language:C++	class:MSA_prm	access:private
logger	simgrid.hpp	/^    ApplicationLog::ApplicationLog* logger = nullptr;$/;"	member	line:96	language:C++	class:SimGrid	access:private
logger	super_cell.hpp	/^    ApplicationLog::ApplicationLog* logger = nullptr;$/;"	member	line:48	language:C++	class:SuperCell	access:private
logger	td_map.hpp	/^    ApplicationLog::ApplicationLog* logger = nullptr;$/;"	member	line:85	language:C++	class:TDMap	access:private
logger	wavimg_prm.hpp	/^    ApplicationLog::ApplicationLog* logger = nullptr;$/;"	member	line:114	language:C++	class:WAVIMG_prm	access:private
longarrowdown	QtAwesome.h	/^      longarrowdown                    = 0xf175,$/;"	enumerator	line:448	language:C++	enum:fa::icon
longarrowleft	QtAwesome.h	/^      longarrowleft                    = 0xf177,$/;"	enumerator	line:449	language:C++	enum:fa::icon
longarrowright	QtAwesome.h	/^      longarrowright                   = 0xf178,$/;"	enumerator	line:450	language:C++	enum:fa::icon
longarrowup	QtAwesome.h	/^      longarrowup                      = 0xf176,$/;"	enumerator	line:451	language:C++	enum:fa::icon
lookAt	vis/camera.cpp	/^void Camera::lookAt(glm::vec3 position) {$/;"	function	line:109	language:C++	class:Camera
loop_parameter_class	wavimg_prm.hpp	/^    std::vector<int> loop_parameter_class;$/;"	member	line:87	language:C++	class:WAVIMG_prm	access:private
loop_parameter_index	wavimg_prm.hpp	/^    std::vector<int> loop_parameter_index;$/;"	member	line:89	language:C++	class:WAVIMG_prm	access:private
loop_range_0	wavimg_prm.hpp	/^    std::vector<double> loop_range_0;$/;"	member	line:93	language:C++	class:WAVIMG_prm	access:private
loop_range_1	wavimg_prm.hpp	/^    std::vector<double> loop_range_1;$/;"	member	line:94	language:C++	class:WAVIMG_prm	access:private
loop_range_n	wavimg_prm.hpp	/^    std::vector<int> loop_range_n;$/;"	member	line:95	language:C++	class:WAVIMG_prm	access:private
loop_string_indentifier	wavimg_prm.hpp	/^    std::vector<std::string> loop_string_indentifier;$/;"	member	line:97	language:C++	class:WAVIMG_prm	access:private
loop_tables	mc_driver.hpp	/^      std::map<int,std::vector<std::string>> loop_tables;$/;"	member	line:50	language:C++	class:MC::MC_Driver	access:protected
loop_variation_form	wavimg_prm.hpp	/^    std::vector<int> loop_variation_form;$/;"	member	line:91	language:C++	class:WAVIMG_prm	access:private
looped_items	mc_driver.hpp	/^      std::map<std::string,std::vector<std::string>> looped_items;$/;"	member	line:51	language:C++	class:MC::MC_Driver	access:protected
lowvision	QtAwesome.h	/^      lowvision                        = 0xf2a8,$/;"	enumerator	line:452	language:C++	enum:fa::icon
mAtomicMass	atom_info.hpp	/^    double mAtomicMass;$/;"	member	line:92	language:C++	class:Atom_Info	access:private
mAtomicNumber	atom_info.hpp	/^    int mAtomicNumber;$/;"	member	line:88	language:C++	class:Atom_Info	access:private
mBoilingPoint	atom_info.hpp	/^    double mBoilingPoint;$/;"	member	line:94	language:C++	class:Atom_Info	access:private
mCPKColor	atom_info.hpp	/^    unsigned int mCPKColor;$/;"	member	line:90	language:C++	class:Atom_Info	access:private
mCalculatedRadius	atom_info.hpp	/^    double mCalculatedRadius;$/;"	member	line:97	language:C++	class:Atom_Info	access:private
mCovalentRadius	atom_info.hpp	/^    double mCovalentRadius;$/;"	member	line:99	language:C++	class:Atom_Info	access:private
mElectronAffinity	atom_info.hpp	/^    double mElectronAffinity;$/;"	member	line:96	language:C++	class:Atom_Info	access:private
mElectronegativity	atom_info.hpp	/^    double mElectronegativity;$/;"	member	line:95	language:C++	class:Atom_Info	access:private
mEmpiricalRadius_Picometers	atom_info.hpp	/^    double mEmpiricalRadius_Picometers;$/;"	member	line:98	language:C++	class:Atom_Info	access:private
mMeltingPoint	atom_info.hpp	/^    double mMeltingPoint;$/;"	member	line:93	language:C++	class:Atom_Info	access:private
mRasMolColor	atom_info.hpp	/^    unsigned int mRasMolColor;$/;"	member	line:91	language:C++	class:Atom_Info	access:private
mValence	atom_info.hpp	/^    int mValence;$/;"	member	line:89	language:C++	class:Atom_Info	access:private
mVanDerWaalsRadius	atom_info.hpp	/^    double mVanDerWaalsRadius;$/;"	member	line:100	language:C++	class:Atom_Info	access:private
m_logger	application_log.hpp	/^      src::severity_logger<severity_level> m_logger;$/;"	member	line:41	language:C++	class:ApplicationLog::ApplicationLog	access:private
m_margin	cv_tdmap_cell_image_frame_delegate.h	/^    int m_margin;$/;"	member	line:40	language:C++	class:CvTDMapImageFrameDelegate	access:private
m_old_buf	gui_stream.hpp	/^    std::streambuf* m_old_buf;$/;"	member	line:71	language:C++	class:Q_GUI_Stream	access:private
m_stream	gui_stream.hpp	/^    std::ostream& m_stream;$/;"	member	line:70	language:C++	class:Q_GUI_Stream	access:private
magic	QtAwesome.h	/^      magic                            = 0xf0d0,$/;"	enumerator	line:453	language:C++	enum:fa::icon
magnet	QtAwesome.h	/^      magnet                           = 0xf076,$/;"	enumerator	line:454	language:C++	enum:fa::icon
mailforward	QtAwesome.h	/^      mailforward                      = 0xf064,$/;"	enumerator	line:455	language:C++	enum:fa::icon
mailreply	QtAwesome.h	/^      mailreply                        = 0xf112,$/;"	enumerator	line:456	language:C++	enum:fa::icon
mailreplyall	QtAwesome.h	/^      mailreplyall                     = 0xf122,$/;"	enumerator	line:457	language:C++	enum:fa::icon
main	im2model.cpp	/^int main(int argc, char** argv ){$/;"	function	line:43	language:C++
main	im2model_gui.cpp	/^int main(int argc, char *argv[]){$/;"	function	line:80	language:C++
male	QtAwesome.h	/^      male                             = 0xf183,$/;"	enumerator	line:458	language:C++	enum:fa::icon
map	QtAwesome.h	/^      map                              = 0xf279,$/;"	enumerator	line:459	language:C++	enum:fa::icon
mapmarker	QtAwesome.h	/^      mapmarker                        = 0xf041,$/;"	enumerator	line:460	language:C++	enum:fa::icon
mapo	QtAwesome.h	/^      mapo                             = 0xf278,$/;"	enumerator	line:461	language:C++	enum:fa::icon
mappin	QtAwesome.h	/^      mappin                           = 0xf276,$/;"	enumerator	line:462	language:C++	enum:fa::icon
mapsigns	QtAwesome.h	/^      mapsigns                         = 0xf277,$/;"	enumerator	line:463	language:C++	enum:fa::icon
mark_runned_time	group_options.cpp	/^void group_options::mark_runned_time(){$/;"	function	line:137	language:C++	class:group_options
mars	QtAwesome.h	/^      mars                             = 0xf222,$/;"	enumerator	line:464	language:C++	enum:fa::icon
marsdouble	QtAwesome.h	/^      marsdouble                       = 0xf227,$/;"	enumerator	line:465	language:C++	enum:fa::icon
marsstroke	QtAwesome.h	/^      marsstroke                       = 0xf229,$/;"	enumerator	line:466	language:C++	enum:fa::icon
marsstrokeh	QtAwesome.h	/^      marsstrokeh                      = 0xf22b,$/;"	enumerator	line:467	language:C++	enum:fa::icon
marsstrokev	QtAwesome.h	/^      marsstrokev                      = 0xf22a,$/;"	enumerator	line:468	language:C++	enum:fa::icon
match_values_matrix	simgrid.hpp	/^    cv::Mat match_values_matrix;$/;"	member	line:80	language:C++	class:SimGrid	access:private
matrix	vis/camera.cpp	/^glm::mat4 Camera::matrix() const {$/;"	function	line:141	language:C++	class:Camera
max_a_atom_pos	base_cell.hpp	/^    double min_a_atom_pos, max_a_atom_pos;$/;"	member	line:102	language:C++	class:BaseCell	access:protected
max_b_atom_pos	base_cell.hpp	/^    double min_b_atom_pos, max_b_atom_pos;$/;"	member	line:103	language:C++	class:BaseCell	access:protected
max_c_atom_pos	base_cell.hpp	/^    double min_c_atom_pos, max_c_atom_pos;$/;"	member	line:104	language:C++	class:BaseCell	access:protected
max_contour_distance_px	image_bounds.hpp	/^    int max_contour_distance_px = 19;$/;"	member	line:63	language:C++	class:ImageBounds	access:protected
max_contour_distance_px_range_bottom_limit	image_bounds.hpp	/^    int max_contour_distance_px_range_bottom_limit = 1;$/;"	member	line:67	language:C++	class:ImageBounds	access:protected
max_contour_distance_px_range_top_limit	image_bounds.hpp	/^    int max_contour_distance_px_range_top_limit = 255;$/;"	member	line:68	language:C++	class:ImageBounds	access:protected
maxcdn	QtAwesome.h	/^      maxcdn                           = 0xf136,$/;"	enumerator	line:469	language:C++	enum:fa::icon
maybeSave	configwin.cpp	/^bool MainWindow::maybeSave(){$/;"	function	line:889	language:C++	class:MainWindow
maybeSetPreferences	configwin.cpp	/^bool MainWindow::maybeSetPreferences(){$/;"	function	line:255	language:C++	class:MainWindow
maybeSetProject	configwin.cpp	/^bool MainWindow::maybeSetProject(){$/;"	function	line:915	language:C++	class:MainWindow
meanpath	QtAwesome.h	/^      meanpath                         = 0xf20c,$/;"	enumerator	line:470	language:C++	enum:fa::icon
medium	QtAwesome.h	/^      medium                           = 0xf23a,$/;"	enumerator	line:471	language:C++	enum:fa::icon
medkit	QtAwesome.h	/^      medkit                           = 0xf0fa,$/;"	enumerator	line:472	language:C++	enum:fa::icon
meetup	QtAwesome.h	/^      meetup                           = 0xf2e0,$/;"	enumerator	line:473	language:C++	enum:fa::icon
meho	QtAwesome.h	/^      meho                             = 0xf11a,$/;"	enumerator	line:474	language:C++	enum:fa::icon
meltingPoint	atom_info.cpp	/^double Atom_Info::meltingPoint()  {$/;"	function	line:61	language:C++	class:Atom_Info
memb_name	emd_group.h	/^    char memb_name[MAX_NAME];$/;"	member	line:72	language:C++	class:EMDGroup	access:private
mercury	QtAwesome.h	/^      mercury                          = 0xf223,$/;"	enumerator	line:475	language:C++	enum:fa::icon
mergeOptions	QtAwesome.cpp	/^static QVariantMap mergeOptions( const QVariantMap& defaults, const QVariantMap& override )$/;"	function	line:1025	language:C++	file:
microchip	QtAwesome.h	/^      microchip                        = 0xf2db,$/;"	enumerator	line:476	language:C++	enum:fa::icon
microphone	QtAwesome.h	/^      microphone                       = 0xf130,$/;"	enumerator	line:477	language:C++	enum:fa::icon
microphoneslash	QtAwesome.h	/^      microphoneslash                  = 0xf131,$/;"	enumerator	line:478	language:C++	enum:fa::icon
min_a_atom_pos	base_cell.hpp	/^    double min_a_atom_pos, max_a_atom_pos;$/;"	member	line:102	language:C++	class:BaseCell	access:protected
min_b_atom_pos	base_cell.hpp	/^    double min_b_atom_pos, max_b_atom_pos;$/;"	member	line:103	language:C++	class:BaseCell	access:protected
min_c_atom_pos	base_cell.hpp	/^    double min_c_atom_pos, max_c_atom_pos;$/;"	member	line:104	language:C++	class:BaseCell	access:protected
min_height_px	base_cell.hpp	/^    int min_height_px;$/;"	member	line:130	language:C++	class:BaseCell	access:protected
min_width_px	base_cell.hpp	/^    int min_width_px;$/;"	member	line:129	language:C++	class:BaseCell	access:protected
minimumSizeHint	cv_image_widget.cpp	/^QSize CVImageWidget::minimumSizeHint() const {$/;"	function	line:12	language:C++	class:CVImageWidget
minimumSizeHint	renderarea.cpp	/^QSize RenderArea::minimumSizeHint() const$/;"	function	line:13	language:C++	class:RenderArea
minimum_number_frozen_phonon_configurations_used_generate_wave_functions	msa_prm.hpp	/^    int minimum_number_frozen_phonon_configurations_used_generate_wave_functions = 0;$/;"	member	line:35	language:C++	class:MSA_prm	access:private
minus	QtAwesome.h	/^      minus                            = 0xf068,$/;"	enumerator	line:479	language:C++	enum:fa::icon
minuscircle	QtAwesome.h	/^      minuscircle                      = 0xf056,$/;"	enumerator	line:480	language:C++	enum:fa::icon
minussquare	QtAwesome.h	/^      minussquare                      = 0xf146,$/;"	enumerator	line:481	language:C++	enum:fa::icon
minussquareo	QtAwesome.h	/^      minussquareo                     = 0xf147,$/;"	enumerator	line:482	language:C++	enum:fa::icon
mixcloud	QtAwesome.h	/^      mixcloud                         = 0xf289,$/;"	enumerator	line:483	language:C++	enum:fa::icon
mobile	QtAwesome.h	/^      mobile                           = 0xf10b,$/;"	enumerator	line:484	language:C++	enum:fa::icon
mobilephone	QtAwesome.h	/^      mobilephone                      = 0xf10b,$/;"	enumerator	line:485	language:C++	enum:fa::icon
modx	QtAwesome.h	/^      modx                             = 0xf285,$/;"	enumerator	line:486	language:C++	enum:fa::icon
money	QtAwesome.h	/^      money                            = 0xf0d6,$/;"	enumerator	line:487	language:C++	enum:fa::icon
moono	QtAwesome.h	/^      moono                            = 0xf186,$/;"	enumerator	line:488	language:C++	enum:fa::icon
mortarboard	QtAwesome.h	/^      mortarboard                      = 0xf19d,$/;"	enumerator	line:489	language:C++	enum:fa::icon
motorcycle	QtAwesome.h	/^      motorcycle                       = 0xf21c,$/;"	enumerator	line:490	language:C++	enum:fa::icon
mousepointer	QtAwesome.h	/^      mousepointer                     = 0xf245,$/;"	enumerator	line:491	language:C++	enum:fa::icon
msa_step_group_options	configwin.h	/^    group_options* msa_step_group_options;$/;"	member	line:269	language:C++	class:MainWindow	access:private
msa_step_group_options	td_map.hpp	/^    group_options* msa_step_group_options;$/;"	member	line:92	language:C++	class:TDMap	access:private
mtf_filename	wavimg_prm.hpp	/^    std::string mtf_filename;$/;"	member	line:65	language:C++	class:WAVIMG_prm	access:private
mtf_simulation_switch	wavimg_prm.hpp	/^    bool mtf_simulation_switch = false;$/;"	member	line:63	language:C++	class:WAVIMG_prm	access:private
music	QtAwesome.h	/^      music                            = 0xf001,$/;"	enumerator	line:492	language:C++	enum:fa::icon
mutex	gui_sim_updater.hpp	/^    QMutex mutex;$/;"	member	line:133	language:C++	class:GuiSimOutUpdater	access:private
myQDebugMessageHandler	gui_stream.hpp	/^    static void myQDebugMessageHandler(QtMsgType, const QMessageLogContext &, const QString &msg)$/;"	function	line:32	language:C++	class:Q_GUI_Stream	access:private
name	QtAwesome.cpp	/^  const char *name;$/;"	member	line:161	language:C++	struct:FANameIcon	file:	access:public
name	atom_info.cpp	/^std::string Atom_Info::name() {$/;"	function	line:41	language:C++	class:Atom_Info
name	emd_object.h	/^    std::string name;$/;"	member	line:33	language:C++	class:EMDObject	access:protected
namedCodePoints	QtAwesome.h	/^    QHash<QString,int> namedCodePoints() { return namedCodepoints_; }$/;"	function	line:836	language:C++	class:QtAwesome	access:public
namedCodepoints_	QtAwesome.h	/^    QHash<QString,int> namedCodepoints_;                   \/\/\/< A map with names mapped to code-points$/;"	member	line:854	language:C++	class:QtAwesome	access:private
navicon	QtAwesome.h	/^      navicon                          = 0xf0c9,$/;"	enumerator	line:493	language:C++	enum:fa::icon
nearPlane	vis/camera.cpp	/^float Camera::nearPlane() const {$/;"	function	line:81	language:C++	class:Camera
neuter	QtAwesome.h	/^      neuter                           = 0xf22c,$/;"	enumerator	line:494	language:C++	enum:fa::icon
newFile	configwin.cpp	/^void MainWindow::newFile(){$/;"	function	line:600	language:C++	class:MainWindow
newSuperCellEdge	gui_sim_updater.hpp	/^      void newSuperCellEdge() {$/;"	function	line:29	language:C++	class:GuiSimOutUpdater	access:public
newTDMapSim	gui_sim_updater.hpp	/^    void newTDMapSim() {$/;"	function	line:51	language:C++	class:GuiSimOutUpdater	access:public
newspapero	QtAwesome.h	/^      newspapero                       = 0xf1ea,$/;"	enumerator	line:495	language:C++	enum:fa::icon
nfilters	emd_dataset.h	/^    int nfilters;$/;"	member	line:45	language:C++	class:EMDDataSet	access:protected
nm_lower_bound	base_crystal.hpp	/^    double nm_lower_bound = 0.0f;$/;"	member	line:110	language:C++	class:BaseCrystal	access:protected
nm_upper_bound	base_crystal.hpp	/^    double nm_upper_bound = 0.0f;$/;"	member	line:112	language:C++	class:BaseCrystal	access:protected
nobj	emd_object.h	/^    hsize_t nobj;$/;"	member	line:36	language:C++	class:EMDObject	access:protected
non_looped_items	mc_driver.hpp	/^      std::map<std::string,std::string> non_looped_items;$/;"	member	line:49	language:C++	class:MC::MC_Driver	access:protected
norm	mc_driver.hpp	/^      const std::string norm  = "\\033[0m";$/;"	member	line:56	language:C++	class:MC::MC_Driver	access:private
normal	application_log.hpp	/^    normal,$/;"	enumerator	line:28	language:C++	enum:ApplicationLog::severity_level
normalSize	cv_image_widget.cpp	/^void CVImageWidget::normalSize(){$/;"	function	line:30	language:C++	class:CVImageWidget
normalizeAngles	vis/camera.cpp	/^void Camera::normalizeAngles() {$/;"	function	line:160	language:C++	class:Camera
notification	application_log.hpp	/^    notification,$/;"	enumerator	line:29	language:C++	enum:ApplicationLog::severity_level
number_frozen_lattice_variants_considered_per_slice	msa_prm.hpp	/^    int number_frozen_lattice_variants_considered_per_slice = 0;$/;"	member	line:34	language:C++	class:MSA_prm	access:private
number_image_aberrations_set	wavimg_prm.hpp	/^    int number_image_aberrations_set;$/;"	member	line:73	language:C++	class:WAVIMG_prm	access:private
number_parameter_loops	wavimg_prm.hpp	/^    int number_parameter_loops;$/;"	member	line:85	language:C++	class:WAVIMG_prm	access:private
nz_simulated_partitions	base_crystal.hpp	/^    int nz_simulated_partitions = 0;$/;"	member	line:51	language:C++	class:BaseCrystal	access:protected
nz_switch	base_crystal.hpp	/^    bool nz_switch = false;$/;"	member	line:53	language:C++	class:BaseCrystal	access:protected
object	vis/program.cpp	/^GLuint Program::object() const {$/;"	function	line:53	language:C++	class:Program
object	vis/shader.cpp	/^GLuint Shader::object() const {$/;"	function	line:60	language:C++	class:Shader
object_tilt_x_component	msa_prm.hpp	/^    double object_tilt_x_component = 0.0f;$/;"	member	line:29	language:C++	class:MSA_prm	access:private
object_tilt_y_component	msa_prm.hpp	/^    double object_tilt_y_component = 0.0f;$/;"	member	line:30	language:C++	class:MSA_prm	access:private
objectgroup	QtAwesome.h	/^      objectgroup                      = 0xf247,$/;"	enumerator	line:496	language:C++	enum:fa::icon
objective_aperture_radius	wavimg_prm.hpp	/^    double objective_aperture_radius = 0.0f;$/;"	member	line:80	language:C++	class:WAVIMG_prm	access:private
objectungroup	QtAwesome.h	/^      objectungroup                    = 0xf248,$/;"	enumerator	line:497	language:C++	enum:fa::icon
odnoklassniki	QtAwesome.h	/^      odnoklassniki                    = 0xf263,$/;"	enumerator	line:498	language:C++	enum:fa::icon
odnoklassnikisquare	QtAwesome.h	/^      odnoklassnikisquare              = 0xf264,$/;"	enumerator	line:499	language:C++	enum:fa::icon
offsetOrientation	vis/camera.cpp	/^void Camera::offsetOrientation(float upAngle, float rightAngle) {$/;"	function	line:103	language:C++	class:Camera
offsetPosition	vis/camera.cpp	/^void Camera::offsetPosition(const glm::vec3& offset) {$/;"	function	line:68	language:C++	class:Camera
on_buttonBox_accepted	settings.cpp	/^void Settings::on_buttonBox_accepted()$/;"	function	line:64	language:C++	class:Settings
on_qpush_apply_edge_detection_clicked	configwin.cpp	/^void MainWindow::on_qpush_apply_edge_detection_clicked(){$/;"	function	line:2029	language:C++	class:MainWindow
on_qpush_run_tdmap_clicked	configwin.cpp	/^void MainWindow::on_qpush_run_tdmap_clicked(){$/;"	function	line:2077	language:C++	class:MainWindow
on_qpush_test_tdmap_clicked	configwin.cpp	/^void MainWindow::on_qpush_test_tdmap_clicked(){$/;"	function	line:2035	language:C++	class:MainWindow
open	configwin.cpp	/^void MainWindow::open(){$/;"	function	line:606	language:C++	class:MainWindow
opencart	QtAwesome.h	/^      opencart                         = 0xf23d,$/;"	enumerator	line:500	language:C++	enum:fa::icon
openid	QtAwesome.h	/^      openid                           = 0xf19b,$/;"	enumerator	line:501	language:C++	enum:fa::icon
opera	QtAwesome.h	/^      opera                            = 0xf26a,$/;"	enumerator	line:502	language:C++	enum:fa::icon
operator <<	base_image.cpp	/^std::ostream& operator<<(std::ostream& stream,$/;"	function	line:310	language:C++
operator <<	image_bounds.cpp	/^std::ostream& operator<<(std::ostream& stream, const ImageBounds& var) {$/;"	function	line:260	language:C++
operator <<	super_cell.cpp	/^std::ostream& operator<<(std::ostream& stream, const SuperCell& var) {$/;"	function	line:34	language:C++
operator <<	wavimg_prm.cpp	/^std::ostream& operator<<(std::ostream& stream, const WAVIMG_prm& var) {$/;"	function	line:720	language:C++
operator =	vis/shader.cpp	/^Shader& Shader::operator = (const Shader& other) {$/;"	function	line:64	language:C++	class:Shader
optinmonster	QtAwesome.h	/^      optinmonster                     = 0xf23c,$/;"	enumerator	line:503	language:C++	enum:fa::icon
options_	QtAwesome.cpp	/^    QVariantMap options_;                    \/\/\/< the options for this icon painter$/;"	member	line:119	language:C++	class:QtAwesomeIconPainterIconEngine	file:	access:private
orientation	vis/camera.cpp	/^glm::mat4 Camera::orientation() const {$/;"	function	line:96	language:C++	class:Camera
orientation_matrix	base_cell.hpp	/^    cv::Mat orientation_matrix;$/;"	member	line:124	language:C++	class:BaseCell	access:protected
original_size	cv_image_widget.h	/^    cv::Size original_size;$/;"	member	line:67	language:C++	class:CVImageWidget	access:private
otype	emd_object.h	/^    int otype;$/;"	member	line:38	language:C++	class:EMDObject	access:protected
outdent	QtAwesome.h	/^      outdent                          = 0xf03b,$/;"	enumerator	line:504	language:C++	enum:fa::icon
output	base_bin.cpp	/^std::ostream& BaseBin::output(std::ostream& stream) const {$/;"	function	line:98	language:C++	class:BaseBin
output	base_crystal.cpp	/^std::ostream& BaseCrystal::output(std::ostream& stream) const {$/;"	function	line:418	language:C++	class:BaseCrystal
output	base_image.cpp	/^std::ostream& BaseImage::output(std::ostream& stream) const {$/;"	function	line:316	language:C++	class:BaseImage
output	image_bounds.cpp	/^std::ostream& ImageBounds::output(std::ostream& stream) const {$/;"	function	line:265	language:C++	class:ImageBounds
output	simgrid.cpp	/^std::ostream& SimGrid::output(std::ostream& stream) const {$/;"	function	line:717	language:C++	class:SimGrid
output	super_cell.cpp	/^std::ostream& SuperCell::output(std::ostream& stream) const {$/;"	function	line:39	language:C++	class:SuperCell
output	wavimg_prm.cpp	/^std::ostream& WAVIMG_prm::output(std::ostream& stream) const {$/;"	function	line:725	language:C++	class:WAVIMG_prm
overflow	gui_stream.hpp	/^    virtual int_type overflow(int_type v)$/;"	function	line:40	language:C++	class:Q_GUI_Stream	access:protected
override	configwin.h	/^    void closeEvent(QCloseEvent *event) override;$/;"	member	line:89	language:C++	class:MainWindow	access:protected
override	cv_tdmap_cell_image_frame_delegate.h	/^    void paint(QPainter *painter, const QStyleOptionViewItem &option, const QModelIndex &index) const override;$/;"	member	line:33	language:C++	class:CvTDMapImageFrameDelegate	access:public
override	renderarea.h	/^    QSize minimumSizeHint() const override;$/;"	member	line:65	language:C++	class:RenderArea	access:public
override	renderarea.h	/^    QSize sizeHint() const override;$/;"	member	line:66	language:C++	class:RenderArea	access:public
override	renderarea.h	/^    void paintEvent(QPaintEvent *event) override;$/;"	member	line:63	language:C++	class:RenderArea	access:public
override	treemodel.h	/^    QModelIndex index(int row, int column, const QModelIndex &parent = QModelIndex()) const override;$/;"	member	line:23	language:C++	class:TreeModel	access:public
override	treemodel.h	/^    QModelIndex parent(const QModelIndex &index) const override;$/;"	member	line:24	language:C++	class:TreeModel	access:public
override	treemodel.h	/^    QVariant data(const QModelIndex &index, int role) const override;$/;"	member	line:21	language:C++	class:TreeModel	access:public
override	treemodel.h	/^    QVariant headerData(int section, Qt::Orientation orientation, int role = Qt::DisplayRole) const override;$/;"	member	line:22	language:C++	class:TreeModel	access:public
override	treemodel.h	/^    Qt::ItemFlags flags(const QModelIndex &index) const override;$/;"	member	line:33	language:C++	class:TreeModel	access:public
override	treemodel.h	/^    bool insertColumns(int position, int columns, const QModelIndex &parent = QModelIndex()) override;$/;"	member	line:38	language:C++	class:TreeModel	access:public
override	treemodel.h	/^    bool insertRows(int position, int rows, const QModelIndex &parent = QModelIndex()) override;$/;"	member	line:40	language:C++	class:TreeModel	access:public
override	treemodel.h	/^    bool removeColumns(int position, int columns, const QModelIndex &parent = QModelIndex()) override;$/;"	member	line:39	language:C++	class:TreeModel	access:public
override	treemodel.h	/^    bool removeRows(int position, int rows, const QModelIndex &parent = QModelIndex()) override;$/;"	member	line:41	language:C++	class:TreeModel	access:public
override	treemodel.h	/^    bool setData(const QModelIndex &index, const QVariant &value, int role = Qt::EditRole) override;$/;"	member	line:34	language:C++	class:TreeModel	access:public
override	treemodel.h	/^    bool setHeaderData(int section, Qt::Orientation orientation, const QVariant &value, int role = Qt::EditRole) override;$/;"	member	line:37	language:C++	class:TreeModel	access:public
override	treemodel.h	/^    int columnCount(const QModelIndex &parent = QModelIndex()) const override;$/;"	member	line:27	language:C++	class:TreeModel	access:public
override	treemodel.h	/^    int rowCount(const QModelIndex &parent = QModelIndex()) const override;$/;"	member	line:26	language:C++	class:TreeModel	access:public
pagelines	QtAwesome.h	/^      pagelines                        = 0xf18c,$/;"	enumerator	line:505	language:C++	enum:fa::icon
paint	QtAwesome.cpp	/^    virtual void paint( QtAwesome* awesome, QPainter* painter, const QRect& rect, QIcon::Mode mode, QIcon::State state, const QVariantMap& options  )$/;"	function	line:23	language:C++	class:QtAwesomeCharIconPainter	access:public
paint	QtAwesome.cpp	/^    virtual void paint(QPainter* painter, const QRect& rect, QIcon::Mode mode, QIcon::State state)$/;"	function	line:97	language:C++	class:QtAwesomeIconPainterIconEngine	access:public
paint	cv_tdmap_cell_image_frame_delegate.cpp	/^void CvTDMapImageFrameDelegate::paint(QPainter *painter, const QStyleOptionViewItem &option, const QModelIndex &index) const {$/;"	function	line:4	language:C++	class:CvTDMapImageFrameDelegate
paint	treeitem_file_delegate.cpp	/^void TreeItemFileDelegate::paint(QPainter * painter, const QStyleOptionViewItem & option, const QModelIndex & index) const{$/;"	function	line:12	language:C++	class:TreeItemFileDelegate
paintEvent	cv_image_widget.cpp	/^void CVImageWidget::paintEvent(QPaintEvent* event) {$/;"	function	line:166	language:C++	class:CVImageWidget
paintEvent	renderarea.cpp	/^void RenderArea::paintEvent(QPaintEvent *)$/;"	function	line:54	language:C++	class:RenderArea
paintbrush	QtAwesome.h	/^      paintbrush                       = 0xf1fc,$/;"	enumerator	line:506	language:C++	enum:fa::icon
painterMap_	QtAwesome.h	/^    QHash<QString, QtAwesomeIconPainter*> painterMap_;     \/\/\/< A map of custom painters$/;"	member	line:856	language:C++	class:QtAwesome	access:private
paperclip	QtAwesome.h	/^      paperclip                        = 0xf0c6,$/;"	enumerator	line:509	language:C++	enum:fa::icon
paperplane	QtAwesome.h	/^      paperplane                       = 0xf1d8,$/;"	enumerator	line:507	language:C++	enum:fa::icon
paperplaneo	QtAwesome.h	/^      paperplaneo                      = 0xf1d9,$/;"	enumerator	line:508	language:C++	enum:fa::icon
paragraph	QtAwesome.h	/^      paragraph                        = 0xf1dd,$/;"	enumerator	line:510	language:C++	enum:fa::icon
parent	treeitem.cpp	/^TreeItem *TreeItem::parent(){$/;"	function	line:479	language:C++	class:TreeItem
parent	treemodel.cpp	/^QModelIndex TreeModel::parent(const QModelIndex &index) const{$/;"	function	line:116	language:C++	class:TreeModel
parentItem	treeitem.h	/^    TreeItem *parentItem;$/;"	member	line:150	language:C++	class:TreeItem	access:private
parentWidget	cv_image_cell_widget.h	/^    QWidget *parentWidget;$/;"	member	line:75	language:C++	class:CvImageCellWidget	access:protected
parentWidget	cv_image_edge_frame.h	/^    QWidget *parentWidget;$/;"	member	line:73	language:C++	class:CvImageEdgeFrame	access:protected
parentWidget	cv_image_frame.h	/^    QWidget *parentWidget;$/;"	member	line:35	language:C++	class:CvImageFrameWidget	access:protected
parentWidget	cv_tdmap_cell_image_frame.h	/^    QWidget *parentWidget;$/;"	member	line:29	language:C++	class:CvTDMapImageFrame	access:protected
parentWidgetRef_	QtAwesomeAnim.h	/^    QWidget* parentWidgetRef_;$/;"	member	line:27	language:C++	class:QtAwesomeAnimation	access:private
parse	mc_driver.cpp	/^void MC::MC_Driver::parse( const char * const filename ){$/;"	function	line:22	language:C++	class:MC::MC_Driver
parse	mc_driver.cpp	/^void MC::MC_Driver::parse( std::istream &stream ){$/;"	function	line:33	language:C++	class:MC::MC_Driver
parse_cif	base_cell.cpp	/^bool BaseCell::parse_cif(){$/;"	function	line:19	language:C++	class:BaseCell
parse_helper	mc_driver.cpp	/^void MC::MC_Driver::parse_helper( std::istream &stream ){$/;"	function	line:43	language:C++	class:MC::MC_Driver
parser	mc_driver.hpp	/^      MC::MC_Parser  *parser  = nullptr;$/;"	member	line:47	language:C++	class:MC::MC_Driver	access:protected
partial_spacial_coherence_semi_convergence_angle	wavimg_prm.hpp	/^    double partial_spacial_coherence_semi_convergence_angle;$/;"	member	line:61	language:C++	class:WAVIMG_prm	access:private
partial_spacial_coherence_switch	wavimg_prm.hpp	/^    int partial_spacial_coherence_switch = 0;$/;"	member	line:60	language:C++	class:WAVIMG_prm	access:private
partial_temporal_coherence_focus_spread	wavimg_prm.hpp	/^    double partial_temporal_coherence_focus_spread;$/;"	member	line:58	language:C++	class:WAVIMG_prm	access:private
partial_temporal_coherence_switch	wavimg_prm.hpp	/^    int partial_temporal_coherence_switch = 0;$/;"	member	line:57	language:C++	class:WAVIMG_prm	access:private
paste	QtAwesome.h	/^      paste                            = 0xf0ea,$/;"	enumerator	line:511	language:C++	enum:fa::icon
path	renderarea.h	/^    QPainterPath path;$/;"	member	line:78	language:C++	class:RenderArea	access:private
pause	QtAwesome.h	/^      pause                            = 0xf04c,$/;"	enumerator	line:512	language:C++	enum:fa::icon
pausecircle	QtAwesome.h	/^      pausecircle                      = 0xf28b,$/;"	enumerator	line:513	language:C++	enum:fa::icon
pausecircleo	QtAwesome.h	/^      pausecircleo                     = 0xf28c,$/;"	enumerator	line:514	language:C++	enum:fa::icon
paw	QtAwesome.h	/^      paw                              = 0xf1b0,$/;"	enumerator	line:515	language:C++	enum:fa::icon
paypal	QtAwesome.h	/^      paypal                           = 0xf1ed,$/;"	enumerator	line:516	language:C++	enum:fa::icon
penColor	renderarea.h	/^    QColor penColor;$/;"	member	line:82	language:C++	class:RenderArea	access:private
penWidth	renderarea.h	/^    int penWidth;$/;"	member	line:81	language:C++	class:RenderArea	access:private
pencil	QtAwesome.h	/^      pencil                           = 0xf040,$/;"	enumerator	line:517	language:C++	enum:fa::icon
pencilsquare	QtAwesome.h	/^      pencilsquare                     = 0xf14b,$/;"	enumerator	line:518	language:C++	enum:fa::icon
pencilsquareo	QtAwesome.h	/^      pencilsquareo                    = 0xf044,$/;"	enumerator	line:519	language:C++	enum:fa::icon
percent	QtAwesome.h	/^      percent                          = 0xf295,$/;"	enumerator	line:520	language:C++	enum:fa::icon
period_readout_or_detection_in_units_of_slices	msa_prm.hpp	/^    int period_readout_or_detection_in_units_of_slices = 0;$/;"	member	line:36	language:C++	class:MSA_prm	access:private
phone	QtAwesome.h	/^      phone                            = 0xf095,$/;"	enumerator	line:521	language:C++	enum:fa::icon
phonesquare	QtAwesome.h	/^      phonesquare                      = 0xf098,$/;"	enumerator	line:522	language:C++	enum:fa::icon
photo	QtAwesome.h	/^      photo                            = 0xf03e,$/;"	enumerator	line:523	language:C++	enum:fa::icon
pictureo	QtAwesome.h	/^      pictureo                         = 0xf03e,$/;"	enumerator	line:524	language:C++	enum:fa::icon
piechart	QtAwesome.h	/^      piechart                         = 0xf200,$/;"	enumerator	line:525	language:C++	enum:fa::icon
piedpiper	QtAwesome.h	/^      piedpiper                        = 0xf2ae,$/;"	enumerator	line:526	language:C++	enum:fa::icon
piedpiperalt	QtAwesome.h	/^      piedpiperalt                     = 0xf1a8,$/;"	enumerator	line:527	language:C++	enum:fa::icon
piedpiperpp	QtAwesome.h	/^      piedpiperpp                      = 0xf1a7,$/;"	enumerator	line:528	language:C++	enum:fa::icon
pinterest	QtAwesome.h	/^      pinterest                        = 0xf0d2,$/;"	enumerator	line:529	language:C++	enum:fa::icon
pinterestp	QtAwesome.h	/^      pinterestp                       = 0xf231,$/;"	enumerator	line:530	language:C++	enum:fa::icon
pinterestsquare	QtAwesome.h	/^      pinterestsquare                  = 0xf0d3,$/;"	enumerator	line:531	language:C++	enum:fa::icon
pipeline_update_dependent_items	treeitem.h	/^    std::vector<TreeItem*> pipeline_update_dependent_items;$/;"	member	line:154	language:C++	class:TreeItem	access:private
pixmap	QtAwesome.cpp	/^    virtual QPixmap pixmap(const QSize& size, QIcon::Mode mode, QIcon::State state)$/;"	function	line:104	language:C++	class:QtAwesomeIconPainterIconEngine	access:public
plane	QtAwesome.h	/^      plane                            = 0xf072,$/;"	enumerator	line:532	language:C++	enum:fa::icon
play	QtAwesome.h	/^      play                             = 0xf04b,$/;"	enumerator	line:533	language:C++	enum:fa::icon
playcircle	QtAwesome.h	/^      playcircle                       = 0xf144,$/;"	enumerator	line:534	language:C++	enum:fa::icon
playcircleo	QtAwesome.h	/^      playcircleo                      = 0xf01d,$/;"	enumerator	line:535	language:C++	enum:fa::icon
plug	QtAwesome.h	/^      plug                             = 0xf1e6,$/;"	enumerator	line:536	language:C++	enum:fa::icon
plus	QtAwesome.h	/^      plus                             = 0xf067,$/;"	enumerator	line:537	language:C++	enum:fa::icon
pluscircle	QtAwesome.h	/^      pluscircle                       = 0xf055,$/;"	enumerator	line:538	language:C++	enum:fa::icon
plussquare	QtAwesome.h	/^      plussquare                       = 0xf0fe,$/;"	enumerator	line:539	language:C++	enum:fa::icon
plussquareo	QtAwesome.h	/^      plussquareo                      = 0xf196,$/;"	enumerator	line:540	language:C++	enum:fa::icon
podcast	QtAwesome.h	/^      podcast                          = 0xf2ce,$/;"	enumerator	line:541	language:C++	enum:fa::icon
populate_atom_site	base_cell.cpp	/^bool BaseCell::populate_atom_site( std::map<std::string,std::vector<std::string>> looped_items ){$/;"	function	line:104	language:C++	class:BaseCell
populate_cell	base_cell.cpp	/^bool BaseCell::populate_cell( std::map<std::string,std::string> non_looped_items ){$/;"	function	line:35	language:C++	class:BaseCell
populate_symetry_equiv_pos_as_xyz	base_cell.cpp	/^bool BaseCell::populate_symetry_equiv_pos_as_xyz( std::map<std::string,std::vector<std::string>> looped_items ){$/;"	function	line:179	language:C++	class:BaseCell
position	vis/camera.cpp	/^const glm::vec3& Camera::position() const {$/;"	function	line:28	language:C++	class:Camera
poweroff	QtAwesome.h	/^      poweroff                         = 0xf011,$/;"	enumerator	line:542	language:C++	enum:fa::icon
prepare_bin_ssc	celslc_prm.cpp	/^bool CELSLC_prm::prepare_bin_ssc(){$/;"	function	line:297	language:C++	class:CELSLC_prm
print	QtAwesome.h	/^      print                            = 0xf02f,$/;"	enumerator	line:543	language:C++	enum:fa::icon
print	mc_driver.cpp	/^std::ostream& MC::MC_Driver::print( std::ostream &stream )$/;"	function	line:112	language:C++	class:MC::MC_Driver
print_var_state	base_bin.cpp	/^void BaseBin::print_var_state(){$/;"	function	line:89	language:C++	class:BaseBin
print_var_state	base_crystal.cpp	/^void BaseCrystal::print_var_state(){$/;"	function	line:410	language:C++	class:BaseCrystal
print_var_state	base_image.cpp	/^void BaseImage::print_var_state(){$/;"	function	line:301	language:C++	class:BaseImage
print_var_state	celslc_prm.cpp	/^void CELSLC_prm::print_var_state(){$/;"	function	line:486	language:C++	class:CELSLC_prm
print_var_state	image_bounds.cpp	/^void ImageBounds::print_var_state(){$/;"	function	line:252	language:C++	class:ImageBounds
print_var_state	simgrid.cpp	/^void SimGrid::print_var_state(){$/;"	function	line:709	language:C++	class:SimGrid
print_var_state	super_cell.cpp	/^void SuperCell::print_var_state(){$/;"	function	line:26	language:C++	class:SuperCell
print_var_state	wavimg_prm.cpp	/^void WAVIMG_prm::print_var_state(){$/;"	function	line:712	language:C++	class:WAVIMG_prm
prm_filename	msa_prm.hpp	/^    std::string prm_filename;$/;"	member	line:40	language:C++	class:MSA_prm	access:private
prm_filename	wavimg_prm.hpp	/^    std::string prm_filename;$/;"	member	line:99	language:C++	class:WAVIMG_prm	access:private
prm_filename_path	msa_prm.hpp	/^    std::string prm_filename_path;$/;"	member	line:43	language:C++	class:MSA_prm	access:private
prm_filename_path	wavimg_prm.hpp	/^    std::string prm_filename_path;$/;"	member	line:102	language:C++	class:WAVIMG_prm	access:private
produce_prm	msa_prm.cpp	/^bool MSA_prm::produce_prm () {$/;"	function	line:270	language:C++	class:MSA_prm
produce_prm	wavimg_prm.cpp	/^bool WAVIMG_prm::produce_prm ( ) {$/;"	function	line:10	language:C++	class:WAVIMG_prm
produce_settings_panel	settings.cpp	/^void Settings::produce_settings_panel(){$/;"	function	line:73	language:C++	class:Settings
producthunt	QtAwesome.h	/^      producthunt                      = 0xf288,$/;"	enumerator	line:544	language:C++	enum:fa::icon
project_dir_path	td_map.hpp	/^    boost::filesystem::path project_dir_path;$/;"	member	line:37	language:C++	class:TDMap	access:private
project_filename	td_map.hpp	/^    std::string project_filename;$/;"	member	line:39	language:C++	class:TDMap	access:private
project_filename_with_path	td_map.hpp	/^    boost::filesystem::path project_filename_with_path;$/;"	member	line:38	language:C++	class:TDMap	access:private
project_preferences_model	settings.h	/^    TreeModel *project_preferences_model;$/;"	member	line:77	language:C++	class:Settings	access:private
project_setup_crystalographic_fields_model	configwin.h	/^    TreeModel *project_setup_crystalographic_fields_model;$/;"	member	line:159	language:C++	class:MainWindow	access:private
project_setup_image_fields_model	configwin.h	/^    TreeModel *project_setup_image_fields_model;$/;"	member	line:158	language:C++	class:MainWindow	access:private
project_setup_image_fields_model_index	configwin.h	/^    QModelIndex project_setup_image_fields_model_index;$/;"	member	line:168	language:C++	class:MainWindow	access:private
projected_y_axis	base_crystal.hpp	/^    cv::Point3d  projected_y_axis = cv::Point3d( 0.0f, 1.0f, 0.0f );$/;"	member	line:55	language:C++	class:BaseCrystal	access:protected
projected_y_axis	configwin.h	/^  TreeItem* projected_y_axis = nullptr;$/;"	member	line:232	language:C++	class:MainWindow	access:private
projected_y_axis_u	base_crystal.hpp	/^    double projected_y_axis_u = 0.0f;$/;"	member	line:56	language:C++	class:BaseCrystal	access:protected
projected_y_axis_u	configwin.h	/^  TreeItem* projected_y_axis_u = nullptr;$/;"	member	line:233	language:C++	class:MainWindow	access:private
projected_y_axis_v	base_crystal.hpp	/^    double projected_y_axis_v = 1.0f;$/;"	member	line:57	language:C++	class:BaseCrystal	access:protected
projected_y_axis_v	configwin.h	/^  TreeItem* projected_y_axis_v = nullptr;$/;"	member	line:234	language:C++	class:MainWindow	access:private
projected_y_axis_w	base_crystal.hpp	/^    double projected_y_axis_w = 0.0f;$/;"	member	line:58	language:C++	class:BaseCrystal	access:protected
projected_y_axis_w	configwin.h	/^  TreeItem* projected_y_axis_w = nullptr;$/;"	member	line:235	language:C++	class:MainWindow	access:private
projection	vis/camera.cpp	/^glm::mat4 Camera::projection() const {$/;"	function	line:145	language:C++	class:Camera
projection_direction	configwin.h	/^  TreeItem* projection_direction = nullptr;$/;"	member	line:228	language:C++	class:MainWindow	access:private
projection_direction_h	configwin.h	/^  TreeItem* projection_direction_h = nullptr;$/;"	member	line:229	language:C++	class:MainWindow	access:private
projection_direction_k	configwin.h	/^  TreeItem* projection_direction_k = nullptr;$/;"	member	line:230	language:C++	class:MainWindow	access:private
projection_direction_l	configwin.h	/^  TreeItem* projection_direction_l = nullptr;$/;"	member	line:231	language:C++	class:MainWindow	access:private
puzzlepiece	QtAwesome.h	/^      puzzlepiece                      = 0xf12e,$/;"	enumerator	line:545	language:C++	enum:fa::icon
qq	QtAwesome.h	/^      qq                               = 0xf1d6,$/;"	enumerator	line:546	language:C++	enum:fa::icon
qrcode	QtAwesome.h	/^      qrcode                           = 0xf029,$/;"	enumerator	line:547	language:C++	enum:fa::icon
question	QtAwesome.h	/^      question                         = 0xf128,$/;"	enumerator	line:548	language:C++	enum:fa::icon
questioncircle	QtAwesome.h	/^      questioncircle                   = 0xf059,$/;"	enumerator	line:549	language:C++	enum:fa::icon
questioncircleo	QtAwesome.h	/^      questioncircleo                  = 0xf29c,$/;"	enumerator	line:550	language:C++	enum:fa::icon
quora	QtAwesome.h	/^      quora                            = 0xf2c4,$/;"	enumerator	line:551	language:C++	enum:fa::icon
quoteleft	QtAwesome.h	/^      quoteleft                        = 0xf10d,$/;"	enumerator	line:552	language:C++	enum:fa::icon
quoteright	QtAwesome.h	/^      quoteright                       = 0xf10e,$/;"	enumerator	line:553	language:C++	enum:fa::icon
ra	QtAwesome.h	/^      ra                               = 0xf1d0,$/;"	enumerator	line:554	language:C++	enum:fa::icon
random	QtAwesome.h	/^      random                           = 0xf074,$/;"	enumerator	line:555	language:C++	enum:fa::icon
rank_chunk	emd_dataset.h	/^    int  rank_chunk;$/;"	member	line:44	language:C++	class:EMDDataSet	access:protected
rasmolColor	atom_info.cpp	/^cv::Vec4d Atom_Info::rasmolColor() {$/;"	function	line:122	language:C++	class:Atom_Info
ravelry	QtAwesome.h	/^      ravelry                          = 0xf2d9,$/;"	enumerator	line:556	language:C++	enum:fa::icon
raw_data	emd_dataset.h	/^    std::vector<unsigned char> raw_data;$/;"	member	line:49	language:C++	class:EMDDataSet	access:protected
raw_simulated_images_grid	simgrid.hpp	/^    std::vector< std::vector<cv::Mat> > raw_simulated_images_grid;$/;"	member	line:69	language:C++	class:SimGrid	access:private
ray_cast	edge.hpp	/^  bool ray_cast( const cv::Point3d& p ){$/;"	function	line:22	language:C++	struct:Edge	access:public
readSettings	configwin.cpp	/^bool MainWindow::readSettings(){$/;"	function	line:855	language:C++	class:MainWindow
read_emd	emd_wrapper.cpp	/^bool EMDWrapper::read_emd( std::string filename ){$/;"	function	line:9	language:C++	class:EMDWrapper
read_grid_from_dat_files	simgrid.cpp	/^bool SimGrid::read_grid_from_dat_files(){$/;"	function	line:334	language:C++	class:SimGrid
readout_noise_rms_amplitude	wavimg_prm.hpp	/^    double readout_noise_rms_amplitude = 0.0f;$/;"	member	line:39	language:C++	class:WAVIMG_prm	access:private
rebel	QtAwesome.h	/^      rebel                            = 0xf1d0,$/;"	enumerator	line:557	language:C++	enum:fa::icon
recycle	QtAwesome.h	/^      recycle                          = 0xf1b8,$/;"	enumerator	line:558	language:C++	enum:fa::icon
red	mc_driver.hpp	/^      const std::string red   = "\\033[1;31m";$/;"	member	line:54	language:C++	class:MC::MC_Driver	access:private
reddit	QtAwesome.h	/^      reddit                           = 0xf1a1,$/;"	enumerator	line:559	language:C++	enum:fa::icon
redditalien	QtAwesome.h	/^      redditalien                      = 0xf281,$/;"	enumerator	line:560	language:C++	enum:fa::icon
redditsquare	QtAwesome.h	/^      redditsquare                     = 0xf1a2,$/;"	enumerator	line:561	language:C++	enum:fa::icon
refresh	QtAwesome.h	/^      refresh                          = 0xf021,$/;"	enumerator	line:562	language:C++	enum:fa::icon
registerQDebugMessageHandler	gui_stream.hpp	/^    static void registerQDebugMessageHandler(){$/;"	function	line:26	language:C++	class:Q_GUI_Stream	access:public
registered	QtAwesome.h	/^      registered                       = 0xf25d,$/;"	enumerator	line:563	language:C++	enum:fa::icon
remove	QtAwesome.h	/^      remove                           = 0xf00d,$/;"	enumerator	line:564	language:C++	enum:fa::icon
removeChildren	treeitem.cpp	/^bool TreeItem::removeChildren(int position, int count){$/;"	function	line:488	language:C++	class:TreeItem
removeColumns	treeitem.cpp	/^bool TreeItem::removeColumns(int position, int columns){$/;"	function	line:500	language:C++	class:TreeItem
removeColumns	treemodel.cpp	/^bool TreeModel::removeColumns(int position, int columns, const QModelIndex &parent){$/;"	function	line:130	language:C++	class:TreeModel
removeRows	treemodel.cpp	/^bool TreeModel::removeRows(int position, int rows, const QModelIndex &parent){$/;"	function	line:144	language:C++	class:TreeModel
renderAreas	cv_image_widget.h	/^    QList<QPainterPath> renderAreas;$/;"	member	line:56	language:C++	class:CVImageWidget	access:private
renderAreas_default_color	cv_image_widget.h	/^    cv::Vec3b renderAreas_default_color = cv::Vec3b(255,0,0);$/;"	member	line:62	language:C++	class:CVImageWidget	access:private
renderAreas_description	cv_image_widget.h	/^    QList<QString> renderAreas_description;$/;"	member	line:58	language:C++	class:CVImageWidget	access:private
renderAreas_penColor	cv_image_widget.h	/^    QList<QColor> renderAreas_penColor;$/;"	member	line:60	language:C++	class:CVImageWidget	access:private
renderAreas_penWidth	cv_image_widget.h	/^    QList<int> renderAreas_penWidth;$/;"	member	line:57	language:C++	class:CVImageWidget	access:private
renderAreas_top_left	cv_image_widget.h	/^    std::vector<cv::Point2i> renderAreas_top_left;$/;"	member	line:61	language:C++	class:CVImageWidget	access:private
renderAreas_visible	cv_image_widget.h	/^    QList<bool> renderAreas_visible;$/;"	member	line:59	language:C++	class:CVImageWidget	access:private
renren	QtAwesome.h	/^      renren                           = 0xf18b,$/;"	enumerator	line:565	language:C++	enum:fa::icon
reorder	QtAwesome.h	/^      reorder                          = 0xf0c9,$/;"	enumerator	line:566	language:C++	enum:fa::icon
repeat	QtAwesome.h	/^      repeat                           = 0xf01e,$/;"	enumerator	line:567	language:C++	enum:fa::icon
reply	QtAwesome.h	/^      reply                            = 0xf112,$/;"	enumerator	line:568	language:C++	enum:fa::icon
replyall	QtAwesome.h	/^      replyall                         = 0xf122,$/;"	enumerator	line:569	language:C++	enum:fa::icon
requestSuperCellEdge	gui_sim_updater.hpp	/^    void requestSuperCellEdge(){$/;"	function	line:89	language:C++	class:GuiSimOutUpdater	access:public
requestTDMap	gui_sim_updater.hpp	/^    void requestTDMap(){$/;"	function	line:80	language:C++	class:GuiSimOutUpdater	access:public
resistance	QtAwesome.h	/^      resistance                       = 0xf1d0,$/;"	enumerator	line:570	language:C++	enum:fa::icon
resizeEvent	gui_tdmap_table.cpp	/^void TDMap_Table::resizeEvent(QResizeEvent* ev) {$/;"	function	line:28	language:C++	class:TDMap_Table
retweet	QtAwesome.h	/^      retweet                          = 0xf079,$/;"	enumerator	line:571	language:C++	enum:fa::icon
right	vis/camera.cpp	/^glm::vec3 Camera::right() const {$/;"	function	line:131	language:C++	class:Camera
rmb	QtAwesome.h	/^      rmb                              = 0xf157,$/;"	enumerator	line:572	language:C++	enum:fa::icon
road	QtAwesome.h	/^      road                             = 0xf018,$/;"	enumerator	line:573	language:C++	enum:fa::icon
rocket	QtAwesome.h	/^      rocket                           = 0xf135,$/;"	enumerator	line:574	language:C++	enum:fa::icon
roi_boundary_image	image_bounds.hpp	/^    cv::Mat roi_boundary_image;$/;"	member	line:85	language:C++	class:ImageBounds	access:protected
roi_boundary_image_w_margin	image_bounds.hpp	/^    cv::Mat roi_boundary_image_w_margin;$/;"	member	line:97	language:C++	class:ImageBounds	access:protected
roi_boundary_polygon	image_bounds.hpp	/^    std::vector<cv::Point2i> roi_boundary_polygon;$/;"	member	line:81	language:C++	class:ImageBounds	access:protected
roi_boundary_polygon_w_margin	image_bounds.hpp	/^    std::vector<cv::Point2i> roi_boundary_polygon_w_margin;$/;"	member	line:93	language:C++	class:ImageBounds	access:protected
roi_boundary_rect	image_bounds.hpp	/^    cv::Rect roi_boundary_rect;$/;"	member	line:83	language:C++	class:ImageBounds	access:protected
roi_boundary_rect_w_margin	image_bounds.hpp	/^    cv::Rect roi_boundary_rect_w_margin;$/;"	member	line:95	language:C++	class:ImageBounds	access:protected
roi_center_x	base_image.hpp	/^    int roi_center_x;$/;"	member	line:92	language:C++	class:BaseImage	access:protected
roi_center_x	deprecated/image_crystal.hpp	/^    int roi_center_x;$/;"	member	line:43	language:C++	class:Image_Crystal	access:private
roi_center_y	base_image.hpp	/^    int roi_center_y;$/;"	member	line:94	language:C++	class:BaseImage	access:protected
roi_center_y	deprecated/image_crystal.hpp	/^    int roi_center_y;$/;"	member	line:45	language:C++	class:Image_Crystal	access:private
roi_image	base_image.hpp	/^    cv::Mat roi_image;$/;"	member	line:76	language:C++	class:BaseImage	access:protected
roi_left_padding_px	image_bounds.hpp	/^    int roi_left_padding_px = 0;$/;"	member	line:88	language:C++	class:ImageBounds	access:protected
roi_left_padding_px_w_margin	image_bounds.hpp	/^    int roi_left_padding_px_w_margin = 0;$/;"	member	line:90	language:C++	class:ImageBounds	access:protected
roi_n_cols_width	base_image.hpp	/^    int roi_n_cols_width = 0;$/;"	member	line:83	language:C++	class:BaseImage	access:protected
roi_n_rows_height	base_image.hpp	/^    int roi_n_rows_height = 0;$/;"	member	line:81	language:C++	class:BaseImage	access:protected
roi_nm_size_cols_b	base_image.hpp	/^    double roi_nm_size_cols_b = 0.0f;$/;"	member	line:89	language:C++	class:BaseImage	access:protected
roi_nm_size_rows_a	base_image.hpp	/^    double roi_nm_size_rows_a = 0.0f;$/;"	member	line:87	language:C++	class:BaseImage	access:protected
roi_pixel_size	deprecated/image_crystal.hpp	/^    int roi_pixel_size;$/;"	member	line:47	language:C++	class:Image_Crystal	access:private
roi_rectangle	base_image.hpp	/^    cv::Rect roi_rectangle;$/;"	member	line:79	language:C++	class:BaseImage	access:protected
roi_rectangle	deprecated/image_crystal.hpp	/^    cv::Rect roi_rectangle;$/;"	member	line:41	language:C++	class:Image_Crystal	access:private
roi_top_padding_px	image_bounds.hpp	/^    int roi_top_padding_px = 0;$/;"	member	line:89	language:C++	class:ImageBounds	access:protected
roi_top_padding_px_w_margin	image_bounds.hpp	/^    int roi_top_padding_px_w_margin = 0;$/;"	member	line:91	language:C++	class:ImageBounds	access:protected
rootItem	treemodel.h	/^    TreeItem *rootItem;$/;"	member	line:56	language:C++	class:TreeModel	access:private
rotateleft	QtAwesome.h	/^      rotateleft                       = 0xf0e2,$/;"	enumerator	line:575	language:C++	enum:fa::icon
rotateright	QtAwesome.h	/^      rotateright                      = 0xf01e,$/;"	enumerator	line:576	language:C++	enum:fa::icon
rotationAngle	renderarea.h	/^    int rotationAngle;$/;"	member	line:83	language:C++	class:RenderArea	access:private
rouble	QtAwesome.h	/^      rouble                           = 0xf158,$/;"	enumerator	line:577	language:C++	enum:fa::icon
rowCount	treemodel.cpp	/^int TreeModel::rowCount(const QModelIndex &parent) const{$/;"	function	line:155	language:C++	class:TreeModel
rss	QtAwesome.h	/^      rss                              = 0xf09e,$/;"	enumerator	line:578	language:C++	enum:fa::icon
rsssquare	QtAwesome.h	/^      rsssquare                        = 0xf143,$/;"	enumerator	line:579	language:C++	enum:fa::icon
rub	QtAwesome.h	/^      rub                              = 0xf158,$/;"	enumerator	line:580	language:C++	enum:fa::icon
ruble	QtAwesome.h	/^      ruble                            = 0xf158,$/;"	enumerator	line:581	language:C++	enum:fa::icon
run_env_warnings	base_bin.hpp	/^    std::vector<std::string> run_env_warnings;$/;"	member	line:62	language:C++	class:BaseBin	access:protected
run_tdmap	td_map.cpp	/^bool TDMap::run_tdmap( ){$/;"	function	line:261	language:C++	class:TDMap
runned_simulation	simgrid.hpp	/^    bool runned_simulation = false;$/;"	member	line:93	language:C++	class:SimGrid	access:private
running_progress	configwin.h	/^    QProgressBar* running_progress;$/;"	member	line:274	language:C++	class:MainWindow	access:private
rupee	QtAwesome.h	/^      rupee                            = 0xf156,$/;"	enumerator	line:582	language:C++	enum:fa::icon
s15	QtAwesome.h	/^      s15                              = 0xf2cd,$/;"	enumerator	line:583	language:C++	enum:fa::icon
safari	QtAwesome.h	/^      safari                           = 0xf267,$/;"	enumerator	line:584	language:C++	enum:fa::icon
sampling_rate_x_nm_per_pixel	base_image.hpp	/^    double sampling_rate_x_nm_per_pixel = 0.0f;$/;"	member	line:63	language:C++	class:BaseImage	access:protected
sampling_rate_y_nm_per_pixel	base_image.hpp	/^    double sampling_rate_y_nm_per_pixel = 0.0f;$/;"	member	line:65	language:C++	class:BaseImage	access:protected
save	QtAwesome.h	/^      save                             = 0xf0c7,$/;"	enumerator	line:585	language:C++	enum:fa::icon
save	configwin.cpp	/^bool MainWindow::save(){$/;"	function	line:614	language:C++	class:MainWindow
saveAs	configwin.cpp	/^bool MainWindow::saveAs()$/;"	function	line:629	language:C++	class:MainWindow
saveFile	configwin.cpp	/^bool MainWindow::saveFile(const QString &fileName ){$/;"	function	line:1013	language:C++	class:MainWindow
save_data_into_property_tree	treeitem.cpp	/^boost::property_tree::ptree* TreeItem::save_data_into_property_tree( ){$/;"	function	line:323	language:C++	class:TreeItem
save_data_into_property_tree	treemodel.cpp	/^boost::property_tree::ptree* TreeModel::save_data_into_property_tree( ){$/;"	function	line:24	language:C++	class:TreeModel
save_prm_filename_path	msa_prm.cpp	/^bool MSA_prm::save_prm_filename_path(){$/;"	function	line:223	language:C++	class:MSA_prm
save_prm_filename_path	wavimg_prm.cpp	/^bool WAVIMG_prm::save_prm_filename_path(){$/;"	function	line:651	language:C++	class:WAVIMG_prm
scaleFactor	cv_image_widget.h	/^    float scaleFactor = 1.0f;$/;"	member	line:66	language:C++	class:CVImageWidget	access:private
scan_attrs	emd_dataset.cpp	/^void EMDDataSet::scan_attrs(hid_t oid) {$/;"	function	line:20	language:C++	class:EMDDataSet
scan_attrs	emd_group.cpp	/^void EMDGroup::scan_attrs(hid_t oid) {$/;"	function	line:59	language:C++	class:EMDGroup
scan_group	emd_group.cpp	/^void EMDGroup::scan_group(hid_t grp_id ) {$/;"	function	line:82	language:C++	class:EMDGroup
scanner	mc_driver.hpp	/^      MC::MC_Scanner *scanner = nullptr;$/;"	member	line:48	language:C++	class:MC::MC_Driver	access:protected
scissors	QtAwesome.h	/^      scissors                         = 0xf0c4,$/;"	enumerator	line:586	language:C++	enum:fa::icon
scribd	QtAwesome.h	/^      scribd                           = 0xf28a,$/;"	enumerator	line:587	language:C++	enum:fa::icon
scrollArea	cv_image_cell_widget.h	/^    QScrollArea* scrollArea;$/;"	member	line:76	language:C++	class:CvImageCellWidget	access:protected
scrollArea	cv_image_edge_frame.h	/^    QScrollArea* scrollArea;$/;"	member	line:74	language:C++	class:CvImageEdgeFrame	access:protected
scrollArea	cv_image_frame.h	/^    QScrollArea* scrollArea;$/;"	member	line:36	language:C++	class:CvImageFrameWidget	access:protected
scrollArea	cv_tdmap_cell_image_frame.h	/^    QScrollArea* scrollArea;$/;"	member	line:30	language:C++	class:CvTDMapImageFrame	access:protected
search	QtAwesome.h	/^      search                           = 0xf002,$/;"	enumerator	line:588	language:C++	enum:fa::icon
searchminus	QtAwesome.h	/^      searchminus                      = 0xf010,$/;"	enumerator	line:589	language:C++	enum:fa::icon
searchplus	QtAwesome.h	/^      searchplus                       = 0xf00e,$/;"	enumerator	line:590	language:C++	enum:fa::icon
selectCurrentColumn	gui_tdmap_table.cpp	/^void TDMap_Table::selectCurrentColumn()$/;"	function	line:273	language:C++	class:TDMap_Table
selectCurrentRow	gui_tdmap_table.cpp	/^void TDMap_Table::selectCurrentRow()$/;"	function	line:268	language:C++	class:TDMap_Table
sellsy	QtAwesome.h	/^      sellsy                           = 0xf213,$/;"	enumerator	line:591	language:C++	enum:fa::icon
send	QtAwesome.h	/^      send                             = 0xf1d8,$/;"	enumerator	line:592	language:C++	enum:fa::icon
sendo	QtAwesome.h	/^      sendo                            = 0xf1d9,$/;"	enumerator	line:593	language:C++	enum:fa::icon
server	QtAwesome.h	/^      server                           = 0xf233,$/;"	enumerator	line:594	language:C++	enum:fa::icon
setCurrentFile	configwin.cpp	/^void MainWindow::setCurrentFile(const QString &fileName){$/;"	function	line:1047	language:C++	class:MainWindow
setData	gui_tdmap_cell.cpp	/^void TDMap_Cell::setData(int role, const QVariant &value){$/;"	function	line:10	language:C++	class:TDMap_Cell
setData	treeitem.cpp	/^bool TreeItem::setData(int column, const QVariant &value, int role ){$/;"	function	line:577	language:C++	class:TreeItem
setData	treemodel.cpp	/^bool TreeModel::setData(const QModelIndex &index, const QVariant &value, int role ){$/;"	function	line:171	language:C++	class:TreeModel
setDefaultOption	QtAwesome.cpp	/^void QtAwesome::setDefaultOption(const QString& name, const QVariant& value)$/;"	function	line:1011	language:C++	class:QtAwesome
setEditorData	cv_image_delegate.cpp	/^void CvImageDelegate::setEditorData(QWidget *editor,$/;"	function	line:25	language:C++	class:CvImageDelegate
setEditorData	treeitem_file_delegate.cpp	/^void TreeItemFileDelegate::setEditorData(QWidget *editor, const QModelIndex &index) const {$/;"	function	line:303	language:C++	class:TreeItemFileDelegate
setFieldOfView	vis/camera.cpp	/^void Camera::setFieldOfView(float fieldOfView) {$/;"	function	line:76	language:C++	class:Camera
setFillGradient	renderarea.cpp	/^void RenderArea::setFillGradient(const QColor &color1, const QColor &color2)$/;"	function	line:29	language:C++	class:RenderArea
setFillRule	renderarea.cpp	/^void RenderArea::setFillRule(Qt::FillRule rule)$/;"	function	line:23	language:C++	class:RenderArea
setHeaderData	treemodel.cpp	/^bool TreeModel::setHeaderData(int section, Qt::Orientation orientation, const QVariant &value, int role){$/;"	function	line:196	language:C++	class:TreeModel
setImage	cv_image_cell_widget.h	/^      void setImage(const cv::Mat& image) {$/;"	function	line:53	language:C++	class:CvImageCellWidget	access:public
setImage	cv_image_edge_frame.h	/^      void setImage(const cv::Mat& image) {$/;"	function	line:50	language:C++	class:CvImageEdgeFrame	access:public
setImage	cv_image_frame.cpp	/^void CvImageFrameWidget::setImage(const cv::Mat& image) {$/;"	function	line:31	language:C++	class:CvImageFrameWidget
setImage	cv_image_widget.cpp	/^void CVImageWidget::setImage( const cv::Mat& image ){$/;"	function	line:45	language:C++	class:CVImageWidget
setImage	cv_tdmap_cell_image_frame.cpp	/^void CvTDMapImageFrame::setImage(const cv::Mat& image) {$/;"	function	line:51	language:C++	class:CvTDMapImageFrame
setImageWidget	cv_image_cell_widget.h	/^    void setImageWidget( CVImageWidget* widget ){$/;"	function	line:67	language:C++	class:CvImageCellWidget	access:public
setImageWidget	cv_image_edge_frame.h	/^    void setImageWidget( CVImageWidget* widget ){$/;"	function	line:67	language:C++	class:CvImageEdgeFrame	access:public
setImageWidget	cv_image_frame.cpp	/^void CvImageFrameWidget::setImageWidget( CVImageWidget* widget ){$/;"	function	line:65	language:C++	class:CvImageFrameWidget
setImageWidget	cv_tdmap_cell_image_frame.cpp	/^void CvTDMapImageFrame::setImageWidget( CVImageWidget* widget ){$/;"	function	line:59	language:C++	class:CvTDMapImageFrame
setModel	cv_image_edge_frame.h	/^      void setModel(QAbstractItemModel* model ){$/;"	function	line:57	language:C++	class:CvImageEdgeFrame	access:public
setModel	cv_image_table_frame.h	/^      void setModel(QAbstractItemModel* model ){$/;"	function	line:32	language:C++	class:CvImageFrameTableWidget	access:public
setModelData	cv_image_delegate.cpp	/^void CvImageDelegate::setModelData(QWidget *editor, QAbstractItemModel *model,$/;"	function	line:37	language:C++	class:CvImageDelegate
setModelData	treeitem_file_delegate.cpp	/^void TreeItemFileDelegate::setModelData(QWidget *editor, QAbstractItemModel *model, const QModelIndex &index) const {$/;"	function	line:374	language:C++	class:TreeItemFileDelegate
setNearAndFarPlanes	vis/camera.cpp	/^void Camera::setNearAndFarPlanes(float nearPlane, float farPlane) {$/;"	function	line:89	language:C++	class:Camera
setPenColor	renderarea.cpp	/^void RenderArea::setPenColor(const QColor &color)$/;"	function	line:42	language:C++	class:RenderArea
setPenWidth	renderarea.cpp	/^void RenderArea::setPenWidth(int width)$/;"	function	line:36	language:C++	class:RenderArea
setPosition	vis/camera.cpp	/^void Camera::setPosition(const glm::vec3& position) {$/;"	function	line:64	language:C++	class:Camera
setRotationAngle	renderarea.cpp	/^void RenderArea::setRotationAngle(int degrees)$/;"	function	line:48	language:C++	class:RenderArea
setStatusOption	treeitem.cpp	/^void TreeItem::setStatusOption( int col , ActionStatusType status ){$/;"	function	line:263	language:C++	class:TreeItem
setToolTipText	qline_edit_tooltip.cpp	/^void QLineEditToolTip::setToolTipText( const QString& message ){$/;"	function	line:13	language:C++	class:QLineEditToolTip
setToolTipText	treeitem.cpp	/^void TreeItem::setToolTipText(const QString& text ){$/;"	function	line:813	language:C++	class:TreeItem
setUniform	vis/program.cpp	/^void Program::setUniform(const GLchar* name, const glm::mat2& m, GLboolean transpose) {$/;"	function	line:152	language:C++	class:Program
setUniform	vis/program.cpp	/^void Program::setUniform(const GLchar* name, const glm::mat3& m, GLboolean transpose) {$/;"	function	line:157	language:C++	class:Program
setUniform	vis/program.cpp	/^void Program::setUniform(const GLchar* name, const glm::mat4& m, GLboolean transpose) {$/;"	function	line:162	language:C++	class:Program
setUniform	vis/program.cpp	/^void Program::setUniform(const GLchar* uniformName, const glm::vec3& v) {$/;"	function	line:167	language:C++	class:Program
setUniform	vis/program.cpp	/^void Program::setUniform(const GLchar* uniformName, const glm::vec4& v) {$/;"	function	line:171	language:C++	class:Program
setUniformMatrix2	vis/program.cpp	/^void Program::setUniformMatrix2(const GLchar* name, const GLfloat* v, GLsizei count, GLboolean transpose) {$/;"	function	line:137	language:C++	class:Program
setUniformMatrix3	vis/program.cpp	/^void Program::setUniformMatrix3(const GLchar* name, const GLfloat* v, GLsizei count, GLboolean transpose) {$/;"	function	line:142	language:C++	class:Program
setUniformMatrix4	vis/program.cpp	/^void Program::setUniformMatrix4(const GLchar* name, const GLfloat* v, GLsizei count, GLboolean transpose) {$/;"	function	line:147	language:C++	class:Program
setViewportAspectRatio	vis/camera.cpp	/^void Camera::setViewportAspectRatio(float viewportAspectRatio) {$/;"	function	line:121	language:C++	class:Camera
set_aberration_definition	wavimg_prm.cpp	/^bool WAVIMG_prm::set_aberration_definition ( WAVIMG_prm::AberrationDefinition aberration_index, int coefficient , double value ){$/;"	function	line:393	language:C++	class:WAVIMG_prm
set_aberration_definition_switch	wavimg_prm.cpp	/^bool WAVIMG_prm::set_aberration_definition_switch(  WAVIMG_prm::AberrationDefinition aberration_index, bool value ){$/;"	function	line:418	language:C++	class:WAVIMG_prm
set_abs_switch	celslc_prm.cpp	/^void CELSLC_prm::set_abs_switch( bool abs ){$/;"	function	line:14	language:C++	class:CELSLC_prm
set_accelaration_voltage_kv	td_map.cpp	/^bool TDMap::set_accelaration_voltage_kv( std::string accelaration_voltage ){$/;"	function	line:1307	language:C++	class:TDMap
set_action_toolBar	treeitem.cpp	/^void TreeItem::set_action_toolBar( CustomToolButton* tool ){$/;"	function	line:14	language:C++	class:TreeItem
set_angle_alpha	base_cell.cpp	/^void BaseCell::set_angle_alpha( double alpha ){$/;"	function	line:234	language:C++	class:BaseCell
set_angle_beta	base_cell.cpp	/^void BaseCell::set_angle_beta( double beta ){$/;"	function	line:238	language:C++	class:BaseCell
set_angle_gamma	base_cell.cpp	/^void BaseCell::set_angle_gamma( double gamma ){$/;"	function	line:242	language:C++	class:BaseCell
set_anisotropic_second_rms_amplitude	wavimg_prm.cpp	/^void WAVIMG_prm::set_anisotropic_second_rms_amplitude( double amplitude ){$/;"	function	line:567	language:C++	class:WAVIMG_prm
set_application_logger	base_bin.cpp	/^bool BaseBin::set_application_logger( ApplicationLog::ApplicationLog* app_logger ){$/;"	function	line:82	language:C++	class:BaseBin
set_application_logger	base_crystal.cpp	/^bool BaseCrystal::set_application_logger( ApplicationLog::ApplicationLog* app_logger ){$/;"	function	line:403	language:C++	class:BaseCrystal
set_application_logger	base_image.cpp	/^bool BaseImage::set_application_logger( ApplicationLog::ApplicationLog* app_logger ){$/;"	function	line:294	language:C++	class:BaseImage
set_application_logger	base_logger.cpp	/^bool BaseLogger::set_application_logger( ApplicationLog::ApplicationLog* app_logger ){$/;"	function	line:7	language:C++	class:BaseLogger
set_application_logger	celslc_prm.cpp	/^bool CELSLC_prm::set_application_logger( ApplicationLog::ApplicationLog* app_logger ){$/;"	function	line:476	language:C++	class:CELSLC_prm
set_application_logger	configwin.cpp	/^bool MainWindow::set_application_logger( ApplicationLog::ApplicationLog* logger ){$/;"	function	line:243	language:C++	class:MainWindow
set_application_logger	image_bounds.cpp	/^bool ImageBounds::set_application_logger( ApplicationLog::ApplicationLog* app_logger ){$/;"	function	line:245	language:C++	class:ImageBounds
set_application_logger	msa_prm.cpp	/^bool MSA_prm::set_application_logger( ApplicationLog::ApplicationLog* app_logger ){$/;"	function	line:373	language:C++	class:MSA_prm
set_application_logger	simgrid.cpp	/^bool SimGrid::set_application_logger( ApplicationLog::ApplicationLog* app_logger ){$/;"	function	line:701	language:C++	class:SimGrid
set_application_logger	super_cell.cpp	/^bool SuperCell::set_application_logger( ApplicationLog::ApplicationLog* app_logger ){$/;"	function	line:17	language:C++	class:SuperCell
set_application_logger	td_map.cpp	/^bool TDMap::set_application_logger( ApplicationLog::ApplicationLog* app_logger ){$/;"	function	line:870	language:C++	class:TDMap
set_application_logger	wavimg_prm.cpp	/^bool WAVIMG_prm::set_application_logger( ApplicationLog::ApplicationLog* app_logger ){$/;"	function	line:702	language:C++	class:WAVIMG_prm
set_azimuth_orientation_angle	wavimg_prm.cpp	/^void WAVIMG_prm::set_azimuth_orientation_angle( double angle ){$/;"	function	line:571	language:C++	class:WAVIMG_prm
set_base_bin_output_target_folder	base_bin.cpp	/^bool BaseBin::set_base_bin_output_target_folder( boost::filesystem::path folder ){$/;"	function	line:27	language:C++	class:BaseBin
set_base_bin_start_dir_path	base_bin.cpp	/^bool BaseBin::set_base_bin_start_dir_path( boost::filesystem::path path ){$/;"	function	line:9	language:C++	class:BaseBin
set_base_dir_path	base_crystal.cpp	/^bool BaseCrystal::set_base_dir_path( boost::filesystem::path path ){$/;"	function	line:391	language:C++	class:BaseCrystal
set_base_dir_path	td_map.cpp	/^bool TDMap::set_base_dir_path( boost::filesystem::path path ){$/;"	function	line:849	language:C++	class:TDMap
set_best	cv_image_cell_widget.h	/^    void set_best(){$/;"	function	line:37	language:C++	class:CvImageCellWidget	access:public
set_best	cv_tdmap_cell_image_frame_delegate.cpp	/^void CvTDMapImageFrameDelegate::set_best( int row, int col ){$/;"	function	line:35	language:C++	class:CvTDMapImageFrameDelegate
set_bin_execname	base_bin.cpp	/^bool BaseBin::set_bin_execname( std::string execname ){$/;"	function	line:59	language:C++	class:BaseBin
set_cel_margin_nm	base_cell.cpp	/^bool BaseCell::set_cel_margin_nm( double margin ){$/;"	function	line:14	language:C++	class:BaseCell
set_cell_volume	base_cell.cpp	/^void BaseCell::set_cell_volume( double volume ){$/;"	function	line:246	language:C++	class:BaseCell
set_center	vis/camera.cpp	/^void Camera::set_center(const glm::vec3& center_vector ){$/;"	function	line:52	language:C++	class:Camera
set_center_x_of_objective_aperture	wavimg_prm.cpp	/^void WAVIMG_prm::set_center_x_of_objective_aperture( double center_x ){$/;"	function	line:588	language:C++	class:WAVIMG_prm
set_center_y_of_objective_aperture	wavimg_prm.cpp	/^void WAVIMG_prm::set_center_y_of_objective_aperture( double center_y ){$/;"	function	line:593	language:C++	class:WAVIMG_prm
set_cif_path	base_cell.cpp	/^bool BaseCell::set_cif_path( std::string path ){$/;"	function	line:8	language:C++	class:BaseCell
set_container_size	cv_image_cell_widget.h	/^    void set_container_size( int _width, int _heigth ){$/;"	function	line:45	language:C++	class:CvImageCellWidget	access:public
set_container_window_size	cv_image_widget.cpp	/^void CVImageWidget::set_container_window_size( const int width , const int height ){$/;"	function	line:16	language:C++	class:CVImageWidget
set_conversion_rate	wavimg_prm.cpp	/^void WAVIMG_prm::set_conversion_rate( double rate ){$/;"	function	line:469	language:C++	class:WAVIMG_prm
set_dat_output_target_folder	base_crystal.cpp	/^bool BaseCrystal::set_dat_output_target_folder( std::string folder ){$/;"	function	line:339	language:C++	class:BaseCrystal
set_dat_output_target_folder	td_map.cpp	/^bool TDMap::set_dat_output_target_folder( std::string folder ){$/;"	function	line:734	language:C++	class:TDMap
set_defocus_lower_bound	base_crystal.cpp	/^bool BaseCrystal::set_defocus_lower_bound( double lower_bound ){$/;"	function	line:376	language:C++	class:BaseCrystal
set_defocus_lower_bound	td_map.cpp	/^bool TDMap::set_defocus_lower_bound( std::string l_upper_bound ){$/;"	function	line:1273	language:C++	class:TDMap
set_defocus_samples	base_crystal.cpp	/^bool BaseCrystal::set_defocus_samples( int samples ){$/;"	function	line:369	language:C++	class:BaseCrystal
set_defocus_samples	td_map.cpp	/^bool TDMap::set_defocus_samples( std::string s_samples ){$/;"	function	line:1256	language:C++	class:TDMap
set_defocus_upper_bound	base_crystal.cpp	/^bool BaseCrystal::set_defocus_upper_bound( double upper_bound ){$/;"	function	line:383	language:C++	class:BaseCrystal
set_defocus_upper_bound	td_map.cpp	/^bool TDMap::set_defocus_upper_bound( std::string s_upper_bound ){$/;"	function	line:1290	language:C++	class:TDMap
set_defocus_user_estimated_nm	td_map.cpp	/^bool TDMap::set_defocus_user_estimated_nm( std::string s_estimated ){$/;"	function	line:1239	language:C++	class:TDMap
set_dr_probe_bin_path	settings.cpp	/^bool Settings::set_dr_probe_bin_path( std::string path ){$/;"	function	line:15	language:C++	class:Settings
set_dr_probe_celslc_bin	settings.cpp	/^bool Settings::set_dr_probe_celslc_bin( std::string bin ){$/;"	function	line:33	language:C++	class:Settings
set_dr_probe_celslc_execname	td_map.cpp	/^bool TDMap::set_dr_probe_celslc_execname( std::string celslc_execname ){$/;"	function	line:882	language:C++	class:TDMap
set_dr_probe_msa_bin	settings.cpp	/^bool Settings::set_dr_probe_msa_bin( std::string bin ){$/;"	function	line:38	language:C++	class:Settings
set_dr_probe_msa_execname	td_map.cpp	/^bool TDMap::set_dr_probe_msa_execname( std::string msa_execname ){$/;"	function	line:892	language:C++	class:TDMap
set_dr_probe_path	configwin.cpp	/^bool MainWindow::set_dr_probe_path( QString path ){$/;"	function	line:2024	language:C++	class:MainWindow
set_dr_probe_wavimg_bin	settings.cpp	/^bool Settings::set_dr_probe_wavimg_bin( std::string bin ){$/;"	function	line:43	language:C++	class:Settings
set_dr_probe_wavimg_execname	td_map.cpp	/^bool TDMap::set_dr_probe_wavimg_execname( std::string wavimg_execname ){$/;"	function	line:902	language:C++	class:TDMap
set_dropdown_options	treeitem.cpp	/^void TreeItem::set_dropdown_options(int column , QVector<QVariant>& drop, QVector<QVariant> &drop_enum ){$/;"	function	line:632	language:C++	class:TreeItem
set_dwf_switch	celslc_prm.cpp	/^void CELSLC_prm::set_dwf_switch( bool dwf ){$/;"	function	line:10	language:C++	class:CELSLC_prm
set_exec_log_level	td_map.cpp	/^bool TDMap::set_exec_log_level( int level ){$/;"	function	line:1363	language:C++	class:TDMap
set_exp_image_bounds_hysteresis_threshold	td_map.cpp	/^bool TDMap::set_exp_image_bounds_hysteresis_threshold( int value ){ return _super_cell->set_hysteresis_threshold(value); }$/;"	function	line:1658	language:C++	class:TDMap
set_exp_image_bounds_max_contour_distance_px	td_map.cpp	/^bool TDMap::set_exp_image_bounds_max_contour_distance_px( int value ){ return _super_cell->set_max_contour_distance_px(value);  }$/;"	function	line:1659	language:C++	class:TDMap
set_exp_image_properties_full_image	simgrid.cpp	/^bool SimGrid::set_exp_image_properties_full_image( std::string path ){$/;"	function	line:15	language:C++	class:SimGrid
set_exp_image_properties_full_image	td_map.cpp	/^bool TDMap::set_exp_image_properties_full_image( std::string path ){$/;"	function	line:912	language:C++	class:TDMap
set_exp_image_properties_roi_center_x	simgrid.cpp	/^bool SimGrid::set_exp_image_properties_roi_center_x( int center_x ){$/;"	function	line:27	language:C++	class:SimGrid
set_exp_image_properties_roi_center_x	td_map.cpp	/^bool TDMap::set_exp_image_properties_roi_center_x( std::string s_center_x ){$/;"	function	line:920	language:C++	class:TDMap
set_exp_image_properties_roi_center_y	simgrid.cpp	/^bool SimGrid::set_exp_image_properties_roi_center_y( int center_y ){$/;"	function	line:31	language:C++	class:SimGrid
set_exp_image_properties_roi_center_y	td_map.cpp	/^bool TDMap::set_exp_image_properties_roi_center_y( std::string s_center_y ){$/;"	function	line:935	language:C++	class:TDMap
set_exp_image_properties_roi_n_cols_width	simgrid.cpp	/^bool SimGrid::set_exp_image_properties_roi_n_cols_width( int ncols ){$/;"	function	line:23	language:C++	class:SimGrid
set_exp_image_properties_roi_n_rows_height	simgrid.cpp	/^bool SimGrid::set_exp_image_properties_roi_n_rows_height( int nrows ){$/;"	function	line:19	language:C++	class:SimGrid
set_exp_image_properties_sampling_rate_x_nm_per_pixel	td_map.cpp	/^bool TDMap::set_exp_image_properties_sampling_rate_x_nm_per_pixel( std::string sampling_x ){$/;"	function	line:950	language:C++	class:TDMap
set_exp_image_properties_sampling_rate_y_nm_per_pixel	td_map.cpp	/^bool TDMap::set_exp_image_properties_sampling_rate_y_nm_per_pixel( std::string sampling_y ){$/;"	function	line:968	language:C++	class:TDMap
set_exp_image_sampling_rate_x_nm_per_pixel	simgrid.cpp	/^bool SimGrid::set_exp_image_sampling_rate_x_nm_per_pixel( double sampling ){$/;"	function	line:35	language:C++	class:SimGrid
set_exp_image_sampling_rate_y_nm_per_pixel	simgrid.cpp	/^bool SimGrid::set_exp_image_sampling_rate_y_nm_per_pixel( double sampling ){$/;"	function	line:39	language:C++	class:SimGrid
set_experimental_image_path	deprecated/image_crystal.cpp	/^bool Image_Crystal::set_experimental_image_path( std::string path ){$/;"	function	line:58	language:C++	class:Image_Crystal
set_experimental_roi_center_x	deprecated/image_crystal.cpp	/^bool Image_Crystal::set_experimental_roi_center_x( std::string center_x ){$/;"	function	line:63	language:C++	class:Image_Crystal
set_experimental_roi_center_y	deprecated/image_crystal.cpp	/^bool Image_Crystal::set_experimental_roi_center_y( std::string center_y ){$/;"	function	line:78	language:C++	class:Image_Crystal
set_eye	vis/camera.cpp	/^void Camera::set_eye(const glm::vec3& eye_vector ){$/;"	function	line:48	language:C++	class:Camera
set_file_name_input_wave_function	wavimg_prm.cpp	/^bool WAVIMG_prm::set_file_name_input_wave_function( std::string file_name ){$/;"	function	line:432	language:C++	class:WAVIMG_prm
set_file_name_output_image_wave_function	td_map.cpp	/^bool TDMap::set_file_name_output_image_wave_function( std::string image_wave ){$/;"	function	line:697	language:C++	class:TDMap
set_file_name_output_image_wave_function	wavimg_prm.cpp	/^bool WAVIMG_prm::set_file_name_output_image_wave_function( std::string file_name ){$/;"	function	line:452	language:C++	class:WAVIMG_prm
set_flag_auto_a_size	base_image.cpp	/^bool BaseImage::set_flag_auto_a_size( bool value ){$/;"	function	line:109	language:C++	class:BaseImage
set_flag_auto_b_size	base_image.cpp	/^bool BaseImage::set_flag_auto_b_size( bool value ){$/;"	function	line:114	language:C++	class:BaseImage
set_flag_auto_n_cols	base_image.cpp	/^bool BaseImage::set_flag_auto_n_cols( bool value ){$/;"	function	line:104	language:C++	class:BaseImage
set_flag_auto_n_rows	base_image.cpp	/^bool BaseImage::set_flag_auto_n_rows( bool value ){$/;"	function	line:99	language:C++	class:BaseImage
set_flag_fp_data_appender_string	treeitem.cpp	/^bool TreeItem::set_flag_fp_data_appender_string( bool set ){$/;"	function	line:572	language:C++	class:TreeItem
set_flag_validatable_double	treeitem.cpp	/^bool TreeItem::set_flag_validatable_double(int col_pos , bool value  ){$/;"	function	line:747	language:C++	class:TreeItem
set_flag_validatable_int	treeitem.cpp	/^bool TreeItem::set_flag_validatable_int(int col_pos , bool value  ){$/;"	function	line:659	language:C++	class:TreeItem
set_fp_check_getter	treeitem.cpp	/^bool TreeItem::set_fp_check_getter( int col,  boost::function<bool(void)> check_getter ){$/;"	function	line:250	language:C++	class:TreeItem
set_fp_check_setter	treeitem.cpp	/^bool TreeItem::set_fp_check_setter( int col,  boost::function<bool(bool)> check_setter ){$/;"	function	line:244	language:C++	class:TreeItem
set_fp_data_data_appender_col_pos	treeitem.cpp	/^bool TreeItem::set_fp_data_data_appender_col_pos( int col ){$/;"	function	line:567	language:C++	class:TreeItem
set_fp_data_getter_double_vec	treeitem.cpp	/^bool TreeItem::set_fp_data_getter_double_vec(int col_pos ,  boost::function<double(void)> fp ){$/;"	function	line:717	language:C++	class:TreeItem
set_full_boundary_polygon_margin_nm	td_map.cpp	/^bool TDMap::set_full_boundary_polygon_margin_nm( std::string s_margin ){$/;"	function	line:1388	language:C++	class:TDMap
set_full_boundary_polygon_margin_x_nm	image_bounds.cpp	/^bool ImageBounds::set_full_boundary_polygon_margin_x_nm( double value ){$/;"	function	line:235	language:C++	class:ImageBounds
set_full_boundary_polygon_margin_y_nm	image_bounds.cpp	/^bool ImageBounds::set_full_boundary_polygon_margin_y_nm( double value ){$/;"	function	line:239	language:C++	class:ImageBounds
set_full_image	base_image.cpp	/^bool BaseImage::set_full_image( std::string image_path ){$/;"	function	line:119	language:C++	class:BaseImage
set_full_n_cols_width	base_image.cpp	/^bool BaseImage::set_full_n_cols_width( int witdth ){$/;"	function	line:191	language:C++	class:BaseImage
set_full_n_rows_height	base_image.cpp	/^bool BaseImage::set_full_n_rows_height(  int n_rows ){$/;"	function	line:184	language:C++	class:BaseImage
set_full_nm_size_cols_b	base_image.cpp	/^bool BaseImage::set_full_nm_size_cols_b( double size ){$/;"	function	line:247	language:C++	class:BaseImage
set_full_nm_size_rows_a	base_image.cpp	/^bool BaseImage::set_full_nm_size_rows_a( double size ){$/;"	function	line:238	language:C++	class:BaseImage
set_group_options	td_map.cpp	/^void TDMap::set_group_options( group_options* celslc_step, group_options* msa_step, group_options* wavimg_step, group_options* simgrid_step ){$/;"	function	line:863	language:C++	class:TDMap
set_ht_accelaration_voltage	base_crystal.cpp	/^bool BaseCrystal::set_ht_accelaration_voltage( double ht ){$/;"	function	line:287	language:C++	class:BaseCrystal
set_hysteresis_threshold	image_bounds.cpp	/^bool ImageBounds::set_hysteresis_threshold( int threshold ){$/;"	function	line:225	language:C++	class:ImageBounds
set_ignore_edge_pixels	base_image.cpp	/^bool BaseImage::set_ignore_edge_pixels( int pixels ){$/;"	function	line:287	language:C++	class:BaseImage
set_image_correlation_matching_method	simgrid.cpp	/^bool SimGrid::set_image_correlation_matching_method( int enumerator ){$/;"	function	line:673	language:C++	class:SimGrid
set_image_correlation_matching_method	td_map.cpp	/^bool TDMap::set_image_correlation_matching_method( int method ){$/;"	function	line:1359	language:C++	class:TDMap
set_image_data_type	wavimg_prm.cpp	/^void WAVIMG_prm::set_image_data_type(int data_type ){$/;"	function	line:461	language:C++	class:WAVIMG_prm
set_image_frame_offset_x_pixels_input_wave_function	wavimg_prm.cpp	/^void WAVIMG_prm::set_image_frame_offset_x_pixels_input_wave_function( double offset_x ){$/;"	function	line:486	language:C++	class:WAVIMG_prm
set_image_frame_offset_y_pixels_input_wave_function	wavimg_prm.cpp	/^void WAVIMG_prm::set_image_frame_offset_y_pixels_input_wave_function( double offset_y ){$/;"	function	line:490	language:C++	class:WAVIMG_prm
set_image_frame_rotation	wavimg_prm.cpp	/^void WAVIMG_prm::set_image_frame_rotation( double frame_rotation ){$/;"	function	line:495	language:C++	class:WAVIMG_prm
set_image_vacuum_mean_intensity	wavimg_prm.cpp	/^void WAVIMG_prm::set_image_vacuum_mean_intensity( double mean_intensity ){$/;"	function	line:465	language:C++	class:WAVIMG_prm
set_internal_repeat_factor_of_super_cell_along_x	msa_prm.cpp	/^void MSA_prm::set_internal_repeat_factor_of_super_cell_along_x ( int x_repeat ){$/;"	function	line:10	language:C++	class:MSA_prm
set_internal_repeat_factor_of_super_cell_along_y	msa_prm.cpp	/^void MSA_prm::set_internal_repeat_factor_of_super_cell_along_y ( int y_repeat ){$/;"	function	line:14	language:C++	class:MSA_prm
set_isotropic_one_rms_amplitude	wavimg_prm.cpp	/^void WAVIMG_prm::set_isotropic_one_rms_amplitude( double amplitude ){$/;"	function	line:563	language:C++	class:WAVIMG_prm
set_item_delegate_type	treeitem.cpp	/^void TreeItem::set_item_delegate_type( TreeItem::DelegateType _delegate_type ){$/;"	function	line:628	language:C++	class:TreeItem
set_k_space_scaling	wavimg_prm.cpp	/^void WAVIMG_prm::set_k_space_scaling( double scale ){$/;"	function	line:533	language:C++	class:WAVIMG_prm
set_length_a_Angstroms	base_cell.cpp	/^void BaseCell::set_length_a_Angstroms( double a ){$/;"	function	line:204	language:C++	class:BaseCell
set_length_a_Nanometers	base_cell.cpp	/^void BaseCell::set_length_a_Nanometers( double a ){$/;"	function	line:219	language:C++	class:BaseCell
set_length_b_Angstroms	base_cell.cpp	/^void BaseCell::set_length_b_Angstroms( double b ){$/;"	function	line:209	language:C++	class:BaseCell
set_length_b_Nanometers	base_cell.cpp	/^void BaseCell::set_length_b_Nanometers( double b ){$/;"	function	line:224	language:C++	class:BaseCell
set_length_c_Angstroms	base_cell.cpp	/^void BaseCell::set_length_c_Angstroms( double c ){$/;"	function	line:214	language:C++	class:BaseCell
set_length_c_Nanometers	base_cell.cpp	/^void BaseCell::set_length_c_Nanometers( double c ){$/;"	function	line:229	language:C++	class:BaseCell
set_linear_slices_for_full_object_structure	msa_prm.cpp	/^void MSA_prm::set_linear_slices_for_full_object_structure () {$/;"	function	line:30	language:C++	class:MSA_prm
set_max_contour_distance_px	image_bounds.cpp	/^bool ImageBounds::set_max_contour_distance_px( int max_distance ){$/;"	function	line:230	language:C++	class:ImageBounds
set_minimum_number_frozen_phonon_configurations_used_generate_wave_functions	msa_prm.cpp	/^void MSA_prm::set_minimum_number_frozen_phonon_configurations_used_generate_wave_functions ( int maximum_frozen_phonon ){$/;"	function	line:22	language:C++	class:MSA_prm
set_model_modified	treemodel.cpp	/^void TreeModel::set_model_modified(){$/;"	function	line:216	language:C++	class:TreeModel
set_msa_prm_name	td_map.cpp	/^bool TDMap::set_msa_prm_name(  std::string prm_name  ){$/;"	function	line:749	language:C++	class:TDMap
set_mtf_filename	td_map.cpp	/^bool TDMap::set_mtf_filename( std::string file_name ){$/;"	function	line:1329	language:C++	class:TDMap
set_mtf_filename	wavimg_prm.cpp	/^bool WAVIMG_prm::set_mtf_filename( std::string file_name ){$/;"	function	line:537	language:C++	class:WAVIMG_prm
set_mtf_simulation_switch	wavimg_prm.cpp	/^bool WAVIMG_prm::set_mtf_simulation_switch( bool status ){$/;"	function	line:524	language:C++	class:WAVIMG_prm
set_mtf_switch	td_map.cpp	/^bool TDMap::set_mtf_switch( bool value ){$/;"	function	line:1355	language:C++	class:TDMap
set_n	vis/camera.cpp	/^void Camera::set_n( const glm::vec3& n ){$/;"	function	line:44	language:C++	class:Camera
set_nm_lower_bound	base_crystal.cpp	/^bool BaseCrystal::set_nm_lower_bound( double lower_bound ){$/;"	function	line:352	language:C++	class:BaseCrystal
set_nm_lower_bound	td_map.cpp	/^bool TDMap::set_nm_lower_bound( std::string s_l_bound ){$/;"	function	line:1202	language:C++	class:TDMap
set_nm_upper_bound	base_crystal.cpp	/^bool BaseCrystal::set_nm_upper_bound( double upper_bound ){$/;"	function	line:359	language:C++	class:BaseCrystal
set_nm_upper_bound	td_map.cpp	/^bool TDMap::set_nm_upper_bound( std::string s_upper_bound ){$/;"	function	line:1219	language:C++	class:TDMap
set_number_frozen_lattice_variants_considered_per_slice	msa_prm.cpp	/^void MSA_prm::set_number_frozen_lattice_variants_considered_per_slice( int number_lattice_variants ){$/;"	function	line:18	language:C++	class:MSA_prm
set_number_image_aberrations_set	wavimg_prm.cpp	/^void WAVIMG_prm::set_number_image_aberrations_set( int number_image_aberrations ){$/;"	function	line:576	language:C++	class:WAVIMG_prm
set_number_parameter_loops	wavimg_prm.cpp	/^void WAVIMG_prm::set_number_parameter_loops( int number_loops ){$/;"	function	line:598	language:C++	class:WAVIMG_prm
set_nx_size_height	td_map.cpp	/^bool TDMap::set_nx_size_height( std::string s_nx ){$/;"	function	line:1004	language:C++	class:TDMap
set_ny_size_width	td_map.cpp	/^bool TDMap::set_ny_size_width( std::string s_ny ){$/;"	function	line:987	language:C++	class:TDMap
set_nz_simulated_partitions	base_crystal.cpp	/^bool BaseCrystal::set_nz_simulated_partitions( int nz_partitions ){$/;"	function	line:226	language:C++	class:BaseCrystal
set_nz_simulated_partitions_from_prm	base_crystal.cpp	/^bool BaseCrystal::set_nz_simulated_partitions_from_prm(){$/;"	function	line:140	language:C++	class:BaseCrystal
set_nz_switch	base_crystal.cpp	/^bool BaseCrystal::set_nz_switch( bool value ){$/;"	function	line:232	language:C++	class:BaseCrystal
set_objective_aperture_radius	wavimg_prm.cpp	/^void WAVIMG_prm::set_objective_aperture_radius( double radius ){$/;"	function	line:583	language:C++	class:WAVIMG_prm
set_parent	treeitem.cpp	/^bool TreeItem::set_parent( TreeItem* parent ){$/;"	function	line:483	language:C++	class:TreeItem
set_partial_spacial_coherence_semi_convergence_angle	wavimg_prm.cpp	/^void WAVIMG_prm::set_partial_spacial_coherence_semi_convergence_angle( double convergence_angle ){$/;"	function	line:518	language:C++	class:WAVIMG_prm
set_partial_spacial_coherence_switch	wavimg_prm.cpp	/^void WAVIMG_prm::set_partial_spacial_coherence_switch( int coherence_switch ){$/;"	function	line:514	language:C++	class:WAVIMG_prm
set_partial_temporal_coherence_focus_spread	wavimg_prm.cpp	/^void WAVIMG_prm::set_partial_temporal_coherence_focus_spread( double focus_spread ){$/;"	function	line:509	language:C++	class:WAVIMG_prm
set_partial_temporal_coherence_switch	wavimg_prm.cpp	/^void WAVIMG_prm::set_partial_temporal_coherence_switch( int temporal_switch ){$/;"	function	line:505	language:C++	class:WAVIMG_prm
set_period_readout_or_detection_in_units_of_slices	msa_prm.cpp	/^void MSA_prm::set_period_readout_or_detection_in_units_of_slices ( int units_of_slices ){$/;"	function	line:26	language:C++	class:MSA_prm
set_pixel_size_height_x_m	base_image.cpp	/^bool BaseImage::set_pixel_size_height_x_m( double rate_m ){$/;"	function	line:208	language:C++	class:BaseImage
set_pixel_size_width_y_m	base_image.cpp	/^bool BaseImage::set_pixel_size_width_y_m( double rate_m ){$/;"	function	line:228	language:C++	class:BaseImage
set_prm_file_name	msa_prm.cpp	/^bool MSA_prm::set_prm_file_name( std::string filename ){$/;"	function	line:256	language:C++	class:MSA_prm
set_prm_file_name	wavimg_prm.cpp	/^bool WAVIMG_prm::set_prm_file_name( std::string filename ){$/;"	function	line:602	language:C++	class:WAVIMG_prm
set_project_dir_path	td_map.cpp	/^bool TDMap::set_project_dir_path( std::string name_path ){$/;"	function	line:815	language:C++	class:TDMap
set_project_filename_with_path	td_map.cpp	/^bool TDMap::set_project_filename_with_path( std::string filename_with_path ){$/;"	function	line:834	language:C++	class:TDMap
set_projected_y_axis	base_crystal.cpp	/^bool BaseCrystal::set_projected_y_axis( cv::Point3d ){$/;"	function	line:237	language:C++	class:BaseCrystal
set_projected_y_axis_u	base_crystal.cpp	/^bool BaseCrystal::set_projected_y_axis_u( double u ){$/;"	function	line:241	language:C++	class:BaseCrystal
set_projected_y_axis_u	td_map.cpp	/^bool TDMap::set_projected_y_axis_u( std::string s_y_u ){$/;"	function	line:1085	language:C++	class:TDMap
set_projected_y_axis_v	base_crystal.cpp	/^bool BaseCrystal::set_projected_y_axis_v( double v ){$/;"	function	line:248	language:C++	class:BaseCrystal
set_projected_y_axis_v	td_map.cpp	/^bool TDMap::set_projected_y_axis_v( std::string s_y_v ){$/;"	function	line:1102	language:C++	class:TDMap
set_projected_y_axis_w	base_crystal.cpp	/^bool BaseCrystal::set_projected_y_axis_w( double w ){$/;"	function	line:255	language:C++	class:BaseCrystal
set_projected_y_axis_w	td_map.cpp	/^bool TDMap::set_projected_y_axis_w( std::string s_y_w ){$/;"	function	line:1119	language:C++	class:TDMap
set_q_settings_fileName	settings.cpp	/^bool Settings::set_q_settings_fileName( std::string filename ){$/;"	function	line:20	language:C++	class:Settings
set_readout_noise_rms_amplitude	wavimg_prm.cpp	/^void WAVIMG_prm::set_readout_noise_rms_amplitude( double readout_noise ){$/;"	function	line:473	language:C++	class:WAVIMG_prm
set_refinement_definition_method	td_map.cpp	/^bool TDMap::set_refinement_definition_method ( int method ){$/;"	function	line:1323	language:C++	class:TDMap
set_roi	base_image.cpp	/^void BaseImage::set_roi(){$/;"	function	line:166	language:C++	class:BaseImage
set_roi_center_x	base_image.cpp	/^bool BaseImage::set_roi_center_x( int center_x ){$/;"	function	line:273	language:C++	class:BaseImage
set_roi_center_y	base_image.cpp	/^bool BaseImage::set_roi_center_y( int center_y ){$/;"	function	line:280	language:C++	class:BaseImage
set_roi_n_cols_width	base_image.cpp	/^bool BaseImage::set_roi_n_cols_width( int width ){$/;"	function	line:265	language:C++	class:BaseImage
set_roi_n_rows_height	base_image.cpp	/^bool BaseImage::set_roi_n_rows_height( int height ){$/;"	function	line:257	language:C++	class:BaseImage
set_run_celslc_switch	td_map.cpp	/^bool TDMap::set_run_celslc_switch( bool value ){$/;"	function	line:1368	language:C++	class:TDMap
set_run_msa_switch	td_map.cpp	/^bool TDMap::set_run_msa_switch( bool value ){$/;"	function	line:1373	language:C++	class:TDMap
set_run_simgrid_switch	td_map.cpp	/^bool TDMap::set_run_simgrid_switch( bool value ){$/;"	function	line:1383	language:C++	class:TDMap
set_run_wavimg_switch	td_map.cpp	/^bool TDMap::set_run_wavimg_switch( bool value ){$/;"	function	line:1378	language:C++	class:TDMap
set_sampling_rate_x_nm_per_pixel	base_image.cpp	/^bool BaseImage::set_sampling_rate_x_nm_per_pixel( double rate_nm ){$/;"	function	line:198	language:C++	class:BaseImage
set_sampling_rate_x_nm_per_pixel	simgrid.cpp	/^bool SimGrid::set_sampling_rate_x_nm_per_pixel( double rate ){$/;"	function	line:57	language:C++	class:SimGrid
set_sampling_rate_y_nm_per_pixel	base_image.cpp	/^bool BaseImage::set_sampling_rate_y_nm_per_pixel( double rate ){$/;"	function	line:218	language:C++	class:BaseImage
set_sampling_rate_y_nm_per_pixel	simgrid.cpp	/^bool SimGrid::set_sampling_rate_y_nm_per_pixel( double rate ){$/;"	function	line:64	language:C++	class:SimGrid
set_simulated_images_grid	gui_tdmap_table.cpp	/^void TDMap_Table::set_simulated_images_grid( std::vector< std::vector<cv::Mat> > image_grid ){$/;"	function	line:110	language:C++	class:TDMap_Table
set_simulation_image_spread_envelope_switch	wavimg_prm.cpp	/^void WAVIMG_prm::set_simulation_image_spread_envelope_switch( int spread_switch ){$/;"	function	line:559	language:C++	class:WAVIMG_prm
set_slc_file_name_prefix	base_crystal.cpp	/^bool BaseCrystal::set_slc_file_name_prefix( std::string prefix ){$/;"	function	line:321	language:C++	class:BaseCrystal
set_slc_file_name_prefix	td_map.cpp	/^bool TDMap::set_slc_file_name_prefix( std::string prefix ){$/;"	function	line:679	language:C++	class:TDMap
set_slc_output_target_folder	base_crystal.cpp	/^bool BaseCrystal::set_slc_output_target_folder( std::string folder ){$/;"	function	line:327	language:C++	class:BaseCrystal
set_slc_output_target_folder	td_map.cpp	/^bool TDMap::set_slc_output_target_folder( std::string folder ){$/;"	function	line:704	language:C++	class:TDMap
set_slice_samples	base_crystal.cpp	/^bool BaseCrystal::set_slice_samples( int samples ){$/;"	function	line:345	language:C++	class:BaseCrystal
set_slice_samples	td_map.cpp	/^bool TDMap::set_slice_samples( std::string s_samples ){$/;"	function	line:1185	language:C++	class:TDMap
set_slider_int_range_max	treeitem.cpp	/^void TreeItem::set_slider_int_range_max( int max ){$/;"	function	line:529	language:C++	class:TreeItem
set_slider_int_range_min	treeitem.cpp	/^void TreeItem::set_slider_int_range_min( int min ){$/;"	function	line:525	language:C++	class:TreeItem
set_spherical_aberration	td_map.cpp	/^bool TDMap::set_spherical_aberration ( std::string _string_cs ){$/;"	function	line:1337	language:C++	class:TDMap
set_spherical_aberration_switch	td_map.cpp	/^bool TDMap::set_spherical_aberration_switch( bool cs_switch ){$/;"	function	line:1351	language:C++	class:TDMap
set_super_cell	simulation_step.cpp	/^void Simulation_Step::set_super_cell( Super_Cell* super_cell ){$/;"	function	line:27	language:C++	class:Simulation_Step
set_super_cell_size_a	base_crystal.cpp	/^bool BaseCrystal::set_super_cell_size_a( double size_a ){$/;"	function	line:294	language:C++	class:BaseCrystal
set_super_cell_size_a	celslc_prm.cpp	/^bool CELSLC_prm::set_super_cell_size_a( double size ){$/;"	function	line:461	language:C++	class:CELSLC_prm
set_super_cell_size_a	msa_prm.cpp	/^bool MSA_prm::set_super_cell_size_a( double size ){$/;"	function	line:358	language:C++	class:MSA_prm
set_super_cell_size_a	simgrid.cpp	/^bool SimGrid::set_super_cell_size_a( double size ){$/;"	function	line:43	language:C++	class:SimGrid
set_super_cell_size_a	td_map.cpp	/^bool TDMap::set_super_cell_size_a( std::string size_a ){$/;"	function	line:764	language:C++	class:TDMap
set_super_cell_size_a	wavimg_prm.cpp	/^bool WAVIMG_prm::set_super_cell_size_a( double size ){$/;"	function	line:687	language:C++	class:WAVIMG_prm
set_super_cell_size_b	base_crystal.cpp	/^bool BaseCrystal::set_super_cell_size_b( double size_b ){$/;"	function	line:302	language:C++	class:BaseCrystal
set_super_cell_size_b	celslc_prm.cpp	/^bool CELSLC_prm::set_super_cell_size_b( double size ){$/;"	function	line:468	language:C++	class:CELSLC_prm
set_super_cell_size_b	msa_prm.cpp	/^bool MSA_prm::set_super_cell_size_b( double size ){$/;"	function	line:365	language:C++	class:MSA_prm
set_super_cell_size_b	simgrid.cpp	/^bool SimGrid::set_super_cell_size_b( double size ){$/;"	function	line:50	language:C++	class:SimGrid
set_super_cell_size_b	td_map.cpp	/^bool TDMap::set_super_cell_size_b( std::string size_b ){$/;"	function	line:781	language:C++	class:TDMap
set_super_cell_size_b	wavimg_prm.cpp	/^bool WAVIMG_prm::set_super_cell_size_b( double size ){$/;"	function	line:694	language:C++	class:WAVIMG_prm
set_super_cell_size_c	base_crystal.cpp	/^bool BaseCrystal::set_super_cell_size_c( double size_c ){$/;"	function	line:310	language:C++	class:BaseCrystal
set_super_cell_size_c	td_map.cpp	/^bool TDMap::set_super_cell_size_c( std::string size_c ){$/;"	function	line:798	language:C++	class:TDMap
set_switch_coherence_model	wavimg_prm.cpp	/^void WAVIMG_prm::set_switch_coherence_model( int coherence_model ){$/;"	function	line:500	language:C++	class:WAVIMG_prm
set_switch_option_extract_particular_image_frame	wavimg_prm.cpp	/^void WAVIMG_prm::set_switch_option_extract_particular_image_frame( int option ){$/;"	function	line:478	language:C++	class:WAVIMG_prm
set_tdmap	gui_tdmap_table.cpp	/^void TDMap_Table::set_tdmap( TDMap* map ){$/;"	function	line:37	language:C++	class:TDMap_Table
set_thickness_user_estimated_nm	td_map.cpp	/^bool TDMap::set_thickness_user_estimated_nm( std::string s_estimated ){$/;"	function	line:1136	language:C++	class:TDMap
set_type_of_output	wavimg_prm.cpp	/^void WAVIMG_prm::set_type_of_output( int type ){$/;"	function	line:447	language:C++	class:WAVIMG_prm
set_u	vis/camera.cpp	/^void Camera::set_u( const glm::vec3& u ){$/;"	function	line:36	language:C++	class:Camera
set_unit_cell	simulation_step.cpp	/^void Simulation_Step::set_unit_cell( UnitCell* unit_cell ){$/;"	function	line:23	language:C++	class:Simulation_Step
set_unit_cell_cif_path	base_crystal.cpp	/^bool BaseCrystal::set_unit_cell_cif_path( std::string cif_path ){$/;"	function	line:132	language:C++	class:BaseCrystal
set_unit_cell_cif_path	td_map.cpp	/^bool TDMap::set_unit_cell_cif_path( std::string cif_path ){$/;"	function	line:1018	language:C++	class:TDMap
set_update_required_from_pipeline	group_options.cpp	/^void group_options::set_update_required_from_pipeline( std::string signaling_group_name ){$/;"	function	line:53	language:C++	class:group_options
set_upward_vector	base_cell.cpp	/^void BaseCell::set_upward_vector ( cv::Point3d hkl ){$/;"	function	line:254	language:C++	class:BaseCell
set_v	vis/camera.cpp	/^void Camera::set_v( const glm::vec3& v ){$/;"	function	line:40	language:C++	class:Camera
set_validator_double_bottom	treeitem.cpp	/^bool TreeItem::set_validator_double_bottom(int col_pos ,  boost::function<double(void)> fp_validator_min ){$/;"	function	line:786	language:C++	class:TreeItem
set_validator_double_top	treeitem.cpp	/^bool TreeItem::set_validator_double_top(int col_pos ,  boost::function<double(void)> fp_validator_max ){$/;"	function	line:775	language:C++	class:TreeItem
set_validator_int_bottom	treeitem.cpp	/^bool TreeItem::set_validator_int_bottom(int col_pos ,  boost::function<int(void)> fp_validator_min ){$/;"	function	line:698	language:C++	class:TreeItem
set_validator_int_top	treeitem.cpp	/^bool TreeItem::set_validator_int_top(int col_pos ,  boost::function<int(void)> fp_validator_max ){$/;"	function	line:687	language:C++	class:TreeItem
set_variable_description	treeitem.cpp	/^void TreeItem::set_variable_description( std::string vardescription ){$/;"	function	line:456	language:C++	class:TreeItem
set_variable_name	treeitem.cpp	/^void TreeItem::set_variable_name( std::string varname ){$/;"	function	line:452	language:C++	class:TreeItem
set_vis_up	vis/camera.cpp	/^void Camera::set_vis_up( const glm::vec3& upward_vector ){$/;"	function	line:32	language:C++	class:Camera
set_wav_output_target_folder	base_crystal.cpp	/^bool BaseCrystal::set_wav_output_target_folder( std::string folder ){$/;"	function	line:333	language:C++	class:BaseCrystal
set_wav_output_target_folder	td_map.cpp	/^bool TDMap::set_wav_output_target_folder( std::string folder ){$/;"	function	line:719	language:C++	class:TDMap
set_wave_function_name	msa_prm.cpp	/^bool MSA_prm::set_wave_function_name ( std::string wave_function_filename ){$/;"	function	line:251	language:C++	class:MSA_prm
set_wave_function_name	td_map.cpp	/^bool TDMap::set_wave_function_name( std::string name ){$/;"	function	line:689	language:C++	class:TDMap
set_wavimg_prm_name	td_map.cpp	/^bool TDMap::set_wavimg_prm_name(  std::string prm_name  ){$/;"	function	line:756	language:C++	class:TDMap
set_wavimg_var	simgrid.cpp	/^void SimGrid::set_wavimg_var( WAVIMG_prm *wavimg_var ){$/;"	function	line:696	language:C++	class:SimGrid
set_window_height	vis/camera.cpp	/^void Camera::set_window_height( int height ){$/;"	function	line:60	language:C++	class:Camera
set_window_width	vis/camera.cpp	/^void Camera::set_window_width( int width ){$/;"	function	line:56	language:C++	class:Camera
set_zone_axis	base_crystal.cpp	/^bool BaseCrystal::set_zone_axis( cv::Point3d za ){$/;"	function	line:262	language:C++	class:BaseCrystal
set_zone_axis_u	base_crystal.cpp	/^bool BaseCrystal::set_zone_axis_u( double u ){$/;"	function	line:266	language:C++	class:BaseCrystal
set_zone_axis_u	td_map.cpp	/^bool TDMap::set_zone_axis_u( std::string s_za_u ){$/;"	function	line:1034	language:C++	class:TDMap
set_zone_axis_v	base_crystal.cpp	/^bool BaseCrystal::set_zone_axis_v( double v ){$/;"	function	line:273	language:C++	class:BaseCrystal
set_zone_axis_v	td_map.cpp	/^bool TDMap::set_zone_axis_v( std::string s_za_v ){$/;"	function	line:1051	language:C++	class:TDMap
set_zone_axis_vector	base_cell.cpp	/^void BaseCell::set_zone_axis_vector ( cv::Point3d uvw ){$/;"	function	line:250	language:C++	class:BaseCell
set_zone_axis_w	base_crystal.cpp	/^bool BaseCrystal::set_zone_axis_w( double w ){$/;"	function	line:280	language:C++	class:BaseCrystal
set_zone_axis_w	td_map.cpp	/^bool TDMap::set_zone_axis_w( std::string s_za_w ){$/;"	function	line:1068	language:C++	class:TDMap
setup	QtAwesomeAnim.cpp	/^void QtAwesomeAnimation::setup( QPainter &painter, const QRect &rect)$/;"	function	line:20	language:C++	class:QtAwesomeAnimation
setup_image_properties	simgrid.cpp	/^bool SimGrid::setup_image_properties(){$/;"	function	line:71	language:C++	class:SimGrid
severity_level	application_log.hpp	/^  enum severity_level {$/;"	enum	line:27	language:C++	namespace:ApplicationLog
shaderFromFile	vis/shader.cpp	/^Shader Shader::shaderFromFile(const std::string& filePath, GLenum shaderType) {$/;"	function	line:72	language:C++	class:Shader
share	QtAwesome.h	/^      share                            = 0xf064,$/;"	enumerator	line:595	language:C++	enum:fa::icon
sharealt	QtAwesome.h	/^      sharealt                         = 0xf1e0,$/;"	enumerator	line:596	language:C++	enum:fa::icon
sharealtsquare	QtAwesome.h	/^      sharealtsquare                   = 0xf1e1,$/;"	enumerator	line:597	language:C++	enum:fa::icon
sharesquare	QtAwesome.h	/^      sharesquare                      = 0xf14d,$/;"	enumerator	line:598	language:C++	enum:fa::icon
sharesquareo	QtAwesome.h	/^      sharesquareo                     = 0xf045,$/;"	enumerator	line:599	language:C++	enum:fa::icon
shekel	QtAwesome.h	/^      shekel                           = 0xf20b,$/;"	enumerator	line:600	language:C++	enum:fa::icon
sheqel	QtAwesome.h	/^      sheqel                           = 0xf20b,$/;"	enumerator	line:601	language:C++	enum:fa::icon
shield	QtAwesome.h	/^      shield                           = 0xf132,$/;"	enumerator	line:602	language:C++	enum:fa::icon
ship	QtAwesome.h	/^      ship                             = 0xf21a,$/;"	enumerator	line:603	language:C++	enum:fa::icon
shirtsinbulk	QtAwesome.h	/^      shirtsinbulk                     = 0xf214,$/;"	enumerator	line:604	language:C++	enum:fa::icon
shoppingbag	QtAwesome.h	/^      shoppingbag                      = 0xf290,$/;"	enumerator	line:605	language:C++	enum:fa::icon
shoppingbasket	QtAwesome.h	/^      shoppingbasket                   = 0xf291,$/;"	enumerator	line:606	language:C++	enum:fa::icon
shoppingcart	QtAwesome.h	/^      shoppingcart                     = 0xf07a,$/;"	enumerator	line:607	language:C++	enum:fa::icon
shouldBeBest	cv_tdmap_cell_image_frame_delegate.cpp	/^bool CvTDMapImageFrameDelegate::shouldBeBest(const QModelIndex &index) const {$/;"	function	line:27	language:C++	class:CvTDMapImageFrameDelegate
showToolTipText	treeitem_file_delegate.cpp	/^void TreeItemFileDelegate::showToolTipText( QWidget *editor ) const {$/;"	function	line:498	language:C++	class:TreeItemFileDelegate
shower	QtAwesome.h	/^      shower                           = 0xf2cc,$/;"	enumerator	line:608	language:C++	enum:fa::icon
signal	QtAwesome.h	/^      signal                           = 0xf012,$/;"	enumerator	line:612	language:C++	enum:fa::icon
signin	QtAwesome.h	/^      signin                           = 0xf090,$/;"	enumerator	line:609	language:C++	enum:fa::icon
signing	QtAwesome.h	/^      signing                          = 0xf2a7,$/;"	enumerator	line:613	language:C++	enum:fa::icon
signlanguage	QtAwesome.h	/^      signlanguage                     = 0xf2a7,$/;"	enumerator	line:610	language:C++	enum:fa::icon
signout	QtAwesome.h	/^      signout                          = 0xf08b,$/;"	enumerator	line:611	language:C++	enum:fa::icon
sim_grid	simgrid.hpp	/^    cv::Mat sim_grid;$/;"	member	line:64	language:C++	class:SimGrid	access:private
sim_grid_height	simgrid.hpp	/^    int sim_grid_height;$/;"	member	line:63	language:C++	class:SimGrid	access:private
sim_grid_switch	simgrid.hpp	/^    bool sim_grid_switch = false;$/;"	member	line:92	language:C++	class:SimGrid	access:private
sim_grid_width	simgrid.hpp	/^    int sim_grid_width;$/;"	member	line:62	language:C++	class:SimGrid	access:private
sim_image_properties	simgrid.hpp	/^    BaseImage sim_image_properties;$/;"	member	line:57	language:C++	class:SimGrid	access:private
sim_super_cell_worker	configwin.h	/^    GuiSimOutUpdater *sim_super_cell_worker;$/;"	member	line:174	language:C++	class:MainWindow	access:private
sim_tdmap_output_worker	configwin.h	/^    GuiSimOutUpdater *sim_tdmap_output_worker;$/;"	member	line:177	language:C++	class:MainWindow	access:private
sim_tdmap_worker	configwin.h	/^    GuiSimOutUpdater *sim_tdmap_worker;$/;"	member	line:171	language:C++	class:MainWindow	access:private
simgrid_best_match_defocus_nm	simgrid.hpp	/^    double simgrid_best_match_defocus_nm;$/;"	member	line:54	language:C++	class:SimGrid	access:private
simgrid_best_match_thickness_nm	base_cell.hpp	/^    double simgrid_best_match_thickness_nm;$/;"	member	line:149	language:C++	class:BaseCell	access:protected
simgrid_best_match_thickness_nm	simgrid.hpp	/^    double simgrid_best_match_thickness_nm;$/;"	member	line:53	language:C++	class:SimGrid	access:private
simgrid_best_match_thickness_slice	simgrid.hpp	/^    int simgrid_best_match_thickness_slice;$/;"	member	line:52	language:C++	class:SimGrid	access:private
simgrid_step_group_options	configwin.h	/^    group_options* simgrid_step_group_options;$/;"	member	line:271	language:C++	class:MainWindow	access:private
simgrid_step_group_options	td_map.hpp	/^    group_options* simgrid_step_group_options;$/;"	member	line:94	language:C++	class:TDMap	access:private
simplybuilt	QtAwesome.h	/^      simplybuilt                      = 0xf215,$/;"	enumerator	line:614	language:C++	enum:fa::icon
simulate_from_grid	simgrid.cpp	/^bool SimGrid::simulate_from_grid(){$/;"	function	line:484	language:C++	class:SimGrid
simulated_image_grid	gui_tdmap_table.h	/^    std::vector< std::vector<cv::Mat> > simulated_image_grid;$/;"	member	line:88	language:C++	class:TDMap_Table	access:private
simulated_images_grid	simgrid.hpp	/^    std::vector< std::vector<cv::Mat> > simulated_images_grid;$/;"	member	line:67	language:C++	class:SimGrid	access:private
simulated_matches	simgrid.hpp	/^    std::vector<double> simulated_matches;$/;"	member	line:74	language:C++	class:SimGrid	access:private
simulated_params_nm_defocus_vec	base_crystal.hpp	/^    std::vector<double> simulated_params_nm_defocus_vec;$/;"	member	line:141	language:C++	class:BaseCrystal	access:protected
simulated_params_nm_slice_vec	base_crystal.hpp	/^    std::vector<double> simulated_params_nm_slice_vec;$/;"	member	line:139	language:C++	class:BaseCrystal	access:protected
simulated_params_slice_vec	base_crystal.hpp	/^    std::vector<int> simulated_params_slice_vec;$/;"	member	line:137	language:C++	class:BaseCrystal	access:protected
simulation_image_spread_envelope_switch	wavimg_prm.hpp	/^    int simulation_image_spread_envelope_switch;$/;"	member	line:68	language:C++	class:WAVIMG_prm	access:private
single_slice_calculation_enabled_switch	celslc_prm.hpp	/^    bool single_slice_calculation_enabled_switch = false;$/;"	member	line:60	language:C++	class:CELSLC_prm	access:private
single_slice_calculation_nz_switch	celslc_prm.hpp	/^    bool single_slice_calculation_nz_switch = false;$/;"	member	line:59	language:C++	class:CELSLC_prm	access:private
single_slice_calculation_prepare_bin_runned_switch	celslc_prm.hpp	/^    bool single_slice_calculation_prepare_bin_runned_switch = false;$/;"	member	line:58	language:C++	class:CELSLC_prm	access:private
sitemap	QtAwesome.h	/^      sitemap                          = 0xf0e8,$/;"	enumerator	line:615	language:C++	enum:fa::icon
size	chem_database.cpp	/^int Chem_Database::size(){$/;"	function	line:29	language:C++	class:Chem_Database
sizeHint	cv_image_widget.cpp	/^QSize CVImageWidget::sizeHint() const {$/;"	function	line:9	language:C++	class:CVImageWidget
sizeHint	renderarea.cpp	/^QSize RenderArea::sizeHint() const$/;"	function	line:18	language:C++	class:RenderArea
sizeHint	treeitem_file_delegate.cpp	/^QSize TreeItemFileDelegate::sizeHint ( const QStyleOptionViewItem & option, const QModelIndex & index ) const$/;"	function	line:451	language:C++	class:TreeItemFileDelegate
size_raw_data	emd_dataset.h	/^    size_t size_raw_data;$/;"	member	line:47	language:C++	class:EMDDataSet	access:protected
skyatlas	QtAwesome.h	/^      skyatlas                         = 0xf216,$/;"	enumerator	line:616	language:C++	enum:fa::icon
skype	QtAwesome.h	/^      skype                            = 0xf17e,$/;"	enumerator	line:617	language:C++	enum:fa::icon
slack	QtAwesome.h	/^      slack                            = 0xf198,$/;"	enumerator	line:618	language:C++	enum:fa::icon
slc_file_name_prefix	base_crystal.hpp	/^    std::string slc_file_name_prefix;$/;"	member	line:86	language:C++	class:BaseCrystal	access:protected
slc_output_target_folder	base_crystal.hpp	/^    std::string slc_output_target_folder;$/;"	member	line:97	language:C++	class:BaseCrystal	access:protected
slice_defocus_match_points	simgrid.hpp	/^    std::vector<cv::Point3d> slice_defocus_match_points;$/;"	member	line:75	language:C++	class:SimGrid	access:private
slice_index	msa_prm.hpp	/^    std::vector<int> slice_index;$/;"	member	line:38	language:C++	class:MSA_prm	access:private
slice_params_accum_nm_slice_vec	base_crystal.hpp	/^    std::vector<double> slice_params_accum_nm_slice_vec;$/;"	member	line:91	language:C++	class:BaseCrystal	access:protected
slice_params_nm_slice	base_crystal.hpp	/^    std::map<int,double> slice_params_nm_slice;$/;"	member	line:93	language:C++	class:BaseCrystal	access:protected
slice_params_nm_slice_vec	base_crystal.hpp	/^    std::vector<double> slice_params_nm_slice_vec;$/;"	member	line:89	language:C++	class:BaseCrystal	access:protected
slice_period	base_crystal.hpp	/^    int slice_period = 0;$/;"	member	line:114	language:C++	class:BaseCrystal	access:protected
slice_samples	base_crystal.hpp	/^    int slice_samples = 0;$/;"	member	line:108	language:C++	class:BaseCrystal	access:protected
slices_lower_bound	base_crystal.hpp	/^    int slices_lower_bound = 0;$/;"	member	line:117	language:C++	class:BaseCrystal	access:protected
slices_upper_bound	base_crystal.hpp	/^    int slices_upper_bound = 0;$/;"	member	line:119	language:C++	class:BaseCrystal	access:protected
slider_column	treeitem.h	/^    int slider_column = 1;$/;"	member	line:193	language:C++	class:TreeItem	access:private
sliders	QtAwesome.h	/^      sliders                          = 0xf1de,$/;"	enumerator	line:619	language:C++	enum:fa::icon
slideshare	QtAwesome.h	/^      slideshare                       = 0xf1e7,$/;"	enumerator	line:620	language:C++	enum:fa::icon
smileo	QtAwesome.h	/^      smileo                           = 0xf118,$/;"	enumerator	line:621	language:C++	enum:fa::icon
snapchat	QtAwesome.h	/^      snapchat                         = 0xf2ab,$/;"	enumerator	line:622	language:C++	enum:fa::icon
snapchatghost	QtAwesome.h	/^      snapchatghost                    = 0xf2ac,$/;"	enumerator	line:623	language:C++	enum:fa::icon
snapchatsquare	QtAwesome.h	/^      snapchatsquare                   = 0xf2ad,$/;"	enumerator	line:624	language:C++	enum:fa::icon
snowflakeo	QtAwesome.h	/^      snowflakeo                       = 0xf2dc,$/;"	enumerator	line:625	language:C++	enum:fa::icon
soccerballo	QtAwesome.h	/^      soccerballo                      = 0xf1e3,$/;"	enumerator	line:626	language:C++	enum:fa::icon
somethingChanged	gui_tdmap_table.cpp	/^void TDMap_Table::somethingChanged()$/;"	function	line:260	language:C++	class:TDMap_Table
sort	QtAwesome.h	/^      sort                             = 0xf0dc,$/;"	enumerator	line:627	language:C++	enum:fa::icon
sortalphaasc	QtAwesome.h	/^      sortalphaasc                     = 0xf15d,$/;"	enumerator	line:628	language:C++	enum:fa::icon
sortalphadesc	QtAwesome.h	/^      sortalphadesc                    = 0xf15e,$/;"	enumerator	line:629	language:C++	enum:fa::icon
sortamountasc	QtAwesome.h	/^      sortamountasc                    = 0xf160,$/;"	enumerator	line:630	language:C++	enum:fa::icon
sortamountdesc	QtAwesome.h	/^      sortamountdesc                   = 0xf161,$/;"	enumerator	line:631	language:C++	enum:fa::icon
sortasc	QtAwesome.h	/^      sortasc                          = 0xf0de,$/;"	enumerator	line:632	language:C++	enum:fa::icon
sortdesc	QtAwesome.h	/^      sortdesc                         = 0xf0dd,$/;"	enumerator	line:633	language:C++	enum:fa::icon
sortdown	QtAwesome.h	/^      sortdown                         = 0xf0dd,$/;"	enumerator	line:634	language:C++	enum:fa::icon
sortnumericasc	QtAwesome.h	/^      sortnumericasc                   = 0xf162,$/;"	enumerator	line:635	language:C++	enum:fa::icon
sortnumericdesc	QtAwesome.h	/^      sortnumericdesc                  = 0xf163,$/;"	enumerator	line:636	language:C++	enum:fa::icon
sortup	QtAwesome.h	/^      sortup                           = 0xf0de,$/;"	enumerator	line:637	language:C++	enum:fa::icon
soundcloud	QtAwesome.h	/^      soundcloud                       = 0xf1be,$/;"	enumerator	line:638	language:C++	enum:fa::icon
spaceshuttle	QtAwesome.h	/^      spaceshuttle                     = 0xf197,$/;"	enumerator	line:639	language:C++	enum:fa::icon
spinner	QtAwesome.h	/^      spinner                          = 0xf110,$/;"	enumerator	line:640	language:C++	enum:fa::icon
split	string_additions.cpp	/^vector<string> split(string line, string delimeter){$/;"	function	line:26	language:C++
spoon	QtAwesome.h	/^      spoon                            = 0xf1b1,$/;"	enumerator	line:641	language:C++	enum:fa::icon
spotify	QtAwesome.h	/^      spotify                          = 0xf1bc,$/;"	enumerator	line:642	language:C++	enum:fa::icon
square	QtAwesome.h	/^      square                           = 0xf0c8,$/;"	enumerator	line:643	language:C++	enum:fa::icon
squareo	QtAwesome.h	/^      squareo                          = 0xf096,$/;"	enumerator	line:644	language:C++	enum:fa::icon
ssc_runned_bin	celslc_prm.hpp	/^    bool ssc_runned_bin = false;$/;"	member	line:50	language:C++	class:CELSLC_prm	access:private
stackexchange	QtAwesome.h	/^      stackexchange                    = 0xf18d,$/;"	enumerator	line:645	language:C++	enum:fa::icon
stackoverflow	QtAwesome.h	/^      stackoverflow                    = 0xf16c,$/;"	enumerator	line:646	language:C++	enum:fa::icon
star	QtAwesome.h	/^      star                             = 0xf005,$/;"	enumerator	line:647	language:C++	enum:fa::icon
starhalf	QtAwesome.h	/^      starhalf                         = 0xf089,$/;"	enumerator	line:648	language:C++	enum:fa::icon
starhalfempty	QtAwesome.h	/^      starhalfempty                    = 0xf123,$/;"	enumerator	line:649	language:C++	enum:fa::icon
starhalffull	QtAwesome.h	/^      starhalffull                     = 0xf123,$/;"	enumerator	line:650	language:C++	enum:fa::icon
starhalfo	QtAwesome.h	/^      starhalfo                        = 0xf123,$/;"	enumerator	line:651	language:C++	enum:fa::icon
staro	QtAwesome.h	/^      staro                            = 0xf006,$/;"	enumerator	line:652	language:C++	enum:fa::icon
steam	QtAwesome.h	/^      steam                            = 0xf1b6,$/;"	enumerator	line:653	language:C++	enum:fa::icon
steamsquare	QtAwesome.h	/^      steamsquare                      = 0xf1b7,$/;"	enumerator	line:654	language:C++	enum:fa::icon
step_	QtAwesomeAnim.h	/^    int step_;$/;"	member	line:30	language:C++	class:QtAwesomeAnimation	access:private
stepbackward	QtAwesome.h	/^      stepbackward                     = 0xf048,$/;"	enumerator	line:655	language:C++	enum:fa::icon
stepforward	QtAwesome.h	/^      stepforward                      = 0xf051,$/;"	enumerator	line:656	language:C++	enum:fa::icon
stethoscope	QtAwesome.h	/^      stethoscope                      = 0xf0f1,$/;"	enumerator	line:657	language:C++	enum:fa::icon
stickynote	QtAwesome.h	/^      stickynote                       = 0xf249,$/;"	enumerator	line:658	language:C++	enum:fa::icon
stickynoteo	QtAwesome.h	/^      stickynoteo                      = 0xf24a,$/;"	enumerator	line:659	language:C++	enum:fa::icon
stop	QtAwesome.h	/^      stop                             = 0xf04d,$/;"	enumerator	line:660	language:C++	enum:fa::icon
stopUsing	vis/program.cpp	/^void Program::stopUsing() const {$/;"	function	line:67	language:C++	class:Program
stopcircle	QtAwesome.h	/^      stopcircle                       = 0xf28d,$/;"	enumerator	line:661	language:C++	enum:fa::icon
stopcircleo	QtAwesome.h	/^      stopcircleo                      = 0xf28e,$/;"	enumerator	line:662	language:C++	enum:fa::icon
strAry2StrVec	string_additions.cpp	/^vector<string> strAry2StrVec(string list[]){$/;"	function	line:48	language:C++
strCmpList	string_additions.cpp	/^int strCmpList(vector<string> list,string str){$/;"	function	line:14	language:C++
streetview	QtAwesome.h	/^      streetview                       = 0xf21d,$/;"	enumerator	line:663	language:C++	enum:fa::icon
strikethrough	QtAwesome.h	/^      strikethrough                    = 0xf0cc,$/;"	enumerator	line:664	language:C++	enum:fa::icon
strippedName	configwin.cpp	/^QString MainWindow::strippedName(const QString &fullFileName){$/;"	function	line:1060	language:C++	class:MainWindow
stumbleupon	QtAwesome.h	/^      stumbleupon                      = 0xf1a4,$/;"	enumerator	line:665	language:C++	enum:fa::icon
stumbleuponcircle	QtAwesome.h	/^      stumbleuponcircle                = 0xf1a3,$/;"	enumerator	line:666	language:C++	enum:fa::icon
subscript	QtAwesome.h	/^      subscript                        = 0xf12c,$/;"	enumerator	line:667	language:C++	enum:fa::icon
subway	QtAwesome.h	/^      subway                           = 0xf239,$/;"	enumerator	line:668	language:C++	enum:fa::icon
suitcase	QtAwesome.h	/^      suitcase                         = 0xf0f2,$/;"	enumerator	line:669	language:C++	enum:fa::icon
suno	QtAwesome.h	/^      suno                             = 0xf185,$/;"	enumerator	line:670	language:C++	enum:fa::icon
super_cell	base_crystal.hpp	/^    SuperCell* super_cell = nullptr;$/;"	member	line:46	language:C++	class:BaseCrystal	access:private
super_cell_cel_file	celslc_prm.hpp	/^    std::string super_cell_cel_file;$/;"	member	line:44	language:C++	class:CELSLC_prm	access:private
super_cell_setup_model	configwin.h	/^    TreeModel* super_cell_setup_model;$/;"	member	line:166	language:C++	class:MainWindow	access:private
super_cell_size_a	base_crystal.hpp	/^    double super_cell_size_a = 0.0f;$/;"	member	line:77	language:C++	class:BaseCrystal	access:protected
super_cell_size_b	base_crystal.hpp	/^    double super_cell_size_b = 0.0f;$/;"	member	line:79	language:C++	class:BaseCrystal	access:protected
super_cell_size_c	base_crystal.hpp	/^    double super_cell_size_c = 0.0f;$/;"	member	line:81	language:C++	class:BaseCrystal	access:protected
super_cell_target_step_group_options	configwin.h	/^    group_options* super_cell_target_step_group_options;$/;"	member	line:272	language:C++	class:MainWindow	access:private
superpowers	QtAwesome.h	/^      superpowers                      = 0xf2dd,$/;"	enumerator	line:671	language:C++	enum:fa::icon
superscript	QtAwesome.h	/^      superscript                      = 0xf12b,$/;"	enumerator	line:672	language:C++	enum:fa::icon
support	QtAwesome.h	/^      support                          = 0xf1cd,$/;"	enumerator	line:673	language:C++	enum:fa::icon
switch_coherence_model	wavimg_prm.hpp	/^    int switch_coherence_model = 1;$/;"	member	line:55	language:C++	class:WAVIMG_prm	access:private
switch_option_extract_particular_image_frame	wavimg_prm.hpp	/^    int switch_option_extract_particular_image_frame = 0;$/;"	member	line:42	language:C++	class:WAVIMG_prm	access:private
symbCalc	symbcalc.cpp	/^float symbCalc(std::string expression,double x,double y,double z){$/;"	function	line:14	language:C++
symbol	atom_info.cpp	/^std::string Atom_Info::symbol() {$/;"	function	line:46	language:C++	class:Atom_Info
symetry_atom_positions	base_cell.hpp	/^    std::vector<cv::Point3d> symetry_atom_positions;$/;"	member	line:179	language:C++	class:BaseCell	access:protected
symmetry_equiv_pos_as_x	base_cell.hpp	/^    std::vector<std::string> symmetry_equiv_pos_as_x;$/;"	member	line:161	language:C++	class:BaseCell	access:protected
symmetry_equiv_pos_as_xyz	base_cell.hpp	/^    std::vector<std::string> symmetry_equiv_pos_as_xyz;$/;"	member	line:160	language:C++	class:BaseCell	access:protected
symmetry_equiv_pos_as_y	base_cell.hpp	/^    std::vector<std::string> symmetry_equiv_pos_as_y;$/;"	member	line:162	language:C++	class:BaseCell	access:protected
symmetry_equiv_pos_as_z	base_cell.hpp	/^    std::vector<std::string> symmetry_equiv_pos_as_z;$/;"	member	line:163	language:C++	class:BaseCell	access:protected
t_class	emd_object.h	/^    H5T_class_t t_class;$/;"	member	line:43	language:C++	class:EMDObject	access:protected
t_size	emd_object.h	/^    size_t t_size;$/;"	member	line:45	language:C++	class:EMDObject	access:protected
table	QtAwesome.h	/^      table                            = 0xf0ce,$/;"	enumerator	line:674	language:C++	enum:fa::icon
table_parent	gui_tdmap_table.h	/^    QWidget *table_parent;$/;"	member	line:75	language:C++	class:TDMap_Table	access:private
table_view	cv_image_edge_frame.h	/^    QTableView *table_view;$/;"	member	line:78	language:C++	class:CvImageEdgeFrame	access:protected
table_view	cv_image_table_frame.h	/^    QTableView *table_view;$/;"	member	line:43	language:C++	class:CvImageFrameTableWidget	access:protected
tablet	QtAwesome.h	/^      tablet                           = 0xf10a,$/;"	enumerator	line:675	language:C++	enum:fa::icon
tachometer	QtAwesome.h	/^      tachometer                       = 0xf0e4,$/;"	enumerator	line:676	language:C++	enum:fa::icon
tag	QtAwesome.h	/^      tag                              = 0xf02b,$/;"	enumerator	line:677	language:C++	enum:fa::icon
tags	QtAwesome.h	/^      tags                             = 0xf02c,$/;"	enumerator	line:678	language:C++	enum:fa::icon
tasks	QtAwesome.h	/^      tasks                            = 0xf0ae,$/;"	enumerator	line:679	language:C++	enum:fa::icon
taxi	QtAwesome.h	/^      taxi                             = 0xf1ba,$/;"	enumerator	line:680	language:C++	enum:fa::icon
tdmap	gui_sim_updater.hpp	/^    TDMap* tdmap;$/;"	member	line:138	language:C++	class:GuiSimOutUpdater	access:private
tdmap_cell_dimensions	configwin.h	/^  TreeItem* tdmap_cell_dimensions = nullptr;$/;"	member	line:252	language:C++	class:MainWindow	access:private
tdmap_cell_dimensions_a	configwin.h	/^  TreeItem* tdmap_cell_dimensions_a = nullptr;$/;"	member	line:253	language:C++	class:MainWindow	access:private
tdmap_cell_dimensions_b	configwin.h	/^  TreeItem* tdmap_cell_dimensions_b = nullptr;$/;"	member	line:254	language:C++	class:MainWindow	access:private
tdmap_root	configwin.h	/^  TreeItem* tdmap_root = nullptr;$/;"	member	line:236	language:C++	class:MainWindow	access:private
tdmap_running_configuration_model	configwin.h	/^    TreeModel *tdmap_running_configuration_model;$/;"	member	line:163	language:C++	class:MainWindow	access:private
tdmap_simulation_setup_model	configwin.h	/^    TreeModel *tdmap_simulation_setup_model;$/;"	member	line:162	language:C++	class:MainWindow	access:private
telegram	QtAwesome.h	/^      telegram                         = 0xf2c6,$/;"	enumerator	line:681	language:C++	enum:fa::icon
television	QtAwesome.h	/^      television                       = 0xf26c,$/;"	enumerator	line:682	language:C++	enum:fa::icon
tencentweibo	QtAwesome.h	/^      tencentweibo                     = 0xf1d5,$/;"	enumerator	line:683	language:C++	enum:fa::icon
terminal	QtAwesome.h	/^      terminal                         = 0xf120,$/;"	enumerator	line:684	language:C++	enum:fa::icon
test_clean_run_env	td_map.cpp	/^bool TDMap::test_clean_run_env(){$/;"	function	line:106	language:C++	class:TDMap
test_clean_run_env_warnings	td_map.hpp	/^    std::vector<std::string> test_clean_run_env_warnings;$/;"	member	line:97	language:C++	class:TDMap	access:private
test_run_config	td_map.cpp	/^bool TDMap::test_run_config(){$/;"	function	line:157	language:C++	class:TDMap
test_run_config_errors	td_map.hpp	/^    std::vector<std::string> test_run_config_errors;$/;"	member	line:96	language:C++	class:TDMap	access:private
textheight	QtAwesome.h	/^      textheight                       = 0xf034,$/;"	enumerator	line:685	language:C++	enum:fa::icon
textwidth	QtAwesome.h	/^      textwidth                        = 0xf035,$/;"	enumerator	line:686	language:C++	enum:fa::icon
th	QtAwesome.h	/^      th                               = 0xf00a,$/;"	enumerator	line:687	language:C++	enum:fa::icon
themeisle	QtAwesome.h	/^      themeisle                        = 0xf2b2,$/;"	enumerator	line:690	language:C++	enum:fa::icon
thermometer	QtAwesome.h	/^      thermometer                      = 0xf2c7,$/;"	enumerator	line:691	language:C++	enum:fa::icon
thermometer0	QtAwesome.h	/^      thermometer0                     = 0xf2cb,$/;"	enumerator	line:692	language:C++	enum:fa::icon
thermometer1	QtAwesome.h	/^      thermometer1                     = 0xf2ca,$/;"	enumerator	line:693	language:C++	enum:fa::icon
thermometer2	QtAwesome.h	/^      thermometer2                     = 0xf2c9,$/;"	enumerator	line:694	language:C++	enum:fa::icon
thermometer3	QtAwesome.h	/^      thermometer3                     = 0xf2c8,$/;"	enumerator	line:695	language:C++	enum:fa::icon
thermometer4	QtAwesome.h	/^      thermometer4                     = 0xf2c7,$/;"	enumerator	line:696	language:C++	enum:fa::icon
thermometerempty	QtAwesome.h	/^      thermometerempty                 = 0xf2cb,$/;"	enumerator	line:697	language:C++	enum:fa::icon
thermometerfull	QtAwesome.h	/^      thermometerfull                  = 0xf2c7,$/;"	enumerator	line:698	language:C++	enum:fa::icon
thermometerhalf	QtAwesome.h	/^      thermometerhalf                  = 0xf2c9,$/;"	enumerator	line:699	language:C++	enum:fa::icon
thermometerquarter	QtAwesome.h	/^      thermometerquarter               = 0xf2ca,$/;"	enumerator	line:700	language:C++	enum:fa::icon
thermometerthreequarters	QtAwesome.h	/^      thermometerthreequarters         = 0xf2c8,$/;"	enumerator	line:701	language:C++	enum:fa::icon
thickness_range	configwin.h	/^  TreeItem* thickness_range = nullptr;$/;"	member	line:241	language:C++	class:MainWindow	access:private
thickness_range_lower_bound	configwin.h	/^  TreeItem* thickness_range_lower_bound = nullptr;$/;"	member	line:242	language:C++	class:MainWindow	access:private
thickness_range_number_samples	configwin.h	/^  TreeItem* thickness_range_number_samples = nullptr;$/;"	member	line:240	language:C++	class:MainWindow	access:private
thickness_range_upper_bound	configwin.h	/^  TreeItem* thickness_range_upper_bound = nullptr;$/;"	member	line:243	language:C++	class:MainWindow	access:private
thlarge	QtAwesome.h	/^      thlarge                          = 0xf009,$/;"	enumerator	line:688	language:C++	enum:fa::icon
thlist	QtAwesome.h	/^      thlist                           = 0xf00b,$/;"	enumerator	line:689	language:C++	enum:fa::icon
thumbsdown	QtAwesome.h	/^      thumbsdown                       = 0xf165,$/;"	enumerator	line:703	language:C++	enum:fa::icon
thumbsodown	QtAwesome.h	/^      thumbsodown                      = 0xf088,$/;"	enumerator	line:704	language:C++	enum:fa::icon
thumbsoup	QtAwesome.h	/^      thumbsoup                        = 0xf087,$/;"	enumerator	line:705	language:C++	enum:fa::icon
thumbsup	QtAwesome.h	/^      thumbsup                         = 0xf164,$/;"	enumerator	line:706	language:C++	enum:fa::icon
thumbtack	QtAwesome.h	/^      thumbtack                        = 0xf08d,$/;"	enumerator	line:702	language:C++	enum:fa::icon
ticket	QtAwesome.h	/^      ticket                           = 0xf145,$/;"	enumerator	line:707	language:C++	enum:fa::icon
timer_	QtAwesomeAnim.h	/^    QTimer* timer_;$/;"	member	line:28	language:C++	class:QtAwesomeAnimation	access:private
times	QtAwesome.h	/^      times                            = 0xf00d,$/;"	enumerator	line:708	language:C++	enum:fa::icon
timescircle	QtAwesome.h	/^      timescircle                      = 0xf057,$/;"	enumerator	line:709	language:C++	enum:fa::icon
timescircleo	QtAwesome.h	/^      timescircleo                     = 0xf05c,$/;"	enumerator	line:710	language:C++	enum:fa::icon
timesrectangle	QtAwesome.h	/^      timesrectangle                   = 0xf2d3,$/;"	enumerator	line:711	language:C++	enum:fa::icon
timesrectangleo	QtAwesome.h	/^      timesrectangleo                  = 0xf2d4,$/;"	enumerator	line:712	language:C++	enum:fa::icon
tint	QtAwesome.h	/^      tint                             = 0xf043,$/;"	enumerator	line:713	language:C++	enum:fa::icon
to_unit_cell_pos	base_cell.hpp	/^    std::vector<int> to_unit_cell_pos;$/;"	member	line:93	language:C++	class:BaseCell	access:protected
toggledown	QtAwesome.h	/^      toggledown                       = 0xf150,$/;"	enumerator	line:714	language:C++	enum:fa::icon
toggleleft	QtAwesome.h	/^      toggleleft                       = 0xf191,$/;"	enumerator	line:715	language:C++	enum:fa::icon
toggleoff	QtAwesome.h	/^      toggleoff                        = 0xf204,$/;"	enumerator	line:716	language:C++	enum:fa::icon
toggleon	QtAwesome.h	/^      toggleon                         = 0xf205,$/;"	enumerator	line:717	language:C++	enum:fa::icon
toggleright	QtAwesome.h	/^      toggleright                      = 0xf152,$/;"	enumerator	line:718	language:C++	enum:fa::icon
toggleup	QtAwesome.h	/^      toggleup                         = 0xf151,$/;"	enumerator	line:719	language:C++	enum:fa::icon
toolbar	cv_image_edge_frame.h	/^    QToolBar *toolbar;$/;"	member	line:77	language:C++	class:CvImageEdgeFrame	access:protected
toolbar	cv_image_frame.h	/^    QToolBar *toolbar;$/;"	member	line:39	language:C++	class:CvImageFrameWidget	access:protected
toolbar	cv_tdmap_cell_image_frame.h	/^    QToolBar *toolbar;$/;"	member	line:33	language:C++	class:CvTDMapImageFrame	access:protected
toolsLayout	cv_image_cell_widget.h	/^    QBoxLayout *toolsLayout;$/;"	member	line:78	language:C++	class:CvImageCellWidget	access:protected
toolsLayout	cv_image_edge_frame.h	/^    QBoxLayout *toolsLayout;$/;"	member	line:76	language:C++	class:CvImageEdgeFrame	access:protected
toolsLayout	cv_image_frame.h	/^    QBoxLayout *toolsLayout;$/;"	member	line:38	language:C++	class:CvImageFrameWidget	access:protected
toolsLayout	cv_tdmap_cell_image_frame.h	/^    QBoxLayout *toolsLayout;$/;"	member	line:32	language:C++	class:CvTDMapImageFrame	access:protected
top_padding_px	base_cell.hpp	/^    int top_padding_px;$/;"	member	line:134	language:C++	class:BaseCell	access:protected
top_padding_w_margin_px	base_cell.hpp	/^    int top_padding_w_margin_px;$/;"	member	line:132	language:C++	class:BaseCell	access:protected
trademark	QtAwesome.h	/^      trademark                        = 0xf25c,$/;"	enumerator	line:720	language:C++	enum:fa::icon
train	QtAwesome.h	/^      train                            = 0xf238,$/;"	enumerator	line:721	language:C++	enum:fa::icon
transgender	QtAwesome.h	/^      transgender                      = 0xf224,$/;"	enumerator	line:722	language:C++	enum:fa::icon
transgenderalt	QtAwesome.h	/^      transgenderalt                   = 0xf225,$/;"	enumerator	line:723	language:C++	enum:fa::icon
trash	QtAwesome.h	/^      trash                            = 0xf1f8,$/;"	enumerator	line:724	language:C++	enum:fa::icon
trasho	QtAwesome.h	/^      trasho                           = 0xf014,$/;"	enumerator	line:725	language:C++	enum:fa::icon
tree	QtAwesome.h	/^      tree                             = 0xf1bb,$/;"	enumerator	line:726	language:C++	enum:fa::icon
trello	QtAwesome.h	/^      trello                           = 0xf181,$/;"	enumerator	line:727	language:C++	enum:fa::icon
tripadvisor	QtAwesome.h	/^      tripadvisor                      = 0xf262,$/;"	enumerator	line:728	language:C++	enum:fa::icon
trophy	QtAwesome.h	/^      trophy                           = 0xf091,$/;"	enumerator	line:729	language:C++	enum:fa::icon
truck	QtAwesome.h	/^      truck                            = 0xf0d1,$/;"	enumerator	line:730	language:C++	enum:fa::icon
tty	QtAwesome.h	/^      tty                              = 0xf1e4,$/;"	enumerator	line:732	language:C++	enum:fa::icon
tumblr	QtAwesome.h	/^      tumblr                           = 0xf173,$/;"	enumerator	line:733	language:C++	enum:fa::icon
tumblrsquare	QtAwesome.h	/^      tumblrsquare                     = 0xf174,$/;"	enumerator	line:734	language:C++	enum:fa::icon
turkishlira	QtAwesome.h	/^      turkishlira                      = 0xf195,$/;"	enumerator	line:735	language:C++	enum:fa::icon
tv	QtAwesome.h	/^      tv                               = 0xf26c,$/;"	enumerator	line:736	language:C++	enum:fa::icon
twitch	QtAwesome.h	/^      twitch                           = 0xf1e8,$/;"	enumerator	line:737	language:C++	enum:fa::icon
twitter	QtAwesome.h	/^      twitter                          = 0xf099,$/;"	enumerator	line:738	language:C++	enum:fa::icon
twittersquare	QtAwesome.h	/^      twittersquare                    = 0xf081,$/;"	enumerator	line:739	language:C++	enum:fa::icon
type_id	emd_object.h	/^    hid_t type_id;$/;"	member	line:39	language:C++	class:EMDObject	access:protected
type_of_output	wavimg_prm.hpp	/^    int type_of_output = 0;$/;"	member	line:31	language:C++	class:WAVIMG_prm	access:private
ui	configwin.h	/^    Ui::MainWindow *ui;$/;"	member	line:154	language:C++	class:MainWindow	access:private
ui	settings.h	/^    Ui::Settings *ui;$/;"	member	line:69	language:C++	class:Settings	access:private
umbrella	QtAwesome.h	/^      umbrella                         = 0xf0e9,$/;"	enumerator	line:740	language:C++	enum:fa::icon
underline	QtAwesome.h	/^      underline                        = 0xf0cd,$/;"	enumerator	line:741	language:C++	enum:fa::icon
undo	QtAwesome.h	/^      undo                             = 0xf0e2,$/;"	enumerator	line:742	language:C++	enum:fa::icon
uniform	vis/program.cpp	/^GLint Program::uniform(const GLchar* uniformName) const {$/;"	function	line:83	language:C++	class:Program
unit_cell	base_crystal.hpp	/^    UnitCell* unit_cell = nullptr;$/;"	member	line:43	language:C++	class:BaseCrystal	access:private
unit_cell	celslc_prm.hpp	/^UnitCell* unit_cell;$/;"	member	line:47	language:C++	class:CELSLC_prm	access:private
unit_cell_file	configwin.h	/^  TreeItem* unit_cell_file = nullptr;$/;"	member	line:226	language:C++	class:MainWindow	access:private
unit_cell_file_cif	configwin.h	/^  TreeItem* unit_cell_file_cif = nullptr;$/;"	member	line:227	language:C++	class:MainWindow	access:private
universalaccess	QtAwesome.h	/^      universalaccess                  = 0xf29a,$/;"	enumerator	line:743	language:C++	enum:fa::icon
university	QtAwesome.h	/^      university                       = 0xf19c,$/;"	enumerator	line:744	language:C++	enum:fa::icon
unlink	QtAwesome.h	/^      unlink                           = 0xf127,$/;"	enumerator	line:745	language:C++	enum:fa::icon
unlock	QtAwesome.h	/^      unlock                           = 0xf09c,$/;"	enumerator	line:746	language:C++	enum:fa::icon
unlockalt	QtAwesome.h	/^      unlockalt                        = 0xf13e,$/;"	enumerator	line:747	language:C++	enum:fa::icon
unsorted	QtAwesome.h	/^      unsorted                         = 0xf0dc,$/;"	enumerator	line:748	language:C++	enum:fa::icon
up	vis/camera.cpp	/^glm::vec3 Camera::up() const {$/;"	function	line:136	language:C++	class:Camera
update	QtAwesomeAnim.cpp	/^void QtAwesomeAnimation::update()$/;"	function	line:41	language:C++	class:QtAwesomeAnimation
updateEditorGeometry	cv_image_delegate.cpp	/^void CvImageDelegate::updateEditorGeometry(QWidget *editor,$/;"	function	line:44	language:C++	class:CvImageDelegate
updateEditorGeometry	treeitem_file_delegate.cpp	/^void TreeItemFileDelegate::updateEditorGeometry(QWidget *editor, const QStyleOptionViewItem &option, const QModelIndex &index) const {$/;"	function	line:439	language:C++	class:TreeItemFileDelegate
updateImage	cv_image_widget.cpp	/^void CVImageWidget::updateImage() {$/;"	function	line:78	language:C++	class:CVImageWidget
updateProgressBar	configwin.cpp	/^void MainWindow::updateProgressBar( int lower_range, int current_value, int upper_range ){$/;"	function	line:767	language:C++	class:MainWindow
updateProgressBar	configwin.cpp	/^void MainWindow::updateProgressBar( int lower_range, int current_value, int upper_range, bool error ){$/;"	function	line:773	language:C++	class:MainWindow
update_ColumnCount_from_defocus_range_number_samples	gui_tdmap_table.cpp	/^void TDMap_Table::update_ColumnCount_from_defocus_range_number_samples( int signal_item_changed_column ){$/;"	function	line:99	language:C++	class:TDMap_Table
update_RowCount_from_thickness_range_number_samples	gui_tdmap_table.cpp	/^void TDMap_Table::update_RowCount_from_thickness_range_number_samples( int signal_item_changed_column ){$/;"	function	line:72	language:C++	class:TDMap_Table
update_cells	gui_tdmap_table.cpp	/^void TDMap_Table::update_cells(){$/;"	function	line:187	language:C++	class:TDMap_Table
update_column_size	gui_tdmap_table.cpp	/^void TDMap_Table::update_column_size(){$/;"	function	line:83	language:C++	class:TDMap_Table
update_from_SuperCell_edge_failure	configwin.cpp	/^void MainWindow::update_from_SuperCell_edge_failure(){$/;"	function	line:491	language:C++	class:MainWindow
update_from_SuperCell_edge_sucess	configwin.cpp	/^void MainWindow::update_from_SuperCell_edge_sucess(){$/;"	function	line:486	language:C++	class:MainWindow
update_from_TDMap_failure	configwin.cpp	/^void MainWindow::update_from_TDMap_failure(){$/;"	function	line:472	language:C++	class:MainWindow
update_from_TDMap_sucess	configwin.cpp	/^void MainWindow::update_from_TDMap_sucess( ){$/;"	function	line:466	language:C++	class:MainWindow
update_full_experimental_image	configwin.cpp	/^void MainWindow::update_full_experimental_image(){$/;"	function	line:412	language:C++	class:MainWindow
update_headers	gui_tdmap_table.cpp	/^void TDMap_Table::update_headers(){$/;"	function	line:116	language:C++	class:TDMap_Table
update_qline_image_path	configwin.cpp	/^bool MainWindow::update_qline_image_path( std::string fileName ){$/;"	function	line:363	language:C++	class:MainWindow
update_roi	deprecated/image_crystal.cpp	/^void Image_Crystal::update_roi(){$/;"	function	line:27	language:C++	class:Image_Crystal
update_roi_boundary_polygon_from_full_boundaries	image_bounds.cpp	/^bool ImageBounds::update_roi_boundary_polygon_from_full_boundaries(){$/;"	function	line:173	language:C++	class:ImageBounds
update_roi_experimental_image_frame	configwin.cpp	/^void MainWindow::update_roi_experimental_image_frame(){$/;"	function	line:425	language:C++	class:MainWindow
update_roi_full_experimental_image_frame	configwin.cpp	/^void MainWindow::update_roi_full_experimental_image_frame(){$/;"	function	line:433	language:C++	class:MainWindow
update_row_size	gui_tdmap_table.cpp	/^void TDMap_Table::update_row_size(){$/;"	function	line:91	language:C++	class:TDMap_Table
update_simgrid_frame	configwin.cpp	/^void MainWindow::update_simgrid_frame(){$/;"	function	line:373	language:C++	class:MainWindow
update_super_cell_target_region	configwin.cpp	/^void MainWindow::update_super_cell_target_region(){$/;"	function	line:378	language:C++	class:MainWindow
update_super_cell_target_region_shapes	configwin.cpp	/^void MainWindow::update_super_cell_target_region_shapes(){$/;"	function	line:387	language:C++	class:MainWindow
update_tdmap_best_match	configwin.cpp	/^void MainWindow::update_tdmap_best_match( int x,int y ){$/;"	function	line:272	language:C++	class:MainWindow
update_tdmap_celslc_ended	configwin.cpp	/^void MainWindow::update_tdmap_celslc_ended( bool result ){$/;"	function	line:163	language:C++	class:MainWindow
update_tdmap_celslc_started	configwin.cpp	/^void MainWindow::update_tdmap_celslc_started( ){$/;"	function	line:158	language:C++	class:MainWindow
update_tdmap_celslc_step	configwin.cpp	/^void MainWindow::update_tdmap_celslc_step( int at_step ){$/;"	function	line:239	language:C++	class:MainWindow
update_tdmap_current_selection	configwin.cpp	/^void MainWindow::update_tdmap_current_selection(int x,int y){$/;"	function	line:308	language:C++	class:MainWindow
update_tdmap_msa_ended	configwin.cpp	/^void MainWindow::update_tdmap_msa_ended( bool result ){$/;"	function	line:179	language:C++	class:MainWindow
update_tdmap_msa_started	configwin.cpp	/^void MainWindow::update_tdmap_msa_started( ){$/;"	function	line:174	language:C++	class:MainWindow
update_tdmap_no_simgrid_ended	configwin.cpp	/^void MainWindow::update_tdmap_no_simgrid_ended( bool result ){$/;"	function	line:228	language:C++	class:MainWindow
update_tdmap_sim_ostream_celslc	configwin.cpp	/^void MainWindow::update_tdmap_sim_ostream_celslc(){$/;"	function	line:519	language:C++	class:MainWindow
update_tdmap_sim_ostream_msa	configwin.cpp	/^void MainWindow::update_tdmap_sim_ostream_msa(){$/;"	function	line:539	language:C++	class:MainWindow
update_tdmap_sim_ostream_simgrid	configwin.cpp	/^void MainWindow::update_tdmap_sim_ostream_simgrid(){$/;"	function	line:579	language:C++	class:MainWindow
update_tdmap_sim_ostream_wavimg	configwin.cpp	/^void MainWindow::update_tdmap_sim_ostream_wavimg(){$/;"	function	line:559	language:C++	class:MainWindow
update_tdmap_simgrid_ended	configwin.cpp	/^void MainWindow::update_tdmap_simgrid_ended( bool result ){$/;"	function	line:217	language:C++	class:MainWindow
update_tdmap_simgrid_started	configwin.cpp	/^void MainWindow::update_tdmap_simgrid_started( ){$/;"	function	line:210	language:C++	class:MainWindow
update_tdmap_wavimg_ended	configwin.cpp	/^void MainWindow::update_tdmap_wavimg_ended( bool result ){$/;"	function	line:197	language:C++	class:MainWindow
update_tdmap_wavimg_started	configwin.cpp	/^void MainWindow::update_tdmap_wavimg_started( ){$/;"	function	line:192	language:C++	class:MainWindow
update_track_var	group_options.cpp	/^bool group_options::update_track_var( std::string varname ){$/;"	function	line:59	language:C++	class:group_options
upload	QtAwesome.h	/^      upload                           = 0xf093,$/;"	enumerator	line:749	language:C++	enum:fa::icon
upward_vector_hkl	base_cell.hpp	/^    cv::Point3d upward_vector_hkl;$/;"	member	line:155	language:C++	class:BaseCell	access:protected
usb	QtAwesome.h	/^      usb                              = 0xf287,$/;"	enumerator	line:750	language:C++	enum:fa::icon
usd	QtAwesome.h	/^      usd                              = 0xf155,$/;"	enumerator	line:751	language:C++	enum:fa::icon
use	vis/program.cpp	/^void Program::use() const {$/;"	function	line:57	language:C++	class:Program
user	QtAwesome.h	/^      user                             = 0xf007,$/;"	enumerator	line:752	language:C++	enum:fa::icon
usercircle	QtAwesome.h	/^      usercircle                       = 0xf2bd,$/;"	enumerator	line:753	language:C++	enum:fa::icon
usercircleo	QtAwesome.h	/^      usercircleo                      = 0xf2be,$/;"	enumerator	line:754	language:C++	enum:fa::icon
usermd	QtAwesome.h	/^      usermd                           = 0xf0f0,$/;"	enumerator	line:755	language:C++	enum:fa::icon
usero	QtAwesome.h	/^      usero                            = 0xf2c0,$/;"	enumerator	line:756	language:C++	enum:fa::icon
userplus	QtAwesome.h	/^      userplus                         = 0xf234,$/;"	enumerator	line:757	language:C++	enum:fa::icon
users	QtAwesome.h	/^      users                            = 0xf0c0,$/;"	enumerator	line:760	language:C++	enum:fa::icon
usersecret	QtAwesome.h	/^      usersecret                       = 0xf21b,$/;"	enumerator	line:758	language:C++	enum:fa::icon
usertimes	QtAwesome.h	/^      usertimes                        = 0xf235,$/;"	enumerator	line:759	language:C++	enum:fa::icon
valence	atom_info.cpp	/^int Atom_Info::valence() {$/;"	function	line:81	language:C++	class:Atom_Info
validate	qdouble_validator.cpp	/^QValidator::State QDoubleValidatorReporter::validate(QString& input, int& pos ) const {$/;"	function	line:12	language:C++	class:QDoubleValidatorReporter
validate	qint_validator.cpp	/^QValidator::State QIntValidatorReporter::validate(QString& input, int& pos ) const {$/;"	function	line:13	language:C++	class:QIntValidatorReporter
value	gui_tdmap_cell.cpp	/^QVariant TDMap_Cell::value() const {$/;"	function	line:25	language:C++	class:TDMap_Cell
vanDerWaalsRadius	atom_info.cpp	/^double Atom_Info::vanDerWaalsRadius()  {$/;"	function	line:106	language:C++	class:Atom_Info
variables_map	group_options.h	/^    std::map<std::string,std::string> variables_map;$/;"	member	line:18	language:C++	class:group_options	access:private
vcard	QtAwesome.h	/^      vcard                            = 0xf2bb,$/;"	enumerator	line:761	language:C++	enum:fa::icon
vcardo	QtAwesome.h	/^      vcardo                           = 0xf2bc,$/;"	enumerator	line:762	language:C++	enum:fa::icon
vector_t	base_cell.hpp	/^    cv::Point3d vector_t;$/;"	member	line:156	language:C++	class:BaseCell	access:protected
venus	QtAwesome.h	/^      venus                            = 0xf221,$/;"	enumerator	line:763	language:C++	enum:fa::icon
venusdouble	QtAwesome.h	/^      venusdouble                      = 0xf226,$/;"	enumerator	line:764	language:C++	enum:fa::icon
venusmars	QtAwesome.h	/^      venusmars                        = 0xf228,$/;"	enumerator	line:765	language:C++	enum:fa::icon
viacoin	QtAwesome.h	/^      viacoin                          = 0xf237,$/;"	enumerator	line:766	language:C++	enum:fa::icon
viadeo	QtAwesome.h	/^      viadeo                           = 0xf2a9,$/;"	enumerator	line:767	language:C++	enum:fa::icon
viadeosquare	QtAwesome.h	/^      viadeosquare                     = 0xf2aa,$/;"	enumerator	line:768	language:C++	enum:fa::icon
videocamera	QtAwesome.h	/^      videocamera                      = 0xf03d,$/;"	enumerator	line:769	language:C++	enum:fa::icon
view	vis/camera.cpp	/^glm::mat4 Camera::view() const {$/;"	function	line:151	language:C++	class:Camera
viewportAspectRatio	vis/camera.cpp	/^float Camera::viewportAspectRatio() const {$/;"	function	line:117	language:C++	class:Camera
vimeo	QtAwesome.h	/^      vimeo                            = 0xf27d,$/;"	enumerator	line:770	language:C++	enum:fa::icon
vimeosquare	QtAwesome.h	/^      vimeosquare                      = 0xf194,$/;"	enumerator	line:771	language:C++	enum:fa::icon
vine	QtAwesome.h	/^      vine                             = 0xf1ca,$/;"	enumerator	line:772	language:C++	enum:fa::icon
vis	vis/camera.hpp	/^namespace vis {$/;"	namespace	line:7	language:C++
vis	vis/program.hpp	/^namespace vis {$/;"	namespace	line:7	language:C++
vis	vis/shader.hpp	/^namespace vis {$/;"	namespace	line:6	language:C++
vk	QtAwesome.h	/^      vk                               = 0xf189,$/;"	enumerator	line:773	language:C++	enum:fa::icon
volumecontrolphone	QtAwesome.h	/^      volumecontrolphone               = 0xf2a0,$/;"	enumerator	line:774	language:C++	enum:fa::icon
volumedown	QtAwesome.h	/^      volumedown                       = 0xf027,$/;"	enumerator	line:775	language:C++	enum:fa::icon
volumeoff	QtAwesome.h	/^      volumeoff                        = 0xf026,$/;"	enumerator	line:776	language:C++	enum:fa::icon
volumeup	QtAwesome.h	/^      volumeup                         = 0xf028,$/;"	enumerator	line:777	language:C++	enum:fa::icon
warning	QtAwesome.h	/^      warning                          = 0xf071,$/;"	enumerator	line:778	language:C++	enum:fa::icon
warning	application_log.hpp	/^    warning,$/;"	enumerator	line:30	language:C++	enum:ApplicationLog::severity_level
wav_output_target_folder	base_crystal.hpp	/^    std::string wav_output_target_folder;$/;"	member	line:99	language:C++	class:BaseCrystal	access:protected
wave_function_name	msa_prm.hpp	/^    std::string wave_function_name;$/;"	member	line:46	language:C++	class:MSA_prm	access:private
wavimg_parameters	simgrid.hpp	/^    WAVIMG_prm* wavimg_parameters = nullptr;$/;"	member	line:86	language:C++	class:SimGrid	access:private
wavimg_step_group_options	configwin.h	/^    group_options* wavimg_step_group_options;$/;"	member	line:270	language:C++	class:MainWindow	access:private
wavimg_step_group_options	td_map.hpp	/^    group_options* wavimg_step_group_options;$/;"	member	line:93	language:C++	class:TDMap	access:private
wechat	QtAwesome.h	/^      wechat                           = 0xf1d7,$/;"	enumerator	line:779	language:C++	enum:fa::icon
weibo	QtAwesome.h	/^      weibo                            = 0xf18a,$/;"	enumerator	line:780	language:C++	enum:fa::icon
weixin	QtAwesome.h	/^      weixin                           = 0xf1d7,$/;"	enumerator	line:781	language:C++	enum:fa::icon
whatsapp	QtAwesome.h	/^      whatsapp                         = 0xf232,$/;"	enumerator	line:782	language:C++	enum:fa::icon
wheelchair	QtAwesome.h	/^      wheelchair                       = 0xf193,$/;"	enumerator	line:783	language:C++	enum:fa::icon
wheelchairalt	QtAwesome.h	/^      wheelchairalt                    = 0xf29b,$/;"	enumerator	line:784	language:C++	enum:fa::icon
width_px	base_cell.hpp	/^    int width_px;$/;"	member	line:146	language:C++	class:BaseCell	access:protected
wifi	QtAwesome.h	/^      wifi                             = 0xf1eb,$/;"	enumerator	line:785	language:C++	enum:fa::icon
wikipediaw	QtAwesome.h	/^      wikipediaw                       = 0xf266,$/;"	enumerator	line:786	language:C++	enum:fa::icon
windowclose	QtAwesome.h	/^      windowclose                      = 0xf2d3,$/;"	enumerator	line:787	language:C++	enum:fa::icon
windowcloseo	QtAwesome.h	/^      windowcloseo                     = 0xf2d4,$/;"	enumerator	line:788	language:C++	enum:fa::icon
windowmaximize	QtAwesome.h	/^      windowmaximize                   = 0xf2d0,$/;"	enumerator	line:789	language:C++	enum:fa::icon
windowminimize	QtAwesome.h	/^      windowminimize                   = 0xf2d1,$/;"	enumerator	line:790	language:C++	enum:fa::icon
windowrestore	QtAwesome.h	/^      windowrestore                    = 0xf2d2,$/;"	enumerator	line:791	language:C++	enum:fa::icon
windows	QtAwesome.h	/^      windows                          = 0xf17a,$/;"	enumerator	line:792	language:C++	enum:fa::icon
won	QtAwesome.h	/^      won                              = 0xf159,$/;"	enumerator	line:793	language:C++	enum:fa::icon
wordpress	QtAwesome.h	/^      wordpress                        = 0xf19a,$/;"	enumerator	line:794	language:C++	enum:fa::icon
wpbeginner	QtAwesome.h	/^      wpbeginner                       = 0xf297,$/;"	enumerator	line:795	language:C++	enum:fa::icon
wpexplorer	QtAwesome.h	/^      wpexplorer                       = 0xf2de,$/;"	enumerator	line:796	language:C++	enum:fa::icon
wpforms	QtAwesome.h	/^      wpforms                          = 0xf298,$/;"	enumerator	line:797	language:C++	enum:fa::icon
wrench	QtAwesome.h	/^      wrench                           = 0xf0ad,$/;"	enumerator	line:798	language:C++	enum:fa::icon
writeSettings	configwin.cpp	/^void MainWindow::writeSettings(){$/;"	function	line:876	language:C++	class:MainWindow
xing	QtAwesome.h	/^      xing                             = 0xf168,$/;"	enumerator	line:799	language:C++	enum:fa::icon
xingsquare	QtAwesome.h	/^      xingsquare                       = 0xf169,$/;"	enumerator	line:800	language:C++	enum:fa::icon
xsputn	gui_stream.hpp	/^    virtual std::streamsize xsputn(const char *p, std::streamsize n){$/;"	function	line:50	language:C++	class:Q_GUI_Stream	access:protected
yahoo	QtAwesome.h	/^      yahoo                            = 0xf19e,$/;"	enumerator	line:803	language:C++	enum:fa::icon
yc	QtAwesome.h	/^      yc                               = 0xf23b,$/;"	enumerator	line:804	language:C++	enum:fa::icon
ycombinator	QtAwesome.h	/^      ycombinator                      = 0xf23b,$/;"	enumerator	line:801	language:C++	enum:fa::icon
ycombinatorsquare	QtAwesome.h	/^      ycombinatorsquare                = 0xf1d4,$/;"	enumerator	line:802	language:C++	enum:fa::icon
ycsquare	QtAwesome.h	/^      ycsquare                         = 0xf1d4,$/;"	enumerator	line:805	language:C++	enum:fa::icon
yelp	QtAwesome.h	/^      yelp                             = 0xf1e9,$/;"	enumerator	line:806	language:C++	enum:fa::icon
yen	QtAwesome.h	/^      yen                              = 0xf157,$/;"	enumerator	line:807	language:C++	enum:fa::icon
yoast	QtAwesome.h	/^      yoast                            = 0xf2b1,$/;"	enumerator	line:808	language:C++	enum:fa::icon
youtube	QtAwesome.h	/^      youtube                          = 0xf167,$/;"	enumerator	line:809	language:C++	enum:fa::icon
youtubeplay	QtAwesome.h	/^      youtubeplay                      = 0xf16a,$/;"	enumerator	line:810	language:C++	enum:fa::icon
youtubesquare	QtAwesome.h	/^      youtubesquare                    = 0xf166$/;"	enumerator	line:811	language:C++	enum:fa::icon
yylval	mc_scanner.hpp	/^      MC::MC_Parser::semantic_type *yylval = nullptr;$/;"	member	line:36	language:C++	class:MC::MC_Scanner	access:private
zone_axis	base_crystal.hpp	/^    cv::Point3d  zone_axis;$/;"	member	line:64	language:C++	class:BaseCrystal	access:protected
zone_axis_u	base_crystal.hpp	/^    double zone_axis_u = 0.0f;$/;"	member	line:65	language:C++	class:BaseCrystal	access:protected
zone_axis_v	base_crystal.hpp	/^    double zone_axis_v = 0.0f;$/;"	member	line:66	language:C++	class:BaseCrystal	access:protected
zone_axis_vector_uvw	base_cell.hpp	/^    cv::Point3d zone_axis_vector_uvw;$/;"	member	line:152	language:C++	class:BaseCell	access:protected
zone_axis_w	base_crystal.hpp	/^    double zone_axis_w = 0.0f;$/;"	member	line:67	language:C++	class:BaseCrystal	access:protected
zoomIn	cv_image_widget.cpp	/^void CVImageWidget::zoomIn(){$/;"	function	line:21	language:C++	class:CVImageWidget
zoomOut	cv_image_widget.cpp	/^void CVImageWidget::zoomOut(){$/;"	function	line:25	language:C++	class:CVImageWidget
~BaseBin	base_bin.hpp	/^    virtual ~BaseBin() {} \/\/Let's not forget to have destructor virtual$/;"	function	line:66	language:C++	class:BaseBin	access:public
~BaseCrystal	base_crystal.hpp	/^    virtual ~BaseCrystal() {} \/\/Let's not forget to have destructor virtual$/;"	function	line:150	language:C++	class:BaseCrystal	access:public
~EMDWrapper	emd_wrapper.cpp	/^EMDWrapper::~EMDWrapper(){$/;"	function	line:5	language:C++	class:EMDWrapper
~FilePushButton	qt_file_push_button.h	/^    virtual ~FilePushButton() {}$/;"	function	line:13	language:C++	class:FilePushButton	access:public
~MC_Driver	mc_driver.cpp	/^MC::MC_Driver::~MC_Driver(){$/;"	function	line:15	language:C++	class:MC::MC_Driver
~MC_Scanner	mc_scanner.hpp	/^      virtual ~MC_Scanner() {$/;"	function	line:21	language:C++	class:MC::MC_Scanner	access:public
~MainWindow	configwin.cpp	/^MainWindow::~MainWindow(){$/;"	function	line:345	language:C++	class:MainWindow
~Program	vis/program.cpp	/^Program::~Program() {$/;"	function	line:48	language:C++	class:Program
~Q_GUI_Stream	gui_stream.hpp	/^    ~Q_GUI_Stream()$/;"	function	line:21	language:C++	class:Q_GUI_Stream	access:public
~QtAwesome	QtAwesome.cpp	/^QtAwesome::~QtAwesome()$/;"	function	line:147	language:C++	class:QtAwesome
~QtAwesomeIconPainter	QtAwesome.h	/^    virtual ~QtAwesomeIconPainter() {}$/;"	function	line:870	language:C++	class:QtAwesomeIconPainter	access:public
~QtAwesomeIconPainterIconEngine	QtAwesome.cpp	/^    virtual ~QtAwesomeIconPainterIconEngine() {}$/;"	function	line:90	language:C++	class:QtAwesomeIconPainterIconEngine	access:public
~Settings	settings.cpp	/^Settings::~Settings(){$/;"	function	line:11	language:C++	class:Settings
~Shader	vis/shader.cpp	/^Shader::~Shader() {$/;"	function	line:55	language:C++	class:Shader
~TreeItem	treeitem.cpp	/^TreeItem::~TreeItem(){$/;"	function	line:165	language:C++	class:TreeItem
~TreeModel	treemodel.cpp	/^TreeModel::~TreeModel(){$/;"	function	line:13	language:C++	class:TreeModel
